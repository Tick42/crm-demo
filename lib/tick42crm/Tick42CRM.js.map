{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///Tick42CRM.js","webpack:///webpack/bootstrap 5c67e397ae424b7b11c7","webpack:///./~/objectmodel/dist/object-model.umd.js","webpack:///./src/models/Contact.js","webpack:///./src/constants.js","webpack:///./src/models/Address.js","webpack:///./src/models/Id.js","webpack:///./src/models/Phone.js","webpack:///./src/config.js","webpack:///./src/crm.js","webpack:///./~/tick42-glue-core/dist/web/tick42-glue-core.js","webpack:///./src/Controllers/AccountController.js","webpack:///./src/Controllers/ContactController.js","webpack:///./src/GSS/entities/Account.js","webpack:///./src/GSS/entities/Contact.js","webpack:///./src/GSS/entities/index.js","webpack:///./src/GSS/index.js","webpack:///./src/methods.js","webpack:///./src/models/Account.js","webpack:///./src/models/Name.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","globals","undefined","is","Constructor","obj","isFunction","isObject","isPlainObject","getPrototypeOf","bettertypeof","toString","match","cloneArray","arr","Array","slice","defaultTo","defaultVal","val","merge","target","src","deep","includingProto","key","writable","setConstructor","model","constructor","setPrototypeOf","PROTO","CONSTRUCTOR","setConstructorProto","proto","create","stack","length","indexOf","String","Model","concat","map","item","join","indent","props","keys","def","OBJECT","DEFAULT","VALIDATE","initModel","arguments","args","Error","DEFINITION","ASSERTIONS","ERROR_STACK","parseDefinition","forEach","checkDefinition","path","callStack","errorStack","shouldCast","indexFound","cast","VALIDATOR","pdef","checkDefinitionPart","err","EXPECTED","RECEIVED","PATH","push","RegExp","test","Number","Date","isNaN","checkAssertions","assertionResult","assert","description","DESCRIPTION","onFail","MESSAGE","defNode","suitableModels","defPart","TEST","nbSuitableModels","console","warn","getProxy","wrapper","proxy","newPath","isConstant","CONVENTION_CONSTANT","set","newProxy","oldValue","UNSTACK","CONVENTION_PRIVATE","proxifyArrayKey","array","setArrayKey","proxifyArrayMethod","method","testArray","apply","isProxySupported","returnValue","ARRAY","parseInt","FUNCTION","EXTEND","ASSERT","ERROR_COLLECTOR","DEFAULT_TO","DEFAULTS","RETURN","ARGS","ARRAY_MUTATOR_METHODS","STACKTRACE_BLACKBOX_MATCHER","Proxy","Function","results","__proto__","ModelProto","errorCollector","failed","initialErrorCollector","assertions","arg","reduce","ext","filter","index","self","submodel","assertion","errors","e","TypeError","replace","toUpperCase","ObjectModelProto","ArrayModelProto","fn","proxyFn","argDef","FunctionModelProto","out","f","Id","Name","Address","Phone","ids","displayName","status","isPerson","Boolean","account","addresses","phones","emails","CRM_PREFIX","SIGNATURES","CONTACT","ACCOUNT","CONTACTS","streetAddress","city","stateOrRegion","postalCode","country","nativeId","systemName","number","side","glue","gateway","ws","http","protocolVersion","timeout","CRM","agm","config","ContactController","AccountController","availableMethods","getMethods","GSS","GSSCreator","GetContact","CreateContact","ResolveContact","resolve","UpdateContact","update","DeleteContact","SyncContact","sync","LogContactCall","logCall","CreateAccount","GetAccount","ResolveAccount","UpdateAccount","DeleteAccount","SyncAccount","QueryAccount","query","search","QueryContact","ResolveAccountContactList","resolveContactList","on","handler","find","constants","registerAsync","onSearch","addEntityType","methods","g","eval","window","createRegistry","add","callback","callbacksForKey","callbacks","allForKey","execute","argumentsArr","_i","result","shortid","convertInfoToInstance","info","application","ApplicationName","environment","Environment","machine","MachineName","pid","ProcessId","region","Region","service","ServiceName","user","UserName","started","ProcessStartTime","isStreamingFlagSet","flags","mask","reset","shuffled","setCharacters","_alphabet_","alphabet","ORIGINAL","unique","split","ind","lastIndexOf","characters","setSeed","seed","randomFromSeed","previousSeed","shuffle","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","splice","getShuffled","lookup","promise","successCallback","errorCallback","then","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","type","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","url","bundleDependencies","dependencies","callback-registry","util-deprecate","deprecated","devDependencies","babel-core","babel-loader","babel-plugin-add-module-exports","babel-plugin-es6-promise","babel-preset-es2015","babel-preset-stage-2","blanket","bluebird","docdash","eslint","eslint-config-standard","eslint-config-tick42","eslint-plugin-promise","eslint-plugin-standard","http-server","minifyify","onchange","phantomjs","pre-commit","qunitjs","shelljs","tick42-webpack-config","webpack","keywords","main","precommit","scripts","build","eslint:fix","generate-docs","prepublish","serve","watch","watch-docs","title","types","version","tick42_metrics_1","tick42_gateway_connection_1","tick42_logger_1","tick42_agm_1","config_1","dummyConnection_1","timer_1","es6_promise_1","GlueCore","userConfig","registerLib","inner","timer","initStartTime","startTime","ready","initTime","stop","initEndTime","endTime","libs","setupConnection","initTimer","internalConfig","connection","logger","_logger","subLogger","_connection","auth","Promise","reject","authRequest","token","JSON","stringify","login","identity","instance","username","setupLogger","loggerConfig","metrics","getConnection","publish","setupMetrics","_rootMetrics","_metrics","subSystem","metricsLevel","parent","setupAGM","agmConfig","agmLib","_agm","setupExternalLibs","externalLibs","lib","setupExternalLib","createCallback","waitForLibs","libsReadyPromises","all","constructGlueObject","feedbackFunc","invoke","glueVersion","glueInitTimer","feedback","performance","browser","timing","memory","initTimes","time","period","hc","perfDataNeeded","updatePerfData","delay","perfDataDelay","setTimeout","enrichGlue","k","extOptions","htmlContainer","process","global","objectOrFunction","x","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useNextTick","nextTick","flush","useVertxTimer","vertxNext","useSetTimeout","useMutationObserver","iterations","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","globalSetTimeout","len","queue","attemptVertx","vertx","runOnLoop","runOnContext","onFulfillment","onRejection","_arguments","child","noop","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","_resolve","selfFulfillment","cannotReturnOwn","getThen","error","GET_THEN_ERROR","tryThen","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","fulfill","reason","_reject","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","then$$","publishRejection","_onerror","PENDING","_subscribers","subscribers","settled","detail","ErrorObject","tryCatch","TRY_CATCH_ERROR","hasCallback","succeeded","initializePromise","resolver","nextId","id","Enumerator","input","_instanceConstructor","isArray","_input","_remaining","_enumerate","validationError","entries","race","_","needsResolver","needsNew","polyfill","local","P","promiseToString","_isArray","scheduleFlush","browserWindow","browserGlobal","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","random","substring","_eachEntry","entry","resolve$$","_then","_settledAt","_willSettleAt","state","enumerator","_setScheduler","_setAsap","_asap","catch","init-dev-mode","remove-installed-dependencies","clean","pre:build","file-versionify","tslint","tslint:fix","build:dev","build:prod","docs","test:only","repository","license","tick42-agm","tick42-gateway-connection","tick42-logger","tick42-metrics","@types/es6-promise","@types/shortid","archiver","chai","es6-promise","mocha","readline-sync","tick42-gateway","typedoc","typescript","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","run","Item","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","decode","substr","worker","encode","done","loopCounter","str","randomByte","pow","generate","seconds","now","REDUCE_TIME","previousSeconds","counter","clusterWorkerId","seedValue","workerId","newCharacters","isValid","isShortId","crypto","getRandomValues","dest","Uint8Array","msCrypto","getNextValue","_seed_","protocol","argumentsObj","stuff","success","invocationId","registerInvocation","calledWith","method_response_timeout","response","pendingCallbacks","called_with","message","processInvocationResult","executedBy","resultMessage","executed_by","returned","onInvocationResult","ClientInvocationsState","promisify","repo","configuration","methodFilter","methodMatch","getMethodsForInstance","instanceFilter","allServers","getServers","matchingServers","server","instanceMatch","resultMethodsObject","methodKey","getInfoForUser","servers","prev","current","getServerMethodsById","matchingMethods","getServerMethodsByFilterAndTarget","filterByTarget","argumentObj","additionalOptions","successProxy","errorProxy","waitTimeoutMs","wait_for_method_timeout","serversMethodMap","invokeUnexisting","serverMethodPair","clientInvocations","invokeOnAll","callError","delayStep","delayTillNow","retry","serverMethodsMap","sendResponse","successes","all_return_values","all_errors","serverMethodsPair","serverMethodMap","matches","myMatches","instanceDefinition","containsProps","methodDefinition","prop","toLowerCase","options","callProtocolSubscribe","targetServers","stream","debug","log","currentServers","methodsForInstance","methodAdded","onMethodAdded","methodRemoved","onMethodRemoved","serverAdded","onServerAdded","serverRemoved","onServerRemoved","serverMethodAdded","onServerMethodAdded","serverMethodRemoved","onServerMethodRemoved","userSubmittedProperties","updateIdentity","newInstance","identityUpdated","State","createGetter","getTime","_updateIdentity","pjson","stringToObject","param","stringPropName","agmParse","parse","v","dateTimeIdentifier","unixTimestampMs","lenOfIdentifier","parseFloat","targetArgToObject","convertInstanceToRegex","serverFilter","instanceConverted","propValue","source","validateMethodInfo","methodInfo","objectTypes","object_types","display_name","facade","jsAgmFacade","jsonValueDatePrefix","register","methodInfoAsObject","pv","agmFacade","tracker","successArgs","unregister","invoke2","bind","jsonResult","parsedResult","getStreams","supportsStreaming","subscribe2","createStream","streamDef","createStream2","subscriptionRequestHandler","subscriptionAddedHandler","subscriptionRemovedHandler","metricsIdentity","metricsConfig","successInit","create_stream","methods_for_instance","method_added","method_removed","server_added","server_removed","server_method_added","server_method_removed","cfgAsString","initAsync","init","Callbacks","addServer","serverId","serverEntry","serverInfo","createUserServerInfo","getServerMethodById","removeServerById","methodId","removeServerMethod","addServerMethod","createMethodId","methodEntity","createUserMethodInfo","getServersByMethod","methodsCount","accepts","returns","allMethods","getServerById","getMethodId","streamFrontObj","repoMethod","definition","branches","getBranchList","branchKey","branchFrontObj","close","closeAllSubscriptions","pushData","subscriptions","getSubscriptionList","sub","subscriptionFrontObj","subscription","closeSingleSubscription","pushDataToSingle","pushToBranch","onSubRequest","requestContext","streamCallbacks","accept","acceptRequestOnBranch","acceptOnBranch","branch","rejectRequest","onSubAdded","onSubRemoved","subscriber","_repoId","_methods","remove","repoId","getById","getList","Promisify","Streaming","vault","onMethodInvoked","methodToExecute","invocationArgs","metric","invocations","theFunction","methodInvocationResult","wrappedCallbackFunction","context","resultCallback","userCallback","registerCore","wrappedCallback","isAsync","request","streaming","numberMetric","onInvoked","nativeAgm","client","gW1Protocol","gW3Protocol","conf","remove_server_on_n_missing_heartbeats","heartbeat_interval","presence_interval","productName","sendAGM","send","onAGM","metricsRoot","protocolPromise","clientRepository","serverRepository","serverGetter","clientGetter","helpers","sendRequest","nextResponseSubject","streamingMethod","ERR_MSG_SUB_FAILED","subscriptionId","pendingSub","registerSubscription","responseSubject","trackedServers","streamId","streamSubjects","private","methodRequestSubject","requestSubject","methodResponseSubject","EventStreamAction","MethodRequestSubject","MethodResponseSubject","Client","Context","ArgumentsJson","InvocationId","ObjectType","object_type","DisplayContext","display_context","MethodName","ExecutionServer","Timeout","subscriptionsList","STATUS_AWAITING_ACCEPT","handlers","onData","onClosed","queued","closers","timeoutId","STATUS_SUBSCRIBED","closersCount","closingServer","ON_CLOSE_MSG_SERVER_INIT","requestArguments","processPublisherMsg","msg","serverIsKickingASubscriber","serverAcknowledgesGoodSubscription","serverHasPushedSomeDataIntoTheStream","deletionsList","isRejecting","isKicking","StreamId","EventStreamSubject","ResultMessage","callArgs","ERR_MSG_SUB_REJECTED","Server","acceptingServer","isFirstResponse","privateStreamSubject","generatePrivateStreamSubject","dataCallback","dataItem","closedCallback","onFailed","closeSubscription","serverInstance","isPrivateData","trackedServersFound","ls","receivedStreamData","ResultContextJson","onDataHandlers","queuedData","subId","ON_CLOSE_MSG_CLIENT_INIT","methodName","callbackRegistry","respCounter","createServerInfo","service_name","metrics_repository_id","MetricsRepositoryId","createMethod","Method","InputSignature","ResultSignature","Description","DisplayName","Version","ObjectTypeRestrictions","Flags","createServerId","processServerPresence","presence","isPresence","Instance","PublishingInterval","scheduleTimeout","MethodDefinitions","updateServerMethods","duration","timers","newMethods","oldMethods","handleInvokeResultMessage","Status","listenForEvents","ServerProtocol","ClientProtocol","serverProtocol","clientProtocol","sendResult","isStreamMsgForStreamingMethod","processSubscriberMsg","clientWishesToSubscribe","clientWishesToUnsubscribe","clientAcknowledgesItDidSubscribe","clientPerSubHeartbeat","requestHandler","closeIndividualSubscription","getBranchKey","privateEventStreamSubject","subAddedHandler","getStreamId","globalEventStreamSubject","MethodVersion","needle","branchKeyToStreamIdMap","needleBranch","generateNewStreamId","streamingMethodName","sendKickMessage","subItem","initialLength","ResponseContextJson","subRemovedHandler","closeMultipleSubscriptions","streamList","br","getUniqueBranchNames","keysWithDuplicates","seen","bKey","addRequestHandler","handlerFunc","addSubAddedHandler","addSubRemovedHandler","isStreamMsg","nextRequestSubject","reqCounter","constructHeartbeat","constructPresence","sendPresence","sendHeartbeat","createNewMethodMessage","methodIdentifier","subject","reqSubj","announceNewMethod","streamConverted","presenceTimer","setInterval","handleMethodInvocationMessage","methodList","invocationMessagesMap","executedMethod","heartbeatTimer","session","getNextSubscriptionLocalKey","nextSubLocalKey","subLocalKey","MSG_TYPE_SUBSCRIBE","server_id","method_id","arguments_kv","handleSubscribed","handleErrorSubscribing","callOnClosedHandlers","errorResponse","tag","_tag","subscription_id","subscriptionIdToLocalKeyMap","handleEventData","sendingServerId","oob","snapshot","handleSubscriptionCancelled","expectedNewLength","closingServerId","sendFireAndForget","reason_uri","handlePeerAdded","newPeerId","new_peer_id","remoteId","handlePeerRemoved","removedPeerId","removed_id","handleMethodsAddedMessage","input_signature","result_signature","handleMethodsRemovedMessage","methodIdList","handleResultMessage","handleInvocationError","serverFactory","clientFactory","libConfig","handleReconnect","peerId","registeredMethods","functionToUse","handleInitialJoin","resolveReadyPromise","readyPromise","domain","onJoined","reconnect","getNextStreamId","nextStreamId","handleAddInterest","caller","caller_id","sendSubscriptionFailed","subscriptionsMap","SUBSCRIPTION_REQUEST","errorMessage","ERR_URI_SUBSCRIPTION_FAILED","request_id","subscribeMsg","stream_id","SUBSCRIPTION_ADDED","onSubscriptionLifetimeEvent","eventName","SUBSCRIPTION_REMOVED","subscriptionsToClose","allSubscriptions","handleRemoveInterest","handleRegisteredMessage","registrationCallbacks","handleErrorRegister","fail","handleInvokeMessage","invocation_id","callerId","isStreaming","methodDef","registerMsg","restrictions","registrationId","peer_id","handleUnregisteredMessage","requestId","types:merged","@types/tick42-logger","dts-generator","ts-node","callback_registry_1","ConnectionImpl","settings","messageHandlers","_connected","_settings","transport","_protocol","_transport","onConnectedChanged","handleConnectionChanged","onMessage","handleTransportMessage","product","isObjectBasedTransport","createObjectMessage","sendObject","strMessage","createStringMessage","messageHandler","connected","disconnected","logout","loggedIn","toAPI","that","distributeMessage","handlerId","msgObj","processStringMessage","processObjectMessage","msgType","__extends","extendStatics","b","__","connection_1","GW3ConnectionImpl","_super","gw3Protocol","superAPI","resolvedIdentity","availableDomains","GW1Protocol","messageObj","MESSAGE_LOGIN","MESSAGE_LOGIN_RESPONSE","MESSAGE_LOGIN_TOKEN","MESSAGE_LOGOUT","MESSAGE_SEND","GW2Protocol","sessionCookie","_this","password","lrSubs","default_1","dateMinLen","datePrefixFirstChar","milliseconds","datePrefixLen","ex","oldToJson","toJSON","datePrefix","loginConfig","shouldTryLogin","authentication","gwToken","getGatewayToken","secret","helloMsg","gw3Domain_1","resolved_identity","available_domains","access_token","setLoggedIn","globalDomain","sessions","leave","isLoggedIn","domainLogger","gwTokenProvider","location","URLSearchParams","handleDisconnected","ping","HCProtocol","HCTransport","connectionId","metricsFacade","loggingFacade","HTTPTransport","interval","httpInterval","httpPost","poll","seq","ondata","getUrl","xmlhttp","createCORSRequest","responseText","nextSeq","nextSequence","onerror","ev","xhr","XMLHttpRequest","open","onreadystatechange","readyState","XDomainRequest","onload","Inproc","gw","connectToken","connect","consoleLevel","WebSocket","WS","_shouldTryConnecting","_registry","waitForSocketConnection","_ws","initiateSocket","onclose","onopen","reconnectInterval","uri","protocols","opts","MozWebSocket","gw3_1","hc_1","ws_1","gw3Connection_1","gw1_1","hc_2","gw2_1","inproc_1","http_1","PackageJson","gw3Connection","gw3Prot","_latestOptions","destination","handleJoined","isJoined","wasReconnect","tryReconnecting","handleConnectionDisconnected","handleConnectionLoggedIn","onLeft","handleErrorMessage","requestsMap","handleSuccessMessage","getNextRequestId","shortid_1","successMsg","errorMsg","_typeof","Symbol","iterator","levels_1","LoggerImpl","metricSystem","_subloggers","_name","_parent","_path","_loggerFullName","existingSub","publishLevel","level","_publishLevel","_consoleLevel","metricsSystem","_metricLevel","objectMetric","_metricSystem","publishMessage","trace","toAPIObject","loggerName","canPublish","toPrint","GetConnection","order","Level","Logger","Message","Time","setState","@types/tick42-gateway-connection","LogLevel","restriction","logger_1","identityStr","system","mainLogger","apiLogger","STRING","NUMBER","COUNT","RATE","STATISTICS","TIMESTAMP","ADDRESS","TIMESPAN","validate","sendFull","subSystems","sendFullSystem","createSystem","createMetric","heartbeat","publishingInterval","heartbeatInterval","updateSystem","serializer_1","updateMetric","instanceInfo","DEFAULT_HEARTBEAT_INTERVAL","joinPromise","rootStateMetric","composite","Value","defineRootMetricsMsg","replayRepo","replaySystem","ss","normalizeMetricName","createMetricsMsg","values","timestamp","stateObj","composeMsgForRootStateMetric","rootMetric","serializeMetric","getMetricValueByType","publishMetricsMsg","_initSystemMetrics","rootSystem","useClickStream","navigator","stringMetric","userAgent","clickStream_1","documentClickHandler","className","tagName","href","page","addEventListener","attachEvent","me","_root","system_1","clickStream","prependListener","prependOnceListener","listeners","addressMetric","newValue","_value","getValueType","helpers_1","resolution","metric_types_1","countMetric","incrementBy","num","increment","decrement","decrementBy","mergeValues","rateMetric","statisticsMetric","timespanMetric","start","timestampMetric","metricToMessage","getMetricDefinition","_definition","getTypeFromValue","Composite","serializeValue","_metric","_valueTypes","valueOf","CompositeValue","InnerMetricName","valueType","getMetricTypeByValue","getTypeByValue","serializedMetrics","memo","innerType","defineNestedComposite","publishNestedComposite","flatten","flat","toFlatten","getHighestState","sort","a","aggregateDescription","idx","aggregatedState","getAggregateState","merged","highestState","repository_1","windowAsAny","tick42","nameSystem","descriptionSystem","_subSystems","_system","_repo","stateDescription","_getOrCreateMetric","metricDef","string_1","number_1","count_1","address_1","object_1","timespan_1","timestamp_1","rate_1","statistics_1","_unionToMetricDef","metricDefinition","expectedType","matching","existing","_buildPath","_arrayToString","separator","aggState","_description","getState","getMetrics","getConfigProp","getGateway","detectNode","gwConfig","inproc","CLOSING","getApplication","getLogger","getAgm","getAuth","getHardDefaults","getMetricsDefaults","uid","documentTitle","getIdentity","containerName","browserWindowName","machineName","getGatewayDefaults","isSecureConnection","defaultProtocol","gatewayURL","isSSL","getDefaultApplicationName","agm_application","prop1","prop2","masterConfigProp1","masterConfig","userProp1","dynamicDefaultsProp1","dynamicDefaults","hardDefaultsProp1","hardDefaults","GLUE_CONFIG","GLUE_DEFAULT_CONFIG","glue_1","Account","Contact","AccountContactList","contacts","autoCreate","delete","Call","contact","participants","dueDate","properties","searchType","T42.Contact","T42.Account","entitiesDefinitions","searchProvider","gss","GlueSearchProvider","measureLatency","searchProviderReady","entity","GssEntityType","fromJS","searchReady","api","entityType","allEntityTypes","searchService","createQuery","entities","isLast","searchProviders","provider","manager","createDesktopManager","providerName","GlueSearchService","onEntityTypes","entityTypes","owner","subsidiaries","websites","emailDomains","billingEmailAddress","companyName","lastName","firstName","otherNames","honorific","postNominalLetters","defaultConfig","CRMCreator","crmConfig","glueConfig","assign","gluePromise"],"mappings":"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","file":"Tick42CRM.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tick42-crm\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tick42-crm\"] = factory();\n\telse\n\t\troot[\"Tick42CRM\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tick42-crm\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tick42-crm\"] = factory();\n\telse\n\t\troot[\"Tick42CRM\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 18);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;// ObjectModel v2.6.1 - http://objectmodel.js.org\r\n;(function (globals, factory) {\r\n if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\r\n else if (typeof exports === 'object') module.exports = factory(); // Node\r\n else globals['Model'] = factory(); // globals\r\n}(this, function () {\r\n// string constants\r\nvar\r\nOBJECT                = \"Object\",\r\nARRAY                 = \"Array\",\r\nFUNCTION              = \"Function\",\r\nCONVENTION_CONSTANT   = \"conventionForConstant\",\r\nCONVENTION_PRIVATE    = \"conventionForPrivate\",\r\nDEFINITION            = \"definition\",\r\nASSERTIONS            = \"assertions\",\r\nDESCRIPTION           = \"_description\",\r\nVALIDATE              = \"validate\",\r\nVALIDATOR             = \"_validator\",\r\nTEST                  = \"test\",\r\nEXTEND                = \"extend\",\r\nASSERT                = \"assert\",\r\nEXPECTED              = \"expected\",\r\nRECEIVED              = \"received\",\r\nPATH                  = \"path\",\r\nMESSAGE               = \"message\",\r\nERROR_STACK           = \"errorStack\",\r\nERROR_COLLECTOR       = \"errorCollector\",\r\nUNSTACK               = \"unstack\",\r\nPROTO                 = \"prototype\",\r\nCONSTRUCTOR           = \"constructor\",\t\r\nDEFAULT               = \"default\",\r\nDEFAULT_TO            = \"defaultTo\",\r\nDEFAULTS              = \"defaults\",\r\nRETURN                = \"return\",\r\nARGS                  = \"arguments\",\r\n\r\nARRAY_MUTATOR_METHODS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"],\r\nSTACKTRACE_BLACKBOX_MATCHER = /\\n.*object-model(.|\\n)*object-model.*/\r\n;\r\nvar isProxySupported = typeof Proxy === \"function\";\r\nvar defineProperty = Object.defineProperty;\r\n\r\n// shim for Function.name for browsers that don't support it. IE, I'm looking at you.\r\nif (!(\"name\" in Function.prototype && \"name\" in (function x() {}))) {\r\n\tdefineProperty(Function.prototype, \"name\", {\r\n\t\tget: function() {\r\n\t\t\tvar results = Function.prototype.toString.call(this).match(/\\s*function\\s+([^\\(\\s]*)\\s*/);\r\n\t\t\treturn results && results[1];\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// shim for Object.setPrototypeOf if __proto__ is supported\r\nif(!Object.setPrototypeOf && is(Array, {__proto__:[]})){\r\n\tObject.setPrototypeOf = function (obj, proto) {\r\n\t\tobj.__proto__ = proto\r\n\t\treturn obj\r\n\t}\r\n}\r\n\r\nfunction is(Constructor, obj){\r\n\treturn obj instanceof Constructor;\r\n}\r\n\r\nfunction isFunction(o){\r\n\treturn typeof o === \"function\";\r\n}\r\n\r\nfunction isObject(o){\r\n    return typeof o === \"object\";\r\n}\r\n\r\nfunction isPlainObject(o){\r\n\treturn o && isObject(o) && Object.getPrototypeOf(o) === Object.prototype;\r\n}\r\n\r\nfunction bettertypeof(obj){\r\n\treturn ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1];\r\n}\r\n\r\nfunction cloneArray(arr){\r\n\treturn Array.prototype.slice.call(arr);\r\n}\r\n\r\nfunction defaultTo(defaultVal, val){\r\n\treturn val === undefined ? defaultVal : val;\r\n}\r\n\r\nfunction merge(target, src, deep, includingProto) {\r\n\tfor(var key in (src || {})){\r\n\t\tif(includingProto || src.hasOwnProperty(key)){\r\n\t\t\tif(deep && isPlainObject(src[key])){\r\n\t\t\t\tvar o = {};\r\n\t\t\t\tmerge(o, target[key], deep);\r\n\t\t\t\tmerge(o, src[key], deep);\r\n\t\t\t\ttarget[key] = o;\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction define(obj, key, val, enumerable) {\r\n\tdefineProperty(obj, key, {\r\n\t\tvalue: val,\r\n\t\tenumerable: enumerable,\r\n\t\twritable: true,\r\n\t\tconfigurable: true\r\n\t});\r\n}\r\n\r\nfunction setConstructor(model, constructor){\r\n\tObject.setPrototypeOf(model, constructor[PROTO]);\r\n\tdefine(model, CONSTRUCTOR, constructor);\r\n}\r\n\r\nfunction setConstructorProto(constructor, proto){\r\n\tconstructor[PROTO] = Object.create(proto);\r\n\tconstructor[PROTO][CONSTRUCTOR] = constructor;\r\n}\r\n\r\nfunction toString(obj, stack){\r\n\tstack = stack || [];\r\n\tif(stack.length > 15 || stack.indexOf(obj) >= 0){ return '...'; }\r\n\tif(obj == null){ return String(obj); }\r\n\tif(typeof obj == \"string\"){ return '\"'+obj+'\"'; }\r\n\tif(is(Model, obj)) return obj.toString(stack);\r\n\tstack = [obj].concat(stack);\r\n\tif(isFunction(obj)){\r\n\t\treturn obj.name || obj.toString(stack);\r\n\t}\r\n\tif(is(Array, obj)){\r\n\t\treturn '[' + obj.map(function(item) {\r\n\t\t\t\treturn toString(item, stack);\r\n\t\t\t}).join(', ') + ']';\r\n\t}\r\n\tif(obj.toString !== Object.prototype.toString){\r\n\t\treturn obj.toString();\r\n\t}\r\n\tif(obj && isObject(obj)){\r\n\t\tvar indent = (new Array(stack.length)).join('\\t');\r\n\t\tvar props = Object.keys(obj);\r\n\t\treturn '{' + props.map(function(key){\r\n\t\t\treturn '\\n' + indent + '\\t' + key + ': ' + toString(obj[key], stack);\r\n\t\t}).join(',') + (props.length ? '\\n' + indent : '') + '}';\r\n\t}\r\n\treturn String(obj)\r\n}\r\nfunction Model(def){\r\n\tif(isPlainObject(def)) return Model[OBJECT](def);\r\n\r\n\tvar model = function(obj) {\r\n\t\tobj = defaultTo(model[DEFAULT], obj);\r\n\t\tmodel[VALIDATE](obj);\r\n\t\treturn obj;\r\n\t};\r\n\r\n\tinitModel(model, arguments, Model);\r\n\treturn model;\r\n}\r\n\r\nsetConstructorProto(Model, Function[PROTO]);\r\nvar ModelProto = Model[PROTO];\r\n\r\nModelProto.toString = function(stack){\r\n\treturn parseDefinition(this[DEFINITION]).map(function(d){\r\n\t\treturn toString(d, stack);\r\n\t}).join(\" or \");\r\n};\r\n\r\nModelProto[ASSERTIONS] = [];\r\n\r\nModelProto[VALIDATE] = function(obj, errorCollector){\r\n\tthis[VALIDATOR](obj, null, [], this[ERROR_STACK]);\r\n\tthis[UNSTACK](errorCollector);\r\n};\r\n\r\nModelProto[TEST] = function(obj){\r\n\tvar failed,\r\n\t    initialErrorCollector = this[ERROR_COLLECTOR];\r\n\tthis[ERROR_COLLECTOR] = function(){ failed = true };\r\n\tthis(obj);\r\n\tthis[ERROR_COLLECTOR] = initialErrorCollector;\r\n\treturn !failed;\r\n};\r\n\r\nModelProto[EXTEND] = function(){\r\n\tvar def, proto,\r\n\t\tassertions = cloneArray(this[ASSERTIONS]),\r\n\t\targs = cloneArray(arguments);\r\n\r\n\tif(is(Model[OBJECT], this)){\r\n\t\tdef = {};\r\n\t\tproto = {};\r\n\t\tmerge(def, this[DEFINITION]);\r\n\t\tmerge(proto, this[PROTO], false, true);\r\n\t\targs.forEach(function(arg){\r\n\t\t\tif(is(Model, arg)){\r\n\t\t\t\tmerge(def, arg[DEFINITION], true);\r\n\t\t\t}\r\n\t\t\tif(isFunction(arg)){\r\n\t\t\t\tmerge(proto, arg[PROTO], true, true);\r\n\t\t\t}\r\n\t\t\tif(isObject(arg)) {\r\n\t\t\t\tmerge(def, arg, true, true);\r\n\t\t\t}\r\n\t\t})\r\n\t\tdelete proto.constructor;\r\n\t} else {\r\n\t\tdef = args\r\n\t\t\t.reduce(function(def, ext){\r\n\t\t\t\treturn def.concat(parseDefinition(ext));\r\n\t\t\t}, parseDefinition(this[DEFINITION]))\r\n\t\t\t.filter(function(value, index, self) {\r\n\t\t\t\treturn self.indexOf(value) === index; // remove duplicates\r\n\t\t\t});\r\n\t}\r\n\r\n\targs.forEach(function(arg){\r\n\t\tif(is(Model, arg)){\r\n\t\t\tassertions = assertions.concat(arg[ASSERTIONS]);\r\n\t\t}\r\n\t});\r\n\r\n\tvar submodel = new this[CONSTRUCTOR](def);\r\n\tsetConstructorProto(submodel, this[PROTO]);\r\n\tmerge(submodel[PROTO], proto);\r\n\tsubmodel[ASSERTIONS] = assertions;\r\n\tsubmodel[ERROR_COLLECTOR] = this[ERROR_COLLECTOR];\r\n\treturn submodel;\r\n};\r\n\r\nModelProto[ASSERT] = function(assertion, description){\r\n\tdescription = description || toString(assertion);\r\n\tdefine(assertion, DESCRIPTION, description);\r\n\tthis[ASSERTIONS] = this[ASSERTIONS].concat(assertion);\r\n\treturn this;\r\n};\r\n\r\nModelProto[DEFAULT_TO] = function(val){\r\n\tthis[DEFAULT] = val;\r\n\treturn this;\r\n}\r\n\r\nModelProto[ERROR_COLLECTOR] = function(errors){\r\n\tvar e = new TypeError(errors.map(function(e){ return e[MESSAGE]; }).join('\\n'));\r\n\tif(e.stack){\r\n\t\te.stack = e.stack.replace(STACKTRACE_BLACKBOX_MATCHER, \"\");\r\n\t}\r\n\tthrow e;\r\n};\r\n\r\nModel[CONVENTION_CONSTANT] = function(key){ return key.toUpperCase() === key };\r\nModel[CONVENTION_PRIVATE] = function(key){ return key[0] === \"_\" };\r\n\r\n// private methods\r\ndefine(ModelProto, VALIDATOR, function(obj, path, callStack, errorStack){\r\n\tcheckDefinition(obj, this[DEFINITION], path, callStack, errorStack);\r\n\tcheckAssertions(obj, this, path, errorStack);\r\n});\r\n\r\n// throw all errors collected\r\ndefine(ModelProto, UNSTACK, function(errorCollector){\r\n\tif(!this[ERROR_STACK].length){\r\n\t\treturn;\r\n\t}\r\n\tif(!errorCollector){\r\n\t\terrorCollector = this[ERROR_COLLECTOR];\r\n\t}\r\n\tvar errors = this[ERROR_STACK].map(function(err){\r\n\t\tif(!err[MESSAGE]){\r\n\t\t\tvar def = is(Array, err[EXPECTED]) ? err[EXPECTED] : [err[EXPECTED]];\r\n\t\t\terr[MESSAGE] = (\"expecting \" + (err[PATH] ? err[PATH] + \" to be \" : \"\")\r\n\t\t\t+ def.map(function(d){ return toString(d); }).join(\" or \")\r\n\t\t\t+ \", got \" + (err[RECEIVED] != null ? bettertypeof(err[RECEIVED]) + \" \" : \"\")\r\n\t\t\t+ toString(err[RECEIVED]))\r\n\t\t}\r\n\t\treturn err;\r\n\t});\r\n\tthis[ERROR_STACK] = [];\r\n\terrorCollector.call(this, errors);\r\n})\r\n\r\nfunction initModel(model, args, constructor){\r\n\tif(args.length === 0) throw new Error(\"Model definition is required\");\r\n\tsetConstructor(model, constructor);\r\n\tmodel[DEFINITION] = args[0];\r\n\tmodel[ASSERTIONS] = model[ASSERTIONS].slice(); // clone from Model.prototype\r\n\tdefine(model, ERROR_STACK, []);\r\n}\r\n\r\nfunction parseDefinition(def){\r\n\tif(!isPlainObject(def)){\r\n\t\tif(!is(Array, def)) return [def];\r\n\t\tif(def.length === 1) return def.concat(undefined, null);\r\n\t} else {\r\n\t\tObject.keys(def).forEach(function(key) {\r\n\t\t\tdef[key] = parseDefinition(def[key]);\r\n\t\t});\r\n\t}\r\n\treturn def;\r\n}\r\n\r\nfunction checkDefinition(obj, def, path, callStack, errorStack, shouldCast){\r\n\tvar indexFound = callStack.indexOf(def);\r\n\tif(indexFound !== -1 && callStack.slice(indexFound+1).indexOf(def) !== -1){\r\n\t\treturn obj; //if found twice in call stack, cycle detected, skip validation\r\n\t}\r\n\r\n\tif(shouldCast) {\r\n\t\tobj = cast(obj, def);\r\n\t}\r\n\r\n\tif(is(Model, def)){\r\n\t\tdef[VALIDATOR](obj, path, callStack.concat(def), errorStack);\r\n\t}\r\n\telse if(isPlainObject(def)) {\r\n\t\tObject.keys(def).forEach(function (key) {\r\n\t\t\tvar val = obj != null ? obj[key] : undefined;\r\n\t\t\tcheckDefinition(val, def[key], path ? path + '.' + key : key, callStack, errorStack);\r\n\t\t});\r\n\t} else {\r\n\t\tvar pdef = parseDefinition(def);\r\n\t\tfor(var i=0, l=pdef.length; i<l; i++){\r\n\t\t\tif(checkDefinitionPart(obj, pdef[i], path, callStack)){\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar err = {};\r\n\t\terr[EXPECTED] = def;\r\n\t\terr[RECEIVED] = obj;\r\n\t\terr[PATH] = path;\r\n\t\terrorStack.push(err);\r\n\t}\r\n\treturn obj;\r\n}\r\n\r\nfunction checkDefinitionPart(obj, def, path, callStack){\r\n\tif(obj == null){\r\n\t\treturn obj === def;\r\n\t}\r\n\tif(isPlainObject(def) || is(Model, def)){ // object or model as part of union type\r\n\t\tvar errorStack = [];\r\n\t\tcheckDefinition(obj, def, path, callStack, errorStack);\r\n\t\treturn !errorStack.length;\r\n\t}\r\n\tif(is(RegExp, def)){\r\n\t\treturn def.test(obj);\r\n\t}\r\n\tif(def === Number || def === Date){\r\n\t\treturn obj[CONSTRUCTOR] === def && !isNaN(obj)\r\n\t}\r\n\r\n\treturn obj === def\r\n\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t|| obj[CONSTRUCTOR] === def;\r\n}\r\n\r\nfunction checkAssertions(obj, model, path, errorStack){\r\n\tfor(var i=0, l=model[ASSERTIONS].length; i<l ; i++){\r\n\t\tvar assert = model[ASSERTIONS][i],\r\n\t\t\tassertionResult,\r\n\t\t\tdescription = assert[DESCRIPTION],\r\n\t\t    onFail = isFunction(description) ? description : function (assertionResult, value) {\r\n\t\t\t\treturn 'assertion \"' + description\r\n\t\t\t\t     + '\" returned ' + toString(assertionResult)\r\n\t\t\t\t     + ' for value ' + toString(value);\r\n\t\t\t};\r\n\t\ttry {\r\n\t\t\tassertionResult = assert.call(model, obj);\r\n\t\t} catch(err){\r\n\t\t\tassertionResult = err;\r\n\t\t}\r\n\t\tif(assertionResult !== true){\r\n\t\t\tvar err = {};\r\n\t\t\terr[MESSAGE] = onFail.call(model, assertionResult, obj)\r\n\t\t\terr[EXPECTED] = assert;\r\n\t\t\terr[RECEIVED] = obj;\r\n\t\t\terr[PATH] = path;\r\n\t\t\terrorStack.push(err);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction cast(obj, defNode){\r\n\tif(!obj || is(Model, obj[CONSTRUCTOR])){\r\n\t\treturn obj; // no value or already a model instance\r\n\t}\r\n\r\n\tvar def = parseDefinition(defNode || []),\r\n\t    suitableModels = [];\r\n\r\n\tfor(var i=0, l=def.length; i<l; i++){\r\n\t\tvar defPart = def[i];\r\n\t\tif(is(Model, defPart) && defPart[TEST](obj)){\r\n\t\t\tsuitableModels.push(defPart);\r\n\t\t}\r\n\t}\r\n\r\n\tvar nbSuitableModels = suitableModels.length;\r\n\tif(nbSuitableModels === 1) {\r\n\t\treturn suitableModels[0](obj); // automatically cast to the suitable model when explicit\r\n\t}\r\n\tif(nbSuitableModels > 1){\r\n\t\tconsole.warn(\"Ambiguous model for value \" + toString(obj)\r\n\t\t\t+ \", could be \" + suitableModels.join(\" or \"));\r\n\t}\r\n\r\n\treturn obj;\r\n}\r\nModel[OBJECT] = function ObjectModel(def){\r\n\r\n\tvar model = function(obj) {\r\n\t\tif(is(model, obj)){\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t\tif(!is(model, this)){\r\n\t\t\treturn new model(obj);\r\n\t\t}\r\n\t\tobj = defaultTo(model[DEFAULT], obj);\r\n\t\tmerge(this, obj, true);\r\n\t\tvar proxy = getProxy(model, this, model[DEFINITION]);\r\n\t\tmodel[VALIDATE](proxy);\r\n\t\treturn proxy;\r\n\t};\r\n\r\n\tsetConstructorProto(model, Object[PROTO]);\r\n\tinitModel(model, arguments, Model[OBJECT]);\r\n\treturn model;\r\n};\r\n\r\nsetConstructorProto(Model[OBJECT], ModelProto);\r\nvar ObjectModelProto = Model[OBJECT][PROTO];\r\n\r\nObjectModelProto[DEFAULTS] = function(p){\r\n\tmerge(this[PROTO], p);\r\n\treturn this;\r\n};\r\n\r\nObjectModelProto.toString = function(stack){\r\n\treturn toString(this[DEFINITION], stack);\r\n};\r\n\r\n// private methods\r\ndefine(ObjectModelProto, VALIDATOR, function(obj, path, callStack, errorStack){\r\n\tif(!isObject(obj)){\r\n\t\tvar err = {};\r\n\t\terr[EXPECTED] = this;\r\n\t\terr[RECEIVED] = obj;\r\n\t\terr[PATH] = path;\r\n\t\terrorStack.push(err);\r\n\t} else {\r\n\t\tcheckDefinition(obj, this[DEFINITION], path, callStack, errorStack);\r\n\t}\r\n\tcheckAssertions(obj, this, path, errorStack);\r\n});\r\n\r\nfunction getProxy(model, obj, defNode, path) {\r\n\tif(!isPlainObject(defNode)) {\r\n\t\treturn cast(obj, defNode);\r\n\t}\r\n\r\n\tvar wrapper = is(Object, obj) ? obj : {};\r\n\tvar proxy = Object.create(Object.getPrototypeOf(wrapper));\r\n\r\n\tfor(var key in wrapper){\r\n\t\tif(wrapper.hasOwnProperty(key) && !(key in defNode)){\r\n\t\t\tproxy[key] = wrapper[key]; // properties out of model definition are kept\r\n\t\t}\r\n\t}\r\n\r\n\tObject.keys(defNode).forEach(function(key) {\r\n\t\tvar newPath = (path ? path + '.' + key : key);\r\n\t\tvar isConstant = Model[CONVENTION_CONSTANT](key);\r\n\t\tvar defPart = defNode[key];\r\n\r\n\t\tif(!isPlainObject(defPart) && wrapper[key] && !is(Model, wrapper[key][CONSTRUCTOR])) {\r\n\t\t\t// cast nested models immediately at parent instanciation\r\n\t\t\twrapper[key] = cast(wrapper[key], defPart);\r\n\t\t}\r\n\r\n\t\tdefineProperty(proxy, key, {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn getProxy(model, wrapper[key], defPart, newPath);\r\n\t\t\t},\r\n\t\t\tset: function (val) {\r\n\t\t\t\tif(isConstant && wrapper[key] !== undefined){\r\n\t\t\t\t\tvar err = {};\r\n\t\t\t\t\terr[MESSAGE] = \"cannot redefine constant \" + key;\r\n\t\t\t\t\tmodel[ERROR_STACK].push(err);\r\n\t\t\t\t}\r\n\t\t\t\tvar newProxy = getProxy(model, val, defPart, newPath);\r\n\t\t\t\tcheckDefinition(newProxy, defPart, newPath, [], model[ERROR_STACK]);\r\n\t\t\t\tvar oldValue = wrapper[key];\r\n\t\t\t\twrapper[key] = newProxy;\r\n\t\t\t\tcheckAssertions(obj, model, newPath, model[ERROR_STACK]);\r\n\t\t\t\tif(model[ERROR_STACK].length){\r\n\t\t\t\t\twrapper[key] = oldValue;\r\n\t\t\t\t\tmodel[UNSTACK]();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tenumerable: !Model[CONVENTION_PRIVATE](key)\r\n\t\t});\r\n\t});\r\n\treturn proxy;\r\n}\r\nModel[ARRAY] = function ArrayModel(def){\r\n\r\n\tvar model = function(array) {\r\n\t\tarray = defaultTo(model[DEFAULT], array);\r\n\r\n\t\tvar proxy;\r\n\t\tmodel[VALIDATE](array);\r\n\t\tif(isProxySupported){\r\n\t\t\tproxy = new Proxy(array, {\r\n\t\t\t\tget: function (arr, key) {\r\n\t\t\t\t\tif(key === CONSTRUCTOR){\r\n\t\t\t\t\t\treturn model;\r\n\t\t\t\t\t} else if(ARRAY_MUTATOR_METHODS.indexOf(key) >= 0){\r\n\t\t\t\t\t\treturn proxifyArrayMethod(arr, key, model);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arr[key];\r\n\t\t\t\t},\r\n\t\t\t\tset: function (arr, key, val) {\r\n\t\t\t\t\tsetArrayKey(arr, key, val, model);\r\n\t\t\t\t},\r\n\t\t\t\tgetPrototypeOf: function(){\r\n\t\t\t\t\treturn model[PROTO];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tproxy = Object.create(Array[PROTO]);\r\n\t\t\tfor(var key in array){\r\n\t\t\t\tif(array.hasOwnProperty(key)){\r\n\t\t\t\t\tproxifyArrayKey(proxy, array, key, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdefineProperty(proxy, \"length\", { get: function() { return array.length; } });\r\n\t\t\tdefineProperty(proxy, \"toJSON\", { value: function() { return array; } });\r\n\t\t\tARRAY_MUTATOR_METHODS.forEach(function (method) {\r\n\t\t\t\tdefine(proxy, method, proxifyArrayMethod(array, method, model, proxy));\r\n\t\t\t});\r\n\t\t\tsetConstructor(proxy, model);\r\n\t\t}\r\n\r\n\t\treturn proxy;\r\n\t};\r\n\r\n\tsetConstructorProto(model, Array[PROTO]);\r\n\tinitModel(model, arguments, Model[ARRAY]);\r\n\treturn model;\r\n};\r\n\r\nsetConstructorProto(Model[ARRAY], Model[PROTO]);\r\nvar ArrayModelProto = Model[ARRAY][PROTO];\r\n\r\nArrayModelProto.toString = function(stack){\r\n\treturn ARRAY + ' of ' + toString(this[DEFINITION], stack);\r\n};\r\n\r\n// private methods\r\ndefine(ArrayModelProto, VALIDATOR, function(arr, path, callStack, errorStack){\r\n\tif(!is(Array, arr)){\r\n\t\tvar err = {};\r\n\t\terr[EXPECTED] = this;\r\n\t\terr[RECEIVED] = arr;\r\n\t\terr[PATH] = path;\r\n\t\terrorStack.push(err);\r\n\t} else {\r\n\t\tfor(var i=0, l=arr.length; i<l; i++){\r\n\t\t\tarr[i] = checkDefinition(arr[i], this[DEFINITION], (path||ARRAY)+'['+i+']', callStack, errorStack, true);\r\n\t\t}\r\n\t}\r\n\tcheckAssertions(arr, this, path, errorStack);\r\n});\r\n\r\nfunction proxifyArrayKey(proxy, array, key, model){\r\n\tdefineProperty(proxy, key, {\r\n\t\tenumerable: true,\r\n\t\tget: function () {\r\n\t\t\treturn array[key];\r\n\t\t},\r\n\t\tset: function (val) {\r\n\t\t\tsetArrayKey(array, key, val, model);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction proxifyArrayMethod(array, method, model, proxy){\r\n\treturn function() {\r\n\t\tvar testArray = array.slice();\r\n\t\tArray[PROTO][method].apply(testArray, arguments);\r\n\t\tmodel[VALIDATE](testArray);\r\n\r\n\t\tif(!isProxySupported){\r\n\t\t\tfor(var key in testArray){ // proxify new array keys if any after method call\r\n\t\t\t\tif(testArray.hasOwnProperty(key) && !(key in proxy)){\r\n\t\t\t\t\tproxifyArrayKey(proxy, array, key, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar returnValue = Array[PROTO][method].apply(array, arguments);\r\n\t\tfor(var i=0, l=array.length; i<l; i++) {\r\n\t\t\tarray[i] = cast(array[i], model[DEFINITION]);\r\n\t\t}\r\n\t\treturn returnValue;\r\n\t};\r\n}\r\n\r\nfunction setArrayKey(array, key, value, model){\r\n\tvar path = ARRAY+'['+key+']';\r\n\tif(parseInt(key) === +key && key >= 0){\r\n\t\tvalue = checkDefinition(value, model[DEFINITION], path, [], model[ERROR_STACK], true);\r\n\t}\r\n\tvar testArray = array.slice();\r\n\ttestArray[key] = value;\r\n\tcheckAssertions(testArray, model, path, model[ERROR_STACK]);\r\n\tmodel[UNSTACK]();\r\n\tarray[key] = value;\r\n}\r\nModel[FUNCTION] = function FunctionModel(){\r\n\r\n\tvar model = function(fn) {\r\n\t\tfn = defaultTo(model[DEFAULT], fn);\r\n\r\n\t\tvar def = model[DEFINITION];\r\n\t\tvar proxyFn = function () {\r\n\t\t\tvar args = [], returnValue;\r\n\t\t\tmerge(args, def[DEFAULTS]);\r\n\t\t\tmerge(args, cloneArray(arguments));\r\n\t\t\tif (args.length > def[ARGS].length) {\r\n\t\t\t\tvar err = {};\r\n\t\t\t\terr[EXPECTED] = toString(fn) + \" to be called with \" + def[ARGS].length + \" \"+ARGS;\r\n\t\t\t\terr[RECEIVED] = args.length;\r\n\t\t\t\tmodel[ERROR_STACK].push(err);\r\n\t\t\t}\r\n\t\t\tdef[ARGS].forEach(function (argDef, i) {\r\n\t\t\t\targs[i] = checkDefinition(args[i], argDef, ARGS + '[' + i + ']', [], model[ERROR_STACK], true);\r\n\t\t\t});\r\n\t\t\tcheckAssertions(args, model, ARGS, model[ERROR_STACK]); //TODO: improve path parameter\r\n\r\n\t\t\tif(!model[ERROR_STACK].length){\r\n\t\t\t\treturnValue = fn.apply(this, args);\r\n\t\t\t\tif (RETURN in def) {\r\n\t\t\t\t\treturnValue = checkDefinition(returnValue, def[RETURN], RETURN+' value', [], model[ERROR_STACK], true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmodel[UNSTACK]();\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t\tsetConstructor(proxyFn, model);\r\n\t\treturn proxyFn;\r\n\t};\r\n\r\n\tsetConstructorProto(model, Function[PROTO]);\r\n\r\n\tvar def = {};\r\n\tdef[ARGS] = cloneArray(arguments);\r\n\tinitModel(model, [def], Model[FUNCTION]);\r\n\treturn model;\r\n};\r\n\r\nsetConstructorProto(Model[FUNCTION], Model[PROTO]);\r\n\r\nvar FunctionModelProto = Model[FUNCTION][PROTO];\r\n\r\nFunctionModelProto.toString = function(stack){\r\n\tvar out = FUNCTION + '(' + this[DEFINITION][ARGS].map(function(argDef){\r\n\t\treturn toString(argDef, stack);\r\n\t}).join(\",\") +')';\r\n\tif(RETURN in this[DEFINITION]) {\r\n\t\tout += \" => \" + toString(this[DEFINITION][RETURN]);\r\n\t}\r\n\treturn out;\r\n};\r\n\r\nFunctionModelProto[RETURN] = function(def){\r\n\tthis[DEFINITION][RETURN] = def;\r\n\treturn this;\r\n};\r\n\r\nFunctionModelProto[DEFAULTS] = function(){\r\n\tthis[DEFINITION][DEFAULTS] = cloneArray(arguments);\r\n\treturn this;\r\n};\r\n\r\n// private methods\r\ndefine(FunctionModelProto, VALIDATOR, function(f, path, callStack, errorStack){\r\n\tif(!isFunction(f)){\r\n\t\tvar err = {};\r\n\t\terr[EXPECTED] = FUNCTION;\r\n\t\terr[RECEIVED] = f;\r\n\t\terr[PATH] = path;\r\n\t\terrorStack.push(err);\r\n\t}\r\n});\r\nreturn Model;\r\n}));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Model = __webpack_require__(0);\nvar Id = __webpack_require__(4);\nvar Name = __webpack_require__(17);\nvar Address = __webpack_require__(3);\nvar Phone = __webpack_require__(5);\n\nmodule.exports = Model({\n  ids: Model.Array(Id),\n  displayName: [String],\n  name: [Name],\n  status: [String],\n  isPerson: [Boolean],\n  account: [Id],\n  addresses: [Model.Array(Address)],\n  phones: [Model.Array(Phone)],\n  emails: [Model.Array(String)]\n});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  CRM_PREFIX: 'T42.CRM.',\n  SIGNATURES: {\n    CONTACT: 'Composite { Composite { String? city, String? country, String? description, String? postalCode, String? stateOrRegion, String? streetAddress }[]? addresses, String? displayName, String[]? emails, Bool? isPerson, Composite { String? companyName, String? firstName, String? honorific, String? lastName, String[]? otherNames, String[]? postNominalLetters }? name, Composite { String name, String number }[]? phones, String? status } contact',\n    ACCOUNT: 'Composite { Composite { String? city, String? country, String? description, String? postalCode, String? stateOrRegion, String? streetAddress }[]? addresses, String? billingEmailAddress, Composite { String nativeId, String systemName }[]? contacts, String? displayName, String[]? emailDomains, Composite { String nativeId, String systemName }[] ids, String? name, Composite { String nativeId, String systemName }? owner, Composite { String name, String number }[]? phones, String? status, Composite { String nativeId, String systemName }[]? subsidiaries, String[]? website } account',\n    CONTACTS: 'Composite { Composite { String? city, String? country, String? description, String? postalCode, String? stateOrRegion, String? streetAddress }[]? addresses, String? displayName, String[]? emails, Bool? isPerson, Composite { String? companyName, String? firstName, String? honorific, String? lastName, String[]? otherNames, String[]? postNominalLetters }? name, Composite { String name, String number }[]? phones, String? status }[] contacts'\n  }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Model = __webpack_require__(0);\n\nmodule.exports = Model({\n  streetAddress: [String],\n  city: [String],\n  stateOrRegion: [String],\n  postalCode: [String],\n  country: [String],\n  description: [String]\n});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Model = __webpack_require__(0);\n\nmodule.exports = Model({\n  nativeId: String,\n  systemName: String\n});\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Model = __webpack_require__(0);\n\nmodule.exports = Model({\n  number: String,\n  name: String\n});\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  side: 'crm',\n  glue: {\n    gateway: {\n      ws: 'wss://demo.tick42.com:50112',\n      http: 'https://demo.tick42.com:50112',\n      protocolVersion: 2\n    }\n  },\n  timeout: 3000\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar methods = __webpack_require__(15);\nvar constants = __webpack_require__(2);\nvar GSSCreator = __webpack_require__(14);\n\nfunction CRM(agm, config) {\n  var ContactController = __webpack_require__(10)(agm, config);\n  var AccountController = __webpack_require__(9)(agm, config);\n  var availableMethods = getMethods(config.side);\n\n  var GSS = GSSCreator(agm, config);\n\n  return {\n    GetContact: ContactController.get,\n    CreateContact: ContactController.create,\n    ResolveContact: ContactController.resolve,\n    UpdateContact: ContactController.update,\n    DeleteContact: ContactController.delete,\n    SyncContact: ContactController.sync,\n    LogContactCall: ContactController.logCall,\n    CreateAccount: AccountController.create,\n    GetAccount: AccountController.get,\n    ResolveAccount: AccountController.resolve,\n    UpdateAccount: AccountController.update,\n    DeleteAccount: AccountController.delete,\n    SyncAccount: AccountController.sync,\n    QueryAccount: function QueryAccount(query) {\n      return GSS.search('T42.Account', query);\n    },\n    QueryContact: function QueryContact(query) {\n      return GSS.search('T42.Contact', query);\n    },\n    ResolveAccountContactList: AccountController.resolveContactList,\n    on: function on(name, handler) {\n      var method = availableMethods.find(function (m) {\n        return m.name === constants.CRM_PREFIX + name;\n      });\n      if (!method) throw new Error('Unsupported method: ' + name);\n      agm.registerAsync(method, handler);\n    },\n\n    onSearch: GSS.addEntityType\n  };\n}\n\nfunction getMethods(side) {\n  return methods.filter(function (method) {\n    return method.side === 'both' || method.side === side;\n  });\n}\n\nmodule.exports = CRM;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tick42-glue-core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tick42-glue-core\"] = factory();\n\telse\n\t\troot[\"tick42-glue-core\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 43);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction createRegistry() {\r\n    var callbacks = {};\r\n    function add(key, callback) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            allForKey = allForKey.filter(function (item) {\r\n                return item !== callback;\r\n            });\r\n            callbacks[key] = allForKey;\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute\r\n    };\r\n}\r\n;\r\ncreateRegistry.default = createRegistry;\r\nmodule.exports = createRegistry;\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shortid = __webpack_require__(7);\n\nmodule.exports = function () {\n    'use strict';\n    return shortid();\n};\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/*\n* Helper functions used only in this protocol.\n* */\n\nfunction convertInfoToInstance(info) {\n    'use strict';\n\n    if (typeof info !== 'object') {\n        info = {};\n    }\n\n    return {\n        application: info.ApplicationName,\n        environment: info.Environment,\n        machine: info.MachineName,\n        pid: info.ProcessId,\n        region: info.Region,\n        service: info.ServiceName,\n        user: info.UserName,\n        started: info.ProcessStartTime\n    }\n}\n\nfunction isStreamingFlagSet(flags) {\n    'use strict';\n\n    if (typeof flags !== 'number' || isNaN(flags)) {\n        return false;\n    }\n\n    // checking the largest Bit using bitwise ops\n    var mask = 32;\n    var result = flags & mask;\n\n    return result === mask;\n}\n\nmodule.exports =  {\n    isStreamingFlagSet: isStreamingFlagSet,\n    convertInfoToInstance: convertInfoToInstance\n};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar randomFromSeed = __webpack_require__(17);\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (promise, successCallback, errorCallback) {\r\n    'use strict';\r\n    if (typeof successCallback !== 'function' && typeof errorCallback !== 'function') {\r\n        return promise;\r\n    }\r\n\r\n    if (typeof successCallback !== 'function') {\r\n        successCallback = function () { };\r\n    } else if (typeof errorCallback !== 'function') {\r\n        errorCallback = function () { };\r\n    }\r\n\r\n    promise.then(successCallback, errorCallback);\r\n}\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"_from\": \"tick42-agm@3.5.10\",\n\t\"_id\": \"tick42-agm@3.5.10\",\n\t\"_inBundle\": false,\n\t\"_integrity\": \"sha1-oJsRPWiE730kK+SYY8rD1CjjfLs=\",\n\t\"_location\": \"/tick42-agm\",\n\t\"_phantomChildren\": {},\n\t\"_requested\": {\n\t\t\"type\": \"version\",\n\t\t\"registry\": true,\n\t\t\"raw\": \"tick42-agm@3.5.10\",\n\t\t\"name\": \"tick42-agm\",\n\t\t\"escapedName\": \"tick42-agm\",\n\t\t\"rawSpec\": \"3.5.10\",\n\t\t\"saveSpec\": null,\n\t\t\"fetchSpec\": \"3.5.10\"\n\t},\n\t\"_requiredBy\": [\n\t\t\"#USER\",\n\t\t\"/\"\n\t],\n\t\"_resolved\": \"http://repo.tick42.com:8081/artifactory/api/npm/tick42-npm/tick42-agm/-/tick42-agm-3.5.10.tgz\",\n\t\"_shasum\": \"a09b113d6884ef7d242be49863cac3d428e37cbb\",\n\t\"_spec\": \"tick42-agm@3.5.10\",\n\t\"_where\": \"D:\\\\work\\\\stash\\\\GLUE-dev\\\\dev\\\\node_modules\\\\tick42-glue-core\",\n\t\"author\": {\n\t\t\"name\": \"Tick42\",\n\t\t\"url\": \"http://www.tick42.com\"\n\t},\n\t\"bundleDependencies\": false,\n\t\"dependencies\": {\n\t\t\"callback-registry\": \"^2.2.7\",\n\t\t\"shortid\": \"^2.2.6\",\n\t\t\"util-deprecate\": \"^1.0.2\"\n\t},\n\t\"deprecated\": false,\n\t\"description\": \"JavaScript AGM\",\n\t\"devDependencies\": {\n\t\t\"babel-core\": \"^6.25.0\",\n\t\t\"babel-loader\": \"^6.2.5\",\n\t\t\"babel-plugin-add-module-exports\": \"^0.2.1\",\n\t\t\"babel-plugin-es6-promise\": \"^1.0.0\",\n\t\t\"babel-preset-es2015\": \"^6.16.0\",\n\t\t\"babel-preset-stage-2\": \"^6.22.0\",\n\t\t\"blanket\": \"^1.1.6\",\n\t\t\"bluebird\": \"^2.9.30\",\n\t\t\"docdash\": \"^0.4.0\",\n\t\t\"eslint\": \"^3.1.1\",\n\t\t\"eslint-config-standard\": \"^5.3.5\",\n\t\t\"eslint-config-tick42\": \"^1.0.6\",\n\t\t\"eslint-plugin-promise\": \"^2.0.0\",\n\t\t\"eslint-plugin-standard\": \"^2.0.0\",\n\t\t\"http-server\": \"^0.9.0\",\n\t\t\"minifyify\": \"^7.3.2\",\n\t\t\"onchange\": \"^2.1.2\",\n\t\t\"phantomjs\": \"^1.9.12\",\n\t\t\"pre-commit\": \"^1.1.3\",\n\t\t\"qunitjs\": \"^1.15.0\",\n\t\t\"shelljs\": \"^0.6.0\",\n\t\t\"tick42-webpack-config\": \"^1.3.1\",\n\t\t\"webpack\": \"2.3.3\"\n\t},\n\t\"keywords\": [\n\t\t\"agm\",\n\t\t\"javascript\",\n\t\t\"library\"\n\t],\n\t\"main\": \"src/main.js\",\n\t\"name\": \"tick42-agm\",\n\t\"precommit\": \"eslint\",\n\t\"scripts\": {\n\t\t\"build\": \"npm run eslint && webpack\",\n\t\t\"eslint\": \"eslint library\",\n\t\t\"eslint:fix\": \"eslint library --fix\",\n\t\t\"generate-docs\": \"jsdoc -c jsdoc-config.json\",\n\t\t\"prepublish\": \"npm update & npm run build\",\n\t\t\"serve\": \"http-server -p 8000 -a 127.0.0.1\",\n\t\t\"test\": \"npm run eslint && mocha --require ./test/test_helper \\\"test/**/*.js\\\"\",\n\t\t\"watch\": \"onchange \\\"./library/**/*.js\\\" -iv -e \\\"./bin\\\" -- npm run build\",\n\t\t\"watch-docs\": \"onchange \\\"./library/*.js\\\" -iv -e \\\"./bin\\\" -- npm run generate-docs\"\n\t},\n\t\"title\": \"Tick42 AGM\",\n\t\"types\": \"types/index.d.ts\",\n\t\"version\": \"3.5.10\"\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = __webpack_require__(14);\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tick42_metrics_1 = __webpack_require__(40);\r\nvar tick42_gateway_connection_1 = __webpack_require__(38);\r\nvar tick42_logger_1 = __webpack_require__(39);\r\nvar tick42_agm_1 = __webpack_require__(27);\r\nvar config_1 = __webpack_require__(41);\r\nvar dummyConnection_1 = __webpack_require__(42);\r\nvar timer_1 = __webpack_require__(44);\r\nvar es6_promise_1 = __webpack_require__(9);\r\nvar GlueCore = function (userConfig, ext) {\r\n    var glueInitTimer = timer_1.default();\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    var internalConfig = config_1.default(userConfig, ext);\r\n    // Init the GLUE namespace\r\n    var hc = typeof window !== \"undefined\" && window.htmlContainer;\r\n    var _connection;\r\n    var _agm;\r\n    var _logger;\r\n    var _rootMetrics;\r\n    var _metrics;\r\n    var libs = {};\r\n    function registerLib(name, inner, timer) {\r\n        inner.initStartTime = timer.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(function () {\r\n                inner.initTime = timer.stop();\r\n                inner.initEndTime = timer.endTime;\r\n            });\r\n        }\r\n        else {\r\n            inner.initTime = timer.stop();\r\n            inner.initEndTime = timer.endTime;\r\n        }\r\n        libs[name] = inner;\r\n    }\r\n    function setupConnection() {\r\n        var initTimer = timer_1.default();\r\n        internalConfig.connection.logger = _logger.subLogger(\"connection\");\r\n        _connection = tick42_gateway_connection_1.default(internalConfig.connection);\r\n        // gwProtocolVersion 2 requires auth (TODO - we should change 3 to be the same)\r\n        if (internalConfig.connection) {\r\n            if (!internalConfig.auth && internalConfig.connection.protocolVersion > 1) {\r\n                es6_promise_1.Promise.reject(\"You need to provide auth information\");\r\n            }\r\n        }\r\n        if (!internalConfig.auth) {\r\n            registerLib(\"connection\", _connection, initTimer);\r\n            return es6_promise_1.Promise.resolve({});\r\n        }\r\n        // now do the login\r\n        return new es6_promise_1.Promise(function (resolve, reject) {\r\n            var authRequest;\r\n            if (typeof internalConfig.auth === \"string\" || typeof internalConfig.auth === \"number\") {\r\n                authRequest = {\r\n                    token: internalConfig.auth\r\n                };\r\n            }\r\n            else if (Object.prototype.toString.call(internalConfig.auth) === \"[object Object]\") {\r\n                authRequest = internalConfig.auth;\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth object - \" + JSON.stringify(internalConfig.auth));\r\n            }\r\n            _connection.login(authRequest)\r\n                .then(function (identity) {\r\n                if (identity) {\r\n                    if (identity.machine) {\r\n                        internalConfig.agm.instance.machine = identity.machine;\r\n                    }\r\n                    if (identity.username) {\r\n                        internalConfig.agm.instance.user = identity.username;\r\n                    }\r\n                }\r\n                registerLib(\"connection\", _connection, initTimer);\r\n                resolve(internalConfig);\r\n            })\r\n                .catch(function (err) {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function setupLogger() {\r\n        // Logger\r\n        var initTimer = timer_1.default();\r\n        var loggerConfig = {\r\n            identity: internalConfig.metrics.identity,\r\n            getConnection: function () {\r\n                return _connection || dummyConnection_1.default;\r\n            },\r\n            publish: internalConfig.logger.publish || \"off\",\r\n            console: internalConfig.logger.console || \"info\",\r\n            metrics: internalConfig.logger.metrics || \"off\"\r\n        };\r\n        _logger = tick42_logger_1.default(loggerConfig);\r\n        registerLib(\"logger\", _logger, initTimer);\r\n        return es6_promise_1.Promise.resolve(undefined);\r\n    }\r\n    function setupMetrics() {\r\n        var initTimer = timer_1.default();\r\n        _rootMetrics = tick42_metrics_1.default({\r\n            identity: internalConfig.metrics.identity,\r\n            connection: internalConfig.metrics ? _connection : dummyConnection_1.default,\r\n            logger: _logger.subLogger(\"metrics\")\r\n        });\r\n        _metrics = _rootMetrics.subSystem(\"App\");\r\n        _logger.metricsLevel(\"warn\", _metrics.parent.subSystem(\"LogEvents\"));\r\n        registerLib(\"metrics\", _metrics, initTimer);\r\n        return es6_promise_1.Promise.resolve(undefined);\r\n    }\r\n    function setupAGM() {\r\n        var initTimer = timer_1.default();\r\n        // AGM\r\n        var agmConfig = {\r\n            instance: internalConfig.agm.instance,\r\n            connection: _connection,\r\n            metrics: _rootMetrics.subSystem(\"AGM\"),\r\n            logger: _logger.subLogger(\"agm\")\r\n        };\r\n        return new es6_promise_1.Promise(function (resolve, reject) {\r\n            tick42_agm_1.default(agmConfig)\r\n                .then(function (agmLib) {\r\n                _agm = agmLib;\r\n                registerLib(\"agm\", _agm, initTimer);\r\n                resolve(internalConfig);\r\n            })\r\n                .catch(function (err) {\r\n                return reject(err);\r\n            });\r\n        });\r\n    }\r\n    function setupExternalLibs(externalLibs) {\r\n        try {\r\n            externalLibs.forEach(function (lib) {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n            return es6_promise_1.Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return es6_promise_1.Promise.reject(e);\r\n        }\r\n    }\r\n    function setupExternalLib(name, createCallback) {\r\n        var initTimer = timer_1.default();\r\n        var lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n    function waitForLibs() {\r\n        // get all libs that have ready promises and wait for these to be ready\r\n        var libsReadyPromises = Object.keys(libs).map(function (key) {\r\n            var lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : es6_promise_1.Promise.resolve();\r\n        });\r\n        return es6_promise_1.Promise.all(libsReadyPromises);\r\n    }\r\n    function constructGlueObject() {\r\n        var feedbackFunc = function () {\r\n            if (!_agm) {\r\n                return;\r\n            }\r\n            _agm.invoke(\"T42.ACS.Feedback\", {}, \"best\");\r\n        };\r\n        var info = { glueVersion: internalConfig.version };\r\n        glueInitTimer.stop();\r\n        var glue = {\r\n            feedback: feedbackFunc,\r\n            info: info,\r\n            version: internalConfig.version,\r\n            userConfig: userConfig\r\n        };\r\n        // ver performance\r\n        glue.performance = {\r\n            get browser() {\r\n                return window.performance.timing;\r\n            },\r\n            get memory() {\r\n                return window.performance.memory;\r\n            },\r\n            get initTimes() {\r\n                var result = Object.keys(glue)\r\n                    .filter(function (key) {\r\n                    if (key === \"initTimes\") {\r\n                        return false;\r\n                    }\r\n                    return glue[key].initTime;\r\n                })\r\n                    .map(function (key) {\r\n                    return {\r\n                        name: key,\r\n                        time: glue[key].initTime,\r\n                        startTime: glue[key].initStartTime,\r\n                        endTime: glue[key].initEndTime\r\n                    };\r\n                });\r\n                // add glue\r\n                result.push({\r\n                    name: \"glue\",\r\n                    startTime: glueInitTimer.startTime,\r\n                    endTime: glueInitTimer.endTime,\r\n                    time: glueInitTimer.period\r\n                });\r\n                return result;\r\n            }\r\n        };\r\n        // attach each lib to glue && attach versions to info object\r\n        Object.keys(libs).forEach(function (key) {\r\n            var lib = libs[key];\r\n            glue[key] = lib;\r\n            info[key] = lib.version;\r\n        });\r\n        // push perf data to hc if needed\r\n        if (hc && hc.perfDataNeeded && hc.updatePerfData) {\r\n            var delay = hc.perfDataDelay || 100;\r\n            setTimeout(function () {\r\n                hc.updatePerfData(glue.performance);\r\n            }, delay);\r\n        }\r\n        // construct the config object to be exposed to end user\r\n        // transfer config keys from internalConfig and then ext\r\n        glue.config = {};\r\n        if (ext.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n        Object.keys(internalConfig).forEach(function (k) {\r\n            glue.config[k] = internalConfig[k];\r\n        });\r\n        if (ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach(function (k) {\r\n                glue.config[k] = ext.extOptions[k];\r\n            });\r\n        }\r\n        return glue;\r\n    }\r\n    return setupLogger()\r\n        .then(setupConnection)\r\n        .then(setupMetrics)\r\n        .then(setupAGM)\r\n        .then(function () {\r\n        return setupExternalLibs(internalConfig.libs || []);\r\n    })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch(function (err) {\r\n        // if there is some some error include the libs object for debugging purposes\r\n        return es6_promise_1.Promise.reject({\r\n            err: err,\r\n            libs: libs\r\n        });\r\n    });\r\n};\r\nexports.default = GlueCore;\r\n//# sourceMappingURL=glue.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {var require;/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.1.0\n */\n\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = __webpack_require__(45);\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n      GET_THEN_ERROR.error = null;\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n//# sourceMappingURL=es6-promise.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11), __webpack_require__(0)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"tick42-glue-core\",\n\t\"version\": \"3.3.3\",\n\t\"description\": \"Glue42 core library including logger, connection, agm and metrics\",\n\t\"main\": \"./dist/node/tick42-glue-core.js\",\n\t\"types\": \"./glue.d.ts\",\n\t\"browser\": \"./dist/web/tick42-glue-core.js\",\n\t\"scripts\": {\n\t\t\"init-dev-mode\": \"node ./build/scripts/init-dev-mode.js\",\n\t\t\"remove-installed-dependencies\": \"node ./build/scripts/remove-installed-dependencies.js\",\n\t\t\"clean\": \"node ./build/scripts/clean.js\",\n\t\t\"pre:build\": \"npm run tslint && tsc && set NODE_ENV=development && npm run clean\",\n\t\t\"file-versionify\": \"node ./build/scripts/file-versionify.js\",\n\t\t\"tslint\": \"tslint -t codeFrame ./src/main.ts\",\n\t\t\"tslint:fix\": \"tslint -t codeFrame --fix ./src/main.ts\",\n\t\t\"watch\": \"onchange ./src/**/*.ts -- npm run build:dev\",\n\t\t\"build:dev\": \"npm run pre:build && set NODE_ENV=development && webpack && npm run file-versionify && npm run types\",\n\t\t\"build:prod\": \"npm run pre:build && set NODE_ENV=development && webpack && set NODE_ENV=production && webpack && npm run file-versionify\",\n\t\t\"docs\": \"typedoc --options typedoc.json ./src\",\n\t\t\"prepublish\": \"npm run build:prod && npm run test:only\",\n\t\t\"types\": \"node ./build/scripts/copy-types.js\",\n\t\t\"test\": \"npm run build:dev && mocha ./tests\",\n\t\t\"test:only\": \"mocha ./tests\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://stash.tick42.com/scm/tg/js-glue-core.git\"\n\t},\n\t\"author\": {\n\t\t\"name\": \"Tick42\",\n\t\t\"url\": \"http://www.glue42.com\"\n\t},\n\t\"license\": \"ISC\",\n\t\"dependencies\": {\n\t\t\"shortid\": \"2.2.6\",\n\t\t\"tick42-agm\": \"^3.5.10\",\n\t\t\"tick42-gateway-connection\": \"2.2.10\",\n\t\t\"tick42-logger\": \"^3.0.8\",\n\t\t\"tick42-metrics\": \"^2.3.4\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@types/es6-promise\": \"0.0.32\",\n\t\t\"@types/shortid\": \"0.0.29\",\n\t\t\"archiver\": \"^1.3.0\",\n\t\t\"babel-core\": \"^6.25.0\",\n\t\t\"babel-loader\": \"^6.4.1\",\n\t\t\"babel-plugin-add-module-exports\": \"^0.2.1\",\n\t\t\"babel-plugin-es6-promise\": \"^1.0.0\",\n\t\t\"babel-preset-es2015\": \"^6.16.0\",\n\t\t\"babel-preset-stage-2\": \"^6.22.0\",\n\t\t\"chai\": \"^4.0.2\",\n\t\t\"es6-promise\": \"^4.1.0\",\n\t\t\"mocha\": \"^2.5.3\",\n\t\t\"onchange\": \"3.*\",\n\t\t\"pre-commit\": \"^1.1.3\",\n\t\t\"readline-sync\": \"^1.4.5\",\n\t\t\"shelljs\": \"^0.6.0\",\n\t\t\"tick42-gateway\": \"^0.2.28\",\n\t\t\"tick42-webpack-config\": \"4.1.6\",\n\t\t\"tslint\": \"^5.4.3\",\n\t\t\"typedoc\": \"^0.5.10\",\n\t\t\"typescript\": \"2.3.0\",\n\t\t\"webpack\": \"2.3.3\"\n\t}\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar alphabet = __webpack_require__(4);\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar randomByte = __webpack_require__(16);\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar alphabet = __webpack_require__(4);\nvar encode = __webpack_require__(13);\nvar decode = __webpack_require__(12);\nvar isValid = __webpack_require__(15);\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = __webpack_require__(18) || 0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar alphabet = __webpack_require__(4);\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 0;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// This module handles AGM method invocations - validating inputs and delegating to protocol\nvar random = __webpack_require__(2);\n\nmodule.exports = function (protocol) {\n    'use strict';\n\n    /** Store pending callback **/\n    var pendingCallbacks = {};\n\n    /**\n     * Invokes an AGM method to a single AGM server, given valid input.\n     * @param method\n     * @param argumentsObj\n     * @param target\n     * @param stuff\n     * @param success\n     * @param error\n     */\n    function invoke(method, argumentsObj, target, stuff, success, error) {\n        // Generate a unique invocation ID, for this invocation\n        var invocationId = random();\n\n        // Register the user's callbacks\n        registerInvocation(invocationId, {\n            method: method,\n            calledWith: argumentsObj\n        }, success, error, stuff.method_response_timeout);\n\n        protocol.invoke(invocationId, method, argumentsObj, target, stuff);\n    }\n\n    /**\n     * Register invocation so we can find it later when invocation result is received\n     * @param invocationId\n     * @param response\n     * @param success\n     * @param error\n     * @param timeout\n     */\n    function registerInvocation(invocationId, response, success, error, timeout) {\n        // Adds the callbacks\n        pendingCallbacks[invocationId] = { response: response, success: success, error: error };\n        // Schedules to throw a timeout if nobody answers\n        setTimeout(function () {\n            if (pendingCallbacks[invocationId] === undefined) {\n                return;\n            }\n            error({\n                method: response.method,\n                called_with: response.calledWith,\n                message: 'Timeout reached'\n            });\n            delete pendingCallbacks[invocationId];\n        }, timeout);\n    }\n\n    /**\n     * Process invocation result received from protocl\n     * @param invocationId\n     * @param executedBy\n     * @param status\n     * @param result\n     * @param resultMessage\n     */\n    function processInvocationResult(invocationId, executedBy, status, result, resultMessage) {\n        // Finds the appropriate callback\n        var callback = pendingCallbacks[invocationId];\n        if (callback === undefined) {\n            return;\n        }\n        // If the server returned success, execute the success callback\n        if (status === 0 && typeof callback.success === 'function') {\n\n            // Execute the success callback\n            callback.success({\n                method: callback.response.method.info,\n                called_with: callback.response.calledWith,\n                executed_by: executedBy,\n                returned: result,\n                message: resultMessage\n                // log_details: message.ResultLogDetails\n            });\n            // Else, return an error\n        } else if (typeof callback.error === 'function') {\n\n            callback.error({\n                method: callback.response.method.info,\n                called_with: callback.response.calledWith,\n                executed_by: executedBy,\n                message: resultMessage,\n                // log_details: message.ResultLogDetails,\n                status: status,\n                returned: result\n            });\n        }\n        // Finally, remove the callbacks\n        delete pendingCallbacks[invocationId];\n    }\n\n    // subscribe for invocation results\n    protocol.onInvocationResult(processInvocationResult);\n\n    return { invoke: invoke };\n};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/*\n  The AGM Client analyses server presences, collects information about their methods and allows users to invoke these methods.\n */\n\nvar ClientInvocationsState = __webpack_require__(19);\nvar promisify = __webpack_require__(5);\n\n/**\n * @module agm\n */\nmodule.exports = function (protocol, repo, instance, configuration) {\n    'use strict';\n\n    // Instantiate the module that handles method execution and responses\n    var clientInvocations = new ClientInvocationsState(protocol);\n\n    function getMethods(methodFilter) {\n        if (methodFilter === undefined) {\n            return repo.getMethods();\n        }\n        if (typeof methodFilter === 'string') {\n            methodFilter = { name: methodFilter };\n        }\n        return repo.getMethods().filter(function (method) {\n            return methodMatch(methodFilter, method.info);\n        });\n    }\n\n    function getMethodsForInstance(instanceFilter) {\n        var allServers = repo.getServers();\n\n        var matchingServers = allServers.filter(function (server) {\n            return instanceMatch(instanceFilter, server.info);\n        });\n\n        if (matchingServers.length === 0) {\n            return [];\n        }\n\n        var resultMethodsObject = {};\n\n        if (matchingServers.length === 1) {\n            resultMethodsObject = matchingServers[0].methods;\n        } else {\n            // we have more than one server matching, join all methods\n            matchingServers.forEach(function (server) {\n                Object.keys(server.methods).forEach(function (methodKey) {\n                    var method = server.methods[methodKey];\n                    resultMethodsObject[method.id] = method.getInfoForUser();\n                })\n            });\n        }\n\n        // transform the object to array\n        return Object.keys(resultMethodsObject)\n            .map(function (key) {\n                return resultMethodsObject[key]\n            });\n    }\n\n    function getServers(methodFilter) {\n        var servers = repo.getServers();\n\n        // No method - get all getServers\n        if (methodFilter === undefined) {\n            return servers.map(function (server) {\n                return { server: server };\n            });\n        }\n        // Non-existing method - return an empty array\n        var methods = getMethods(methodFilter);\n        if (methods === undefined) {\n            return [];\n        }\n\n        return servers.reduce(function (prev, current) {\n\n            var methods = repo.getServerMethodsById(current.id);\n\n            var matchingMethods = methods.filter(function (method) {\n                return methodMatch(methodFilter, method.info);\n            });\n\n            if (matchingMethods.length > 0) {\n                prev.push({ server: current, methods: matchingMethods });\n            }\n\n            return prev;\n        }, []);\n    }\n\n    /**\n     * Returns an array of server-methods pairs for all servers that match the target and have at lease one method matching the method filter\n     * @private\n     * @param methodFilter\n     * @param target\n     * @returns {*}\n     */\n    function getServerMethodsByFilterAndTarget(methodFilter, target) {\n        // get all servers that have method(s) matching the filter\n        var serversMethodMap = getServers(methodFilter);\n        // filter the server-method map by target\n        return filterByTarget(target, serversMethodMap);\n    }\n\n    /**\n     * Invokes an AGM method\n     * @param {MethodDefinition} methodFilter Method to invoke\n     * @param {Object} argumentObj Arguments for the invocation\n     * @param {Instance|Instance[]|string} [target] Defines which server(s) to target with the invocation - can be one of:\n     * * ’best' - executes the method on the best (or first) server\n     * * 'all' - executes the method on all servers offering it\n     * * AGM instance (or a subset, used for filtering), e.g. { application: 'appName' }\n     * * an array of AGM instances/filters\n     * @param {InvocationOptions} [additionalOptions] Additional options for the invocation\n     * @param {function} [success] - (use this if you prefer callback style instead of promises)\n     * Callback that will be called with {@link InvocationResult} object when the invocation is successful\n     * @param {function} [error] -  (use this if you prefer callback style instead of promises)\n     * Callback that will be called with {@link InvocationError} object when the invocation is not successful\n     * @returns {Promise<InvocationResult>}\n     * @example\n     * glue.agm.invoke(\n     *   'Sum',\n     *   { a: 37, b: 5 }) // everything else is optional\n     *   .then(\n     *      function(result) {\n     *      console.log('37 + 5 = ' + result.returned.answer)\n     *   })\n     *   .catch(\n     *      function(err) {\n     *      console.error('Failed to execute Sum' + err.message)\n     *   })\n     **/\n    function invoke(methodFilter, argumentObj, target, additionalOptions, success, error) {\n        var promise = new Promise(function (resolve, reject) {\n            var successProxy, errorProxy;\n\n            successProxy = function (args) {\n                // var parsed = JSON.parse(args);\n                resolve(args);\n            };\n            errorProxy = function (args) {\n                // var parsed = JSON.parse(args);\n                reject(args);\n            };\n            // Add default params\n            if (!argumentObj) {\n                argumentObj = {};\n            }\n            if (!target) {\n                target = 'best';\n            }\n            if (typeof target === 'string' && target !== 'all' && target !== 'best') {\n                reject({ message: '\"' + target + '\" is not a valid target. Valid targets are \"all\" and \"best\".' });\n            }\n            if (!additionalOptions) {\n                additionalOptions = {};\n            }\n\n            if (additionalOptions.method_response_timeout === undefined) {\n                additionalOptions.method_response_timeout = configuration.method_response_timeout;\n            }\n\n            if (additionalOptions.waitTimeoutMs === undefined && additionalOptions.wait_for_method_timeout !== undefined ) {\n                additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;\n            }\n\n            if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== 'number') {\n                reject({ message: '\"' + additionalOptions.waitTimeoutMs + '\" is not a valid number for \\'waitTimeoutMs\\''});\n            }\n\n            if (additionalOptions.waitTimeoutMs === undefined) {\n                additionalOptions.waitTimeoutMs = configuration.wait_for_method_timeout;\n            }\n\n            // Check if the arguments are an object\n            if (typeof argumentObj !== 'object') {\n                reject({ message: 'The method arguments must be an object.' });\n            }\n\n            if (typeof methodFilter === 'string') {\n                methodFilter = { name: methodFilter };\n            }\n\n            var serversMethodMap = getServerMethodsByFilterAndTarget(methodFilter, target);\n\n            if (serversMethodMap.length === 0) {\n\n                invokeUnexisting(methodFilter, argumentObj, target, additionalOptions, successProxy, errorProxy);\n\n            } else if (serversMethodMap.length === 1) {\n\n                var serverMethodPair = serversMethodMap[0];\n                clientInvocations.invoke(serverMethodPair.methods[0], argumentObj, serverMethodPair.server, additionalOptions, successProxy, errorProxy);\n\n            } else {\n\n                invokeOnAll(serversMethodMap, argumentObj, additionalOptions, successProxy, errorProxy);\n\n            }\n        });\n\n        return promisify(promise, success, error);\n    }\n\n    /**\n     * Called when the user tries to invoke a method which does not exist\n     * @private\n     * @param methodFilter\n     * @param argumentObj\n     * @param target\n     * @param additionalOptions\n     * @param success\n     * @param error\n     */\n    function invokeUnexisting(methodFilter, argumentObj, target, additionalOptions, success, error) {\n        if (additionalOptions.waitTimeoutMs === 0) {\n            callError();\n        } else {\n            var delayStep = 500;\n            var delayTillNow = 0;\n\n            setTimeout(function retry() {\n                delayTillNow += delayStep;\n\n                // get all servers that have method(s) matching the filter\n                var serversMethodMap = getServerMethodsByFilterAndTarget(methodFilter, target);\n                if (serversMethodMap.length > 0) {\n                    invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\n                } else if (delayTillNow >= additionalOptions.waitTimeoutMs) {\n                    callError();\n                } else {\n                    setTimeout(retry, delayStep);\n                }\n            }, delayStep);\n        }\n\n        function callError() {\n            error({\n                method: methodFilter,\n                called_with: argumentObj,\n                message: 'Can not find a method matching ' + JSON.stringify(methodFilter) + ' with server filter ' + JSON.stringify(target)\n            });\n        }\n    }\n\n    /**\n     * Calls a method for all servers and unifies the results they return into one:\n     * @private\n     * @param serverMethodsMap\n     * @param argumentObj\n     * @param additionalOptions\n     * @param success\n     * @param error\n     */\n    function invokeOnAll(serverMethodsMap, argumentObj, additionalOptions, success, error) {\n        // Here we will store the results that the getServers return\n        var successes = [];\n        var errors = [];\n        // These are the callbacks\n        var successCallback = function (result) {\n            successes.push(result);\n            sendResponse(successes, errors);\n        };\n        var errorCallback = function (result) {\n            errors.push(result);\n            sendResponse(successes, errors);\n        };\n        // Call the method for all targets\n        serverMethodsMap.forEach(function (serverMethodsPair) {\n            clientInvocations.invoke(serverMethodsPair.methods[0],\n                argumentObj,\n                serverMethodsPair.server,\n                additionalOptions,\n                successCallback,\n                errorCallback);\n        });\n\n        // Calls the main success and error callbacks with the aggregated results\n        function sendResponse() {\n            // wait till everybody is finished\n            if (successes.length + errors.length < serverMethodsMap.length) {\n                return;\n            }\n            // Execute the \"success\" callback\n            if (successes.length !== 0) {\n                var result = successes.reduce(function (obj, success) {\n                    obj.method = success.method;\n                    obj.called_with = success.called_with;\n                    obj.returned = success.returned;\n                    obj.all_return_values.push({\n                        executed_by: success.executed_by,\n                        returned: success.returned\n                    });\n                    obj.executed_by = success.executed_by;\n                    return obj;\n                }, { all_return_values: [] });\n\n                // If we get errors from one of the getServers add them to the success object that will be resolved.\n                if (errors.length !== 0) {\n                    result.all_errors = [];\n                    errors.forEach(function (obj) {\n                        result.all_errors.push({\n                            // executed_by : obj.executed_by, // we don't get executed_by object from the error clientInvocations\n                            name: obj.method.name,\n                            message: obj.message\n                        });\n                    });\n                }\n\n                success(result);\n\n            } else if (errors.length !== 0) { // Execute the \"error\" callback\n                error(errors.reduce(function (obj, error) {\n                    obj.method = error.method;\n                    obj.called_with = error.called_with;\n                    obj.message = error.message;\n                    obj.all_errors.push({\n                        executed_by: error.executed_by,\n                        message: error.message\n                    });\n                    // obj.executed_by = success.executed_by;\n                    return obj;\n                }, { all_errors: [] }));\n            }\n        }\n    }\n\n    /**\n     * Filters an array of servers and returns the ones which match the target criteria\n     * @private\n     * @param target\n     * @param serverMethodMap\n     * @returns {*}\n     * */\n    function filterByTarget(target, serverMethodMap) {\n        // If the user specified target as string:\n        if (typeof target === 'string') {\n            if (target === 'all') {\n                target = serverMethodMap;\n            } else if (target === 'best') {\n                target = serverMethodMap[0] !== undefined ? [serverMethodMap[0]] : [];  // If the user specified the target as server filter\n            }\n        } else {\n            if (!Array.isArray(target)) {\n                target = [target];\n            }\n            // Retrieve all getServers that match the filters\n            target = target.reduce(function (matches, filter) {\n                // Add matches for each filter\n                var myMatches = serverMethodMap.filter(function (serverMethodPair) {\n                    return instanceMatch(filter, serverMethodPair.server.info);\n                });\n                return matches.concat(myMatches);\n            }, []);\n        }\n        return target;\n    }\n\n    /**\n     * Matches a server definition against a server filter\n     * @private\n     * @param instanceFilter\n     * @param instanceDefinition\n     */\n    function instanceMatch(instanceFilter, instanceDefinition) {\n        return containsProps(instanceFilter, instanceDefinition);\n    }\n\n    /**\n     * Matches a method definition against a method filter\n     * @private\n     * @param methodFilter\n     * @param methodDefinition\n     */\n    function methodMatch(methodFilter, methodDefinition) {\n        return containsProps(methodFilter, methodDefinition);\n    }\n\n    /**\n     * Checks if all properties of filter match properties in object\n     * @private\n     * @param filter\n     * @param object\n     * @returns {*}\n     */\n    function containsProps(filter, object) {\n        return Object.keys(filter).reduce(function (match, prop) {\n            // ignore undefined properties\n            if (!filter[prop]) {\n                return match;\n            }\n\n            if (filter[prop].constructor === RegExp) {\n                if (!filter[prop].test(object[prop])) {\n                    return false;\n                } else {\n                    return match;\n                }\n            } else {\n                if (String(filter[prop]).toLowerCase() !== String(object[prop]).toLowerCase()) {\n                    return false;\n                } else {\n                    return match;\n                }\n            }\n        }, true);\n    }\n\n    /**\n     * Subscribes to an AGM streaming method\n     * @param name\n     * @param options\n     * @param successCallback\n     * @param errorCallback\n     * @returns {*}\n     */\n    function subscribe(name, options, successCallback, errorCallback) {\n        // options can have arguments:{}, target: 'best'/'all'/{server_instance}, waitTimeoutMs:3000\n\n        function callProtocolSubscribe(targetServers, stream, options, successProxy, errorProxy) {\n            if (global.console !== undefined && configuration.debug === true) {\n                console.log('>>> Subscribing to \"' + name + '\" on ' + targetServers.length + ' servers');\n            }\n\n            protocol.subscribe(\n                stream,\n                options.arguments,\n                targetServers,\n                { method_response_timeout: options.waitTimeoutMs },\n                successProxy,\n                errorProxy\n            );\n        }\n\n        var promise = new Promise(function (resolve, reject) {\n\n            var successProxy = function (args) {\n                resolve(args);\n            };\n            var errorProxy = function (args) {\n                reject(args);\n            };\n\n            if (options === undefined) {\n                options = {};\n            }\n            var target = options.target;\n            if (target === undefined) {\n                target = 'best';\n            }\n            if (typeof target === 'string' && target !== 'all' && target !== 'best') {\n                reject({ message: '\"' + target + '\" is not a valid target. Valid targets are \"all\", \"best\", or an instance.' });\n            }\n            if (typeof options.waitTimeoutMs !== 'number' || options.waitTimeoutMs !== options.waitTimeoutMs /* NaN */) {\n                options.waitTimeoutMs = configuration.wait_for_method_timeout;\n            }\n\n            var delayStep = 500;\n            var delayTillNow = 0;\n\n            // don't check if the method is streaming or not, subscribing to non-streaming method has to invoke it\n\n            // get all servers that have method(s) matching the filter\n            var currentServers = getServerMethodsByFilterAndTarget({ name: name }, target);\n            if (currentServers.length > 0) {\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], options, successProxy, errorProxy)\n            }else {\n                setTimeout(function retry() {\n                    delayTillNow += delayStep;\n                    // get all servers that have method(s) matching the filter\n                    var currentServers = getServerMethodsByFilterAndTarget({ name: name }, target);\n                    if (currentServers.length > 0) {\n                        var streamInfo = currentServers[0].methods[0];\n                        callProtocolSubscribe(currentServers, streamInfo, options, successProxy, errorProxy)\n                    } else if (delayTillNow >= options.waitTimeoutMs) {\n                        callProtocolSubscribe(currentServers, { name: name }, options, successProxy, errorProxy)\n                    } else {\n                        setTimeout(retry, delayStep);\n                    }\n                }, delayStep);\n            }\n        });\n\n        return promisify(promise, successCallback, errorCallback);\n    }\n\n    return {\n        subscribe: subscribe,\n\n        invoke: invoke,\n\n        /**\n         * Returns all servers. If methodFilter is specified will return a list of servers\n         * having a method matching the filter.\n         * @function servers\n         * @param {MethodDefinition} [methodFilter]\n         * @returns {Instance[]}\n         */\n        servers: function (methodFilter) {\n            return getServers(methodFilter).map(function (serverMethodMap) {\n                return serverMethodMap.server.getInfoForUser();\n            })\n        },\n\n        /**\n         * Returns all methods that match the given filter. If no filter specified returns all methods.\n         *\n         * @function methods\n         * @param {MethodDefinition} [methodFilter] Partial  method definition\n         * @return {ServerMethods[]}- methods for each server that match the filter\n         **/\n        methods: function (methodFilter) {\n            return getMethods(methodFilter).map(function (m) {\n                return m.getInfoForUser()\n            })\n        },\n\n        /**\n         * Returns all agm method registered by some server\n         * @function methodsForInstance\n         * @param {Instance} instance\n         * @returns {ServerMethod[]}\n         */\n        methodsForInstance: function (instance) {\n            return getMethodsForInstance(instance).map(function (m) {\n                return m.getInfoForUser()\n            })\n        },\n\n        /**\n         * Called when a method is added for the first time by any application\n         * @function methodAdded\n         * @param {MethodCallback} callback\n         */\n        methodAdded: function (callback) {\n            repo.onMethodAdded(function (method) {\n                callback(method.getInfoForUser())\n            })\n        },\n\n        /**\n         * Called when a method is removed from the last application offering it\n         * @function methodRemoved\n         * @param {MethodCallback} callback\n         */\n        methodRemoved: function (callback) {\n            repo.onMethodRemoved(function (method) {\n                callback(method.getInfoForUser())\n            })\n        },\n\n        /**\n         * Called when an application offering methods (server) is discovered\n         * @param {InstanceCallback} callback Callback that will be invoked with the {@link Instance} of the new sever\n         */\n        serverAdded: function (callback) {\n            repo.onServerAdded(function (server) {\n                callback(server.getInfoForUser())\n            })\n        },\n\n        /**\n         * Called when an app offering methods stops offering them or exits\n         * @param {InstanceCallback} callback Callback that will be invoked with the {@link Instance} of the removed server\n         */\n        serverRemoved: function (callback) {\n            repo.onServerRemoved(function (server, reason) {\n                callback(server.getInfoForUser(), reason)\n            })\n        },\n\n\n        /**\n         * Called when a method is offered by an application. This will be called for each server offering the method\n         * where {@link methodAdded} will be called only for the first time the method is registered.\n         *\n         * @param {ServerMethodCallback} callback\n         */\n        serverMethodAdded: function (callback) {\n            repo.onServerMethodAdded(function (server, method) {\n                callback({ server: server.getInfoForUser(), method: method.getInfoForUser() })\n            })\n        },\n\n        /**\n         * Called when a server stops offering a method\n         * @param {ServerMethodCallback} callback\n         */\n        serverMethodRemoved: function (callback) {\n            repo.onServerMethodRemoved(function (server, method) {\n                callback({ server: server.getInfoForUser(), method: method.getInfoForUser() })\n            })\n        }\n    };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/*\n The AGM instance collects information about the machine we are in,\n and interacts with the .NET gateway in other ways,\n to deliver full AGM compatibility to AGM.JS.\n\n To do so, it relies on the default AGM client.\n */\n\nvar document = global.document || global.process;\nvar random = __webpack_require__(2);\n\nmodule.exports = function (userSubmittedProperties) {\n    'use strict';\n\n    var instance = {};\n    // Generate default instance properties\n    instance.ApplicationName = document.title + random();\n    instance.ProcessId = Math.floor(Math.random() * 10000000000); // PID should be integer for protocolVersion 1\n    instance.ProcessStartTime = new Date().getTime();\n\n    // Apply user-submitted instance properties\n    if (typeof userSubmittedProperties === 'object') {\n        if (userSubmittedProperties.application !== undefined) {\n            instance.ApplicationName = userSubmittedProperties.application;\n        }\n        instance.MachineName = userSubmittedProperties.machine;\n        instance.UserName = userSubmittedProperties.user;\n        instance.Environment = userSubmittedProperties.environment;\n        instance.Region = userSubmittedProperties.region;\n        instance.State = 1;\n    }\n    var identityUpdated = false;\n\n    function updateIdentity(newInstance) {\n        if (identityUpdated) {\n            return;\n        }\n        if (instance.MachineName === undefined) {\n            instance.MachineName = newInstance.MachineName;\n        }\n        if (instance.UserName === undefined) {\n            instance.UserName = newInstance.UserName;\n        }\n        if (instance.Environment === undefined) {\n            instance.Environment = newInstance.Environment;\n        }\n        if (instance.Region === undefined) {\n            instance.Region = newInstance.Region;\n        }\n        if (instance.State === undefined) {\n            instance.State = newInstance.State;\n        }\n        identityUpdated = true;\n    }\n\n    // Create a method for accessing a property\n    function createGetter(property) {\n        return instance[property];\n    }\n\n    // Returns all instance properties\n    function info() {\n        return instance;\n    }\n\n    return {\n        _updateIdentity: updateIdentity,\n        info: info,\n        get application() {\n            return createGetter('ApplicationName');\n        },\n        get pid() {\n            return createGetter('ProcessId');\n        },\n        get user() {\n            return createGetter('UserName');\n        },\n        get machine() {\n            return createGetter('MachineName');\n        }\n    };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var promisify = __webpack_require__(5);\nvar pjson = __webpack_require__(6);\n\nmodule.exports = function (configuration) {\n    'use strict';\n\n    // date parsing\n    var facade = global.htmlContainer.jsAgmFacade;\n    var dateTimeIdentifier = facade.jsonValueDatePrefix;\n    var lenOfIdentifier = dateTimeIdentifier.length;\n\n    function stringToObject(param, stringPropName) {\n        if (typeof param === 'string') {\n            var obj = {};\n            obj[stringPropName] = param;\n            return obj;\n        }\n\n        return param;\n    }\n\n    // helper function for parsing dates properly\n    function agmParse(str) {\n        return JSON.parse(str, function (k, v) {\n            if (typeof v !== 'string') {\n                return v;\n            }\n\n            // pre-seed - this should be a bit faster than indexOf\n            if (v[0] !== dateTimeIdentifier[0]) {\n                return v;\n            }\n\n            if (v.indexOf(dateTimeIdentifier) !== 0) {\n                return v;\n            }\n\n            var unixTimestampMs = v.substr(lenOfIdentifier);\n            return new Date(parseFloat(unixTimestampMs));\n        });\n    }\n\n    /**\n     * Converts a target argument to object ready to be passed to Agm facade\n     * @param target\n     */\n    function targetArgToObject(target) {\n\n        target = target || 'best';\n\n        if (typeof target === 'string') {\n            if (target !== 'all' && target !== 'best') {\n                throw new Error('\"' + target + '\" is not a valid target. Valid targets are \"all\" and \"best\".');\n            }\n            return { target: target };\n        } else {\n            if (!Array.isArray(target)) {\n                target = [target];\n            }\n\n            target = target.map(function (e) {\n                return convertInstanceToRegex(e);\n            });\n\n            return { serverFilter: target };\n        }\n    }\n\n    function convertInstanceToRegex(instance) {\n        var instanceConverted = {};\n\n        Object.keys(instance).forEach(function (key) {\n            var propValue = instance[key];\n            instanceConverted[key] = propValue;\n\n            if (typeof propValue === 'undefined' || propValue === null) {\n                return;\n            }\n\n            if (typeof propValue === 'string' && propValue !== '') {\n                // do exact matching if user passed a string\n                instanceConverted[key] = '^' + instance[key] + '$';\n            } else if (instance[key].constructor === RegExp) {\n                instanceConverted[key] = instance[key].source;\n            } else {\n                instanceConverted[key] = instance[key];\n            }\n        });\n        return instanceConverted;\n    }\n\n    function validateMethodInfo(methodInfo) {\n        if (typeof methodInfo === 'undefined') {\n            throw Error('methodInfo is required argument');\n        }\n\n        if (!methodInfo.name) {\n            throw Error('methodInfo object must contain name property');\n        }\n\n        if (methodInfo.objectTypes) {\n            methodInfo.object_types = methodInfo.objectTypes;\n        }\n\n        if (methodInfo.displayName) {\n            methodInfo.display_name = methodInfo.displayName;\n        }\n    }\n\n    return new Promise(function (resolve, reject) {\n        var result = {\n\n            version: pjson.version,\n\n            // Registers a JavaScript function as an AGM method, thus making it available other AGM instances on the same transport.\n            register: function (methodInfo, callback) {\n                var methodInfoAsObject = stringToObject(methodInfo, 'name');\n                validateMethodInfo(methodInfoAsObject);\n\n                var pv = this.agmFacade.protocolVersion;\n                if (pv && pv >= 3) {\n                    // for newer HC use the version where we don't pass arguments as JSON (because of different issues)\n                    this.agmFacade.register(JSON.stringify(methodInfoAsObject),\n                        callback,\n                        true); // return as objects\n                } else {\n                    this.agmFacade.register(JSON.stringify(methodInfoAsObject),\n                        function (arg) {\n                            var result = callback(JSON.parse(arg), arguments[1]);\n                            return JSON.stringify(result);\n                        });\n                }\n            },\n\n            registerAsync: function (methodInfo, callback) {\n                if (!this.agmFacade.registerAsync) {\n                    throw new Error('not supported in that version of HtmlContainer');\n                }\n\n                var methodInfoAsObject = stringToObject(methodInfo, 'name');\n                validateMethodInfo(methodInfoAsObject);\n\n                this.agmFacade.registerAsync(methodInfoAsObject,\n                    function (args, instance, tracker) {\n                        // execute the user callback\n                        callback(args,\n                            instance,\n                            function (successArgs) {\n                                tracker.success(successArgs);\n                            },\n                            function (error) {\n                                tracker.error(error)\n                            });\n                    });\n            },\n\n            unregister: function (methodFilter) {\n                this.agmFacade.unregister(JSON.stringify(stringToObject(methodFilter, 'name')));\n            },\n\n            // Invokes an AGM method asynchronously.\n            invoke: function (methodFilter, args, target, options, successCallback, errorCallback) {\n\n                var promise = new Promise(function (resolve, reject) {\n\n                    if (args === undefined) {\n                        args = {};\n                    }\n\n                    if (typeof args !== 'object') {\n                        reject({ message: 'The method arguments must be an object.' });\n                    }\n\n                    if (options === undefined) {\n                        options = {};\n                    }\n\n                    target = targetArgToObject(target);\n\n                    if (this.agmFacade.invoke2) {\n                        // invoke ver2 - do not stringify arguments and result values\n                        this.agmFacade.invoke2(\n                            JSON.stringify(stringToObject(methodFilter, 'name')),\n                            args,\n                            JSON.stringify(target),\n                            JSON.stringify(options),\n                            function (args) {\n                                resolve(args)\n                            },\n                            function (err) {\n                                reject(err)\n                            }\n                        );\n                    } else {\n                        var successProxy, errorProxy;\n\n                        successProxy = function (args) {\n                            var parsed = JSON.parse(args);\n                            resolve(parsed);\n                        };\n                        errorProxy = function (args) {\n                            var parsed = JSON.parse(args);\n                            reject(parsed);\n                        };\n                        this.agmFacade.invoke(\n                            JSON.stringify(stringToObject(methodFilter, 'name')),\n                            JSON.stringify(args),\n                            JSON.stringify(target),\n                            JSON.stringify(options),\n                            successProxy,\n                            errorProxy\n                        );\n                    }\n\n                }.bind(this));\n\n                return promisify(promise, successCallback, errorCallback);\n            },\n\n            // Registers a handler which notifies you when a new AGM method is available.\n            methodAdded: function (callback) {\n                this.agmFacade.methodAdded(callback);\n            },\n\n            // Registers a handler which notifies you when an AGM method stops being available.\n            methodRemoved: function (callback) {\n                this.agmFacade.methodRemoved(callback);\n            },\n\n            serverAdded: function (callback) {\n                this.agmFacade.serverAdded(callback);\n            },\n\n            serverRemoved: function (callback) {\n                this.agmFacade.serverRemoved(callback);\n            },\n\n            serverMethodAdded: function (callback) {\n                this.agmFacade.serverMethodAdded(callback);\n            },\n\n            serverMethodRemoved: function (callback) {\n                this.agmFacade.serverMethodRemoved(callback);\n            },\n\n            // Retrieves a list of AGM servers (instances) optionally filtered by method.\n            servers: function (methodFilter) {\n                var jsonResult = this.agmFacade.servers(JSON.stringify(stringToObject(methodFilter, 'name')));\n                var parsedResult = agmParse(jsonResult);\n                parsedResult.forEach(function(server) {\n                    server.getMethods = function() {\n                        return this.methodsForInstance(server);\n                    }.bind(this);\n                    server.getStreams = function() {\n                        return this.methodsForInstance(server).filter(function (method) {\n                            return method.supportsStreaming;\n                        });\n                    }.bind(this);\n                }, this);\n                return parsedResult;\n            },\n\n            // Retrieves a list of methods that matches a given filter. You can use this to check if a given method exists.\n            methods: function (methodFilter) {\n                var jsonResult = this.agmFacade.methods(JSON.stringify(stringToObject(methodFilter, 'name')));\n                var parsedResult = agmParse(jsonResult);\n                parsedResult.forEach(function (method) {\n                    method.displayName = method.display_name;\n                    method.objectTypes = method.object_types;\n                    method.getServers = function () {\n                        return this.servers(method.name);\n                    }.bind(this);\n                }, this);\n                return parsedResult;\n            },\n\n            methodsForInstance: function (instanceFilter) {\n                var jsonResult = this.agmFacade.methodsForInstance(JSON.stringify(instanceFilter));\n                return agmParse(jsonResult);\n            },\n\n            // streaming support\n            subscribe: function (name, options, successCallback, errorCallback) {\n                var promise = new Promise(function (resolve, reject) {\n                    if (options === undefined) {\n                        options = {};\n                    }\n                    options.args = JSON.stringify(options.arguments || {});\n                    options.target = targetArgToObject(options.target);\n\n                    this.agmFacade.subscribe2(name,\n                        JSON.stringify(options),\n                        function (stream) {\n                            resolve(stream);\n                        },\n                        function (error) {\n                            reject(error);\n                        }\n                    );\n                }.bind(this));\n\n                return promisify(promise, successCallback, errorCallback);\n            },\n\n            createStream: function (streamDef, callbacks, successCallback, errorCallback) {\n                var promise = new Promise(function (resolve, reject) {\n                    if (typeof streamDef === 'string') {\n                        streamDef = { name: streamDef };\n                    }\n\n                    if (!callbacks) {\n                        callbacks = {};\n                    }\n\n                    this.agmFacade.createStream2(\n                        JSON.stringify(streamDef),\n                        // TODO - wrap to transform params\n                        callbacks.subscriptionRequestHandler,\n                        // TODO - wrap to transform params\n                        callbacks.subscriptionAddedHandler,\n                        // TODO - wrap to transform params\n                        callbacks.subscriptionRemovedHandler,\n                        // success handler\n                        function (stream) {\n                            resolve(stream);\n                        },\n                        // error handler\n                        function (error) {\n                            reject(error);\n                        }\n                    );\n                }.bind(this));\n\n                return promisify(promise, successCallback, errorCallback);\n            }\n        };\n\n        // add metrics\n        if (configuration !== undefined && configuration.metrics !== undefined) {\n            configuration.metrics.metricsIdentity = configuration.metrics.identity;\n\n            // quick and dirty - we need to stringify the configuration so we need to replace the metrics object (which has circular references)\n            // with an object that holds only the properties needed\n            var metricsConfig = {\n                metricsIdentity: configuration.metrics.metricsIdentity,\n                path: configuration.metrics.path\n            };\n            configuration.metrics = metricsConfig;\n        }\n        // remove the logger - we don't need it in HC and has circular references\n        delete configuration.logger;\n\n        // create new AGM façade for this instance\n        var successInit = function(instance) {\n\n            result.instance = instance;\n            result.agmFacade = facade;\n\n            // deprecated API\n            result.create_stream = result.createStream;\n            result.methods_for_instance = result.methodsForInstance;\n            result.method_added = result.methodAdded;\n            result.method_removed = result.methodRemoved;\n            result.server_added = result.serverAdded;\n            result.server_removed = result.serverRemoved;\n            result.server_method_added = result.serverMethodAdded;\n            result.server_method_removed = result.serverMethodRemoved;\n\n            resolve(result);\n        };\n\n        var cfgAsString = JSON.stringify(configuration);\n        var pv = facade.protocolVersion;\n\n        if (pv && pv >= 5 && facade.initAsync) {\n            facade.initAsync(cfgAsString,\n                successInit,\n                function (err) {\n                    reject(err);\n                });\n        } else {\n            var instance = facade.init(cfgAsString);\n            successInit(instance);\n        }\n    });\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Repository holding servers and methods visible by this peer including those created by the peer itself.\n */\n\nvar Callbacks = __webpack_require__(1);\n\nmodule.exports = function () {\n    'use strict';\n\n    // each server has format {id:'', info:{}, methods:{}}\n    // where methods has format {id:'', info:{}}\n    var servers = {};\n\n    // object keyed by method id - value is number of servers that offer that method\n    var methodsCount = {};\n\n    // store for callbacks\n    var callbacks = new Callbacks();\n\n    // add a new server to internal collection\n    function addServer(info, serverId) {\n        var current = servers[serverId];\n        if (current) {\n            return current.id;\n        }\n\n        var serverEntry = { id: serverId, info: info, methods: {} };\n        serverEntry.getInfoForUser = function () {\n            var serverInfo = createUserServerInfo(serverEntry.info);\n            serverInfo.getMethods = function () {\n                var methods = getServerMethodById(serverEntry.id);\n                return methods.map(function (m) {\n                    return m.getInfoForUser()\n                });\n            };\n            serverInfo.getStreams = function () {\n                var methods = getServerMethodById(serverEntry.id);\n                methods = methods.filter(function (method) {\n                    return method.supportsStreaming;\n                });\n                return methods.map(function (m) {\n                    return m.getInfoForUser()\n                });\n\n            };\n            return serverInfo;\n        };\n\n        servers[serverId] = serverEntry;\n        callbacks.execute('onServerAdded', serverEntry);\n        return serverId;\n    }\n\n    function removeServerById(id, reason) {\n        var server = servers[id];\n\n        Object.keys(server.methods).forEach(function (methodId) {\n            removeServerMethod(id, methodId);\n        });\n\n        delete servers[id];\n        callbacks.execute('onServerRemoved', server, reason);\n    }\n\n    function addServerMethod(serverId, method) {\n        var server = servers[serverId];\n        if (!server) {\n            throw new Error('server does not exists');\n        }\n\n        var methodId = createMethodId(method);\n\n        // server already has that method\n        if (server.methods[methodId]) {\n            return;\n        }\n\n        var methodEntity = { id: methodId, info: method };\n        methodEntity.getInfoForUser = function () {\n            var result = createUserMethodInfo(methodEntity.info);\n            result.getServers = function () {\n                return getServersByMethod(this.id);\n            }.bind(this);\n            return result;\n        };\n        server.methods[methodId] = methodEntity;\n\n        // increase the ref and notify listeners\n        if (!methodsCount[methodId]) {\n            methodsCount[methodId] = 0;\n            callbacks.execute('onMethodAdded', methodEntity);\n        }\n        methodsCount[methodId] = methodsCount[methodId] + 1;\n        callbacks.execute('onServerMethodAdded', server, methodEntity);\n    }\n\n    function createMethodId(methodInfo) {\n        // Setting properties to defaults:\n        var accepts = methodInfo.accepts !== undefined ? methodInfo.accepts : '';\n        var returns = methodInfo.returns !== undefined ? methodInfo.returns : '';\n        var version = methodInfo.version !== undefined ? methodInfo.version : 0;\n        return (methodInfo.name + accepts + returns + version).toLowerCase();\n    }\n\n    function removeServerMethod(serverId, methodId) {\n        var server = servers[serverId];\n        if (!server) {\n            throw new Error('server does not exists');\n        }\n\n        var method = server.methods[methodId];\n        delete server.methods[methodId];\n\n        // update ref counting\n        methodsCount[methodId] = methodsCount[methodId] - 1;\n        if (methodsCount[methodId] === 0) {\n            callbacks.execute('onMethodRemoved', method);\n        }\n\n        callbacks.execute('onServerMethodRemoved', server, method);\n    }\n\n    function getServersByMethod(id) {\n        var allServers = [];\n        Object.keys(servers).forEach(function (serverId) {\n            var server = servers[serverId];\n            Object.keys(server.methods).forEach(function (methodId) {\n                if (methodId === id) {\n                    allServers.push(server.getInfoForUser());\n                }\n            })\n        });\n        return allServers;\n    }\n\n    function getMethods() {\n        var allMethods = {};\n        Object.keys(servers).forEach(function (serverId) {\n            var server = servers[serverId];\n            Object.keys(server.methods).forEach(function (methodId) {\n                var method = server.methods[methodId];\n                allMethods[method.id] = method;\n            })\n        });\n\n        var methodsAsArray = Object.keys(allMethods).map(function (id) {\n            return allMethods[id];\n        });\n\n        return methodsAsArray;\n    }\n\n    function getServers() {\n        var allServers = [];\n        Object.keys(servers).forEach(function (serverId) {\n            var server = servers[serverId];\n            allServers.push(server)\n        });\n\n        return allServers;\n    }\n\n    function getServerMethodById(serverId) {\n        var server = servers[serverId];\n\n        return Object.keys(server.methods).map(function (id) {\n            return server.methods[id];\n        });\n    }\n\n    function onServerAdded(callback) {\n        callbacks.add('onServerAdded', callback);\n\n        // replay all servers\n        getServers().forEach(function (server) {\n            callback(server);\n        });\n    }\n\n    function onMethodAdded(callback) {\n        callbacks.add('onMethodAdded', callback);\n\n        // reply all existing methods\n        getMethods().forEach(function (method) {\n            callback(method);\n        })\n    }\n\n    function onServerMethodAdded(callback) {\n        callbacks.add('onServerMethodAdded', callback);\n\n        // replay all existing server methods\n        getServers().forEach(function (server) {\n            var methods = server.methods;\n            Object.keys(methods).forEach(function (methodId) {\n                callback(server, methods[methodId]);\n            });\n        });\n    }\n\n    function getServerById(id) {\n        return servers[id];\n    }\n\n    /**\n     * Transforms internal server object to user object\n     * @param server\n     * @returns {{machine: *, pid: *, started: *, user: *, application: *, environment: *, region: *, service_name: *, state: *}}\n     */\n    function createUserServerInfo(serverInfo) {\n        return {\n            machine: serverInfo.machine,\n            pid: serverInfo.pid,\n            user: serverInfo.user,\n            application: serverInfo.application,\n            environment: serverInfo.environment,\n            region: serverInfo.region,\n            instance: serverInfo.instance\n        };\n    }\n\n    /**\n     * Transforms internal method object to user object\n     * @param method\n     * @returns {{name: *, accepts: *, returns: *, description: *, display_name: *, version: *, object_types: (*|Array)}}\n     */\n    function createUserMethodInfo(methodInfo) {\n        return {\n            name: methodInfo.name,\n            accepts: methodInfo.accepts,\n            returns: methodInfo.returns,\n            description: methodInfo.description,\n            displayName: methodInfo.displayName,\n            display_name: methodInfo.displayName,\n            version: methodInfo.version,\n            objectTypes: methodInfo.objectTypes,\n            object_types: methodInfo.objectTypes,\n            supportsStreaming: methodInfo.supportsStreaming\n        };\n    }\n\n    function reset() {\n        servers = {};\n        methodsCount = {};\n    }\n\n    return {\n        getServerById: getServerById,\n        getServers: getServers,\n        getMethods: getMethods,\n        getServerMethodsById: getServerMethodById,\n        getMethodId: createMethodId,\n        addServer: addServer,\n        addServerMethod: addServerMethod,\n        removeServerById: removeServerById,\n        removeServerMethod: removeServerMethod,\n\n        onServerAdded: onServerAdded,\n        onServerRemoved: function (callback) {\n            callbacks.add('onServerRemoved', callback);\n        },\n        onMethodAdded: onMethodAdded,\n        onMethodRemoved: function (callback) {\n            callbacks.add('onMethodRemoved', callback);\n        },\n        onServerMethodAdded: onServerMethodAdded,\n        onServerMethodRemoved: function (callback) {\n            callbacks.add('onServerMethodRemoved', callback);\n        },\n\n        reset: reset\n    }\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n/*\n The streaming module defines the user objects relevant to the streaming api, and\n attaches to relevant events exposed by the protocol.\n */\n\nmodule.exports = function (protocol, unregister) {\n    'use strict';\n\n    function streamFrontObj(repoMethod) {\n        var def = repoMethod.definition;\n\n        return {\n            branches: function () {\n                var bList = protocol.getBranchList(repoMethod);\n                return bList.map(function (branchKey) {\n                    return branchFrontObj(repoMethod, branchKey)\n                });\n            },\n            close: function () {\n                protocol.closeAllSubscriptions(repoMethod);\n                unregister(repoMethod.definition);\n            },\n            definition: {\n                accepts: def.accepts,\n                description: def.description,\n                displayName: def.displayName,\n                name: def.name,\n                objectTypes: def.objectTypes,\n                returns: def.returns,\n                supportsStreaming: def.supportsStreaming\n            },\n            name: def.name,\n            push: function (data, branches) {\n                if (typeof branches !== 'string' && !Array.isArray(branches) && branches !== undefined) {\n                    throw new Error('invalid branches should be string or string array');\n                }\n                // TODO validate if is plain object\n                if (typeof data !== 'object') {\n                    throw new Error('Invalid arguments. Data must be an object.')\n                }\n                protocol.pushData(repoMethod, data, branches)\n            },\n            subscriptions: function () {\n                var subList = protocol.getSubscriptionList(repoMethod);\n                return subList.map(function (sub) {\n                    return subscriptionFrontObj(repoMethod, sub)\n                });\n            }\n        }\n    }\n\n    function subscriptionFrontObj(repoMethod, subscription) {\n        return {\n            arguments: subscription.arguments || {},\n            branchKey: subscription.branchKey,\n            close: function () {\n                protocol.closeSingleSubscription(repoMethod, subscription)\n            },\n            instance: subscription.instance,\n            push: function (data) {\n                protocol.pushDataToSingle(repoMethod, subscription, data);\n            },\n            stream: repoMethod.definition\n        };\n    }\n\n    function branchFrontObj(repoMethod, branchKey) {\n        return {\n            key: branchKey,\n            subscriptions: function () {\n                var subList = protocol.getSubscriptionList(repoMethod, branchKey);\n                return subList.map(function (sub) {\n                    return subscriptionFrontObj(repoMethod, sub)\n                });\n            },\n            close: function () {\n                protocol.closeAllSubscriptions(repoMethod, branchKey);\n            },\n            push: function (data) {\n                protocol.pushToBranch(repoMethod, data, branchKey)\n            }\n        };\n    }\n\n    /** Attach to stream 'events' */\n    protocol.onSubRequest(function (requestContext, repoMethod) {\n\n        if (!(\n            repoMethod &&\n            repoMethod.streamCallbacks &&\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === 'function')\n        ) {\n            return;\n        }\n\n        repoMethod.streamCallbacks.subscriptionRequestHandler({\n            accept: function () {\n                protocol.acceptRequestOnBranch(requestContext, repoMethod, '');\n            },\n            acceptOnBranch: function (branch) {\n                protocol.acceptRequestOnBranch(requestContext, repoMethod, branch)\n            },\n            arguments: requestContext.arguments,\n            instance: requestContext.instance,\n            reject: function (reason) {\n                protocol.rejectRequest(requestContext, repoMethod, reason)\n            }\n        });\n    });\n\n    protocol.onSubAdded(function (subscription, repoMethod) {\n\n        if (!(\n            repoMethod &&\n            repoMethod.streamCallbacks &&\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === 'function')\n        ) {\n            return;\n        }\n\n        repoMethod.streamCallbacks.subscriptionAddedHandler(subscriptionFrontObj(repoMethod, subscription))\n\n    });\n\n    protocol.onSubRemoved(function (subscriber, repoMethod) {\n\n        if (!(\n            repoMethod &&\n            repoMethod.streamCallbacks &&\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === 'function')\n        ) {\n            return;\n        }\n\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(subscriber)\n\n    });\n\n    return { streamFrontObj: streamFrontObj };\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n/*\n * A store for holding method back-objects registered by this instance's server\n */\nmodule.exports = function () {\n    'use strict';\n\n    var nextId = 0;\n    var _methods = [];\n\n    function add(method) {\n        if (typeof method !== 'object') {\n            return;\n        }\n\n        if (method._repoId !== undefined) {\n            return;\n        }\n\n        // id should be a string\n        method._repoId = String(nextId);\n        nextId += 1;\n\n        _methods.push(method);\n\n        return method;\n    }\n\n    function remove(repoId) {\n        if (typeof repoId !== 'string') {\n            return new TypeError('Expecting a string');\n        }\n\n        _methods = _methods.filter(function (m) {\n            return m._repoId !== repoId;\n        });\n    }\n\n    function getById(id) {\n        if (typeof id !== 'string') {\n            return new TypeError('Expecting a string');\n        }\n\n        return _methods.filter(function (m) {\n            return m._repoId === id\n        })[0];\n    }\n\n    function getList() {\n        return _methods.map(function (m) {\n            return m;\n        });\n    }\n\n    function length() {\n        return _methods.length;\n    }\n\n    function reset() {\n        _methods = [];\n    }\n\n    return {\n        add: add,\n        remove: remove,\n        getById: getById,\n        getList: getList,\n        length: length,\n        reset: reset\n    };\n};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n The AGM Server allows users register AGM methods.\n It exposes these methods to AGM clients (using presence messages) and listens for their invocation\n */\n\nvar Promisify = __webpack_require__(5);\nvar Streaming = __webpack_require__(24);\n\n/**\n * @module agm\n */\nmodule.exports = function (protocol, vault, instance, configuration) {\n    'use strict';\n\n    // Save the reference to the metric function if it exists\n    var metric = (configuration.metrics !== undefined) ? configuration.metrics.numberMetric.bind(configuration.metrics) : function () {\n    };\n\n    // An array of the server's methods\n    var streaming = new Streaming(protocol, unregister);\n\n    protocol.onInvoked(onMethodInvoked);\n\n    var invocations = 0;\n\n    function onMethodInvoked(methodToExecute, invocationId, invocationArgs) {\n        metric('Invocations count', invocations++);\n\n        if (!methodToExecute) {\n            return;\n        }\n\n        // Execute it and save the result\n        methodToExecute.theFunction(invocationArgs, function (err, result) {\n            if (err) {\n                // handle error case\n                if (typeof err.message === 'string') {\n                    err = err.message;\n                } else if (typeof err !== 'string') {\n                    err = '';\n                }\n            }\n\n            // The AGM library only transfers objects. If the result is not an object, put it in one\n            if (!result || typeof result !== 'object' || result.constructor === Array) {\n                result = { _result: result };\n            }\n\n            protocol.methodInvocationResult(methodToExecute, invocationId, err, result)\n        });\n    }\n\n    /**\n     * Registers a new agm method\n     * @param {MethodDefinition} methodDefinition\n     * @param {MethodHandler} callback Callback that will be called when the AGM server is invoked\n     */\n    function register(methodDefinition, callback) {\n\n        var wrappedCallbackFunction = function (context, resultCallback) {\n            // get the result as direct invocation of the callback and return it using resultCallback\n            try {\n                var result = callback(context.args, context.instance);\n                resultCallback(null, result);\n            } catch (e) {\n                resultCallback(e, e);\n            }\n        };\n\n        wrappedCallbackFunction.userCallback = callback;\n\n        registerCore(methodDefinition, wrappedCallbackFunction);\n    }\n\n    // registers a new async agm method (the result can be returned in async way)\n    function registerAsync(methodDefinition, callback) {\n\n        var wrappedCallback = function (context, resultCallback) {\n            // invoke the callback passing success and error callbacks\n            try {\n                callback(context.args, context.instance,\n                    // success callback\n                    function (result) {\n                        resultCallback(null, result);\n                    },\n                    // error callback\n                    function (e) {\n                        resultCallback(e, e);\n                    });\n            } catch (e) {\n                resultCallback(e, null);\n            }\n        };\n        wrappedCallback.userCallback = callback;\n        wrappedCallback.isAsync = true;\n\n        registerCore(methodDefinition, wrappedCallback);\n    }\n\n    // Registers a new streaming agm method\n    function createStream(streamDef, callbacks, successCallback, errorCallback) {\n        // in callbacks we have subscriptionRequestHandler, subscriptionAddedHandler, subscriptionRemovedHandler\n\n        var promise = new Promise(function (resolve, reject) {\n            if (typeof streamDef === 'string') {\n\n                if (streamDef === '') {\n                    reject('Invalid stream name.');\n                }\n\n                streamDef = { name: streamDef };\n            }\n\n            streamDef.supportsStreaming = true;\n\n            // User-supplied subscription callbacks\n            if (!callbacks) {\n                callbacks = {};\n            }\n\n            if (typeof callbacks.subscriptionRequestHandler !== 'function') {\n                callbacks.subscriptionRequestHandler = function (request) {\n                    request.accept();\n                }\n            }\n\n            var repoMethod = {\n                method: undefined, // to be initialized by protocol\n                definition: streamDef, // store un-formatted definition for checkups in un-register method\n                streamCallbacks: callbacks\n            };\n\n            // Add the method\n            vault.add(repoMethod);\n\n            protocol.createStream(repoMethod, streamDef,\n                function protocolSuccess() {\n                    metric('Registered methods', vault.length());\n\n                    var streamFrobject = streaming.streamFrontObj(repoMethod);\n\n                    resolve(streamFrobject);\n                },\n                function protocolFail(err) {\n                    vault.remove(repoMethod._repoId);\n\n                    reject(err);\n                });\n        });\n\n        return new Promisify(promise, successCallback, errorCallback);\n    }\n\n    // Core method for registering agm method\n    function registerCore(methodDefinition, theFunction) {\n        // transform the definition\n        if (typeof methodDefinition === 'string') {\n            methodDefinition = { name: methodDefinition };\n        }\n\n        // Add the method ()\n        var repoMethod = vault.add({\n            definition: methodDefinition, // store un-formatted definition for checkups in un-register method\n            theFunction: theFunction\n        });\n\n        protocol.register(repoMethod,\n            function protocolSuccess() {\n                metric('Registered methods', vault.length());\n            },\n            function protocolFail() {\n                vault.remove(repoMethod._repoId);\n            });\n    }\n\n    // Converts the method definition from camel case to snake case\n    function containsProps(filter, object) {\n        var match = true;\n        Object.keys(filter).forEach(function (prop) {\n            if (filter[prop] !== object[prop]) {\n                match = false;\n            }\n        });\n        return match;\n    }\n\n\n    // TODO add success/fail here and at gw1+2 implementations?\n    // Unregisters a previously registered AGM method\n    function unregister(methodFilter) {\n        if (typeof methodFilter === 'string') {\n            methodFilter = { name: methodFilter };\n        }\n\n        var methodsToBeRemoved = vault.getList().filter(function (method) {\n            return containsProps(methodFilter, method.definition);\n        });\n\n        // update repository\n        methodsToBeRemoved.forEach(function (method) {\n            vault.remove(method._repoId);\n            protocol.unregister(method);\n        });\n\n        metric('Registered methods', vault.length());\n    }\n\n    return {\n        register: register,\n        registerAsync: registerAsync,\n        unregister: unregister,\n        createStream: createStream\n    };\n};\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var instance = __webpack_require__(21);\nvar nativeAgm = __webpack_require__(22);\nvar pjson = __webpack_require__(6);\nvar client = __webpack_require__(20);\nvar server = __webpack_require__(26);\nvar gW1Protocol = __webpack_require__(30);\nvar gW3Protocol = __webpack_require__(35);\nvar repository = __webpack_require__(23);\nvar vault = __webpack_require__(25);\n\n\n/**\n * Callback that is invoked with server and method\n * @callback ServerMethodCallback\n * @param {Instance} server\n * @param {MethodDefinition[]} methods\n * */\n\n/**\n * Callback that is invoked with server and method\n * @callback ServerMethodCallback\n * @param {Instance} server\n * @param {MethodDefinition[]} methods\n * */\n\n\n/**\n * Callback that is invoked with server argument\n * @callback InstanceCallback\n * @param {Instance} server\n * */\n\n/**\n * User provided callback that will be called when the AGM is invoked\n * @callback MethodHandler\n */\n\n/**\n *\n * @callback MethodCallback\n * @param {MethodDefinition} method\n */\n\n/**\n * Each AGM application is identified by its AGM instance, which is a set of known key/value pairs.\n *\n * @typedef Instance\n * @property application\n * @property environment\n * @property machine\n * @property pid\n * @property region\n * @property service\n * @property user\n *\n */\n\n/**\n * Object describing an AGM method registered by some application\n *\n * @typedef MethodDefinition\n * @property name The name of the methods\n * @property {string} [accepts] AGM signature, describing what are the parameters the method expects\n * @property {string} [returns] AGM signature, describing what are the properties of the result object the method returns\n * @property {string} [displayName] The human-readable name of the method, which should be used in UI applications, e.g. ‘Open Client Performance’\n * @property {string} [description] Description of what the method does, useful for documentation purposes, and for UI clients, e.g. 'Launches or activates the Client Performance application’\n * @property {string[]} [objectTypes] The entities this method is meant to work on, e.g. a party (client, prospect, lead), instrument, order, etc. More on this later.\n * @property {boolean} [supportsStreaming] If true the method is a strea\n */\n\n/**\n *\n * @typedef InvocationResult\n * @property {MethodDefinition} method - The invoked method definition\n * @property {Object} called_with - The arguments used for the invocation\n * @property {Object} returned - The data returned from the server\n * @property {InvocationResult[]} all_return_values  - Invoking a method on multiple AGM instances produces multiple results. Use all_return_values to obtain all inner results.\n * all_return_values is an array with the same structure as returned for single app invokes.\n * @property {Instance} executed_by - The server that executed the method. If executed on more than one target check all_return_values\n * @property {InvocationError} all_errors\n */\n\n/**\n * @typedef InvocationError\n * @property {Instance} executed_by The server that returns the error\n * @property {string} message Error message returned from the server\n */\n\n/**\n * Invocation options\n * @typedef InvocationOptions\n * @property {number} wait_for_method_timeout Timeout to discover the method if not immediately available (in ms, default 30 secs)\n * @property {number} method_response_timeout Timeout to wait for a method reply (when using the default async value for call_type (in ms, default 30 secs)\n */\n\n/**\n * Object describing methods registered by some AGM server\n *\n * @typedef ServerMethods\n * @property {Instance} server\n * @property {Method[]} methods\n */\n\n/**\n * @module agm\n */\nvar agm = function (configuration) {\n    'use strict';\n    // We will store the library here\n    var agm = {};\n    agm.version = pjson.version;\n\n\n    // Init configuration\n    if (typeof configuration !== 'object') {\n        configuration = {};\n    }\n\n    // Validate configuration\n\n    // Init child configuration if it is not already passed by user\n    var childConfigurations = ['connection', 'client', 'server'];\n    childConfigurations.forEach(function (conf) {\n        if (typeof configuration[conf] !== 'object') {\n            configuration[conf] = {};\n        }\n        // Set debug if global debug is not set:\n        if (configuration.debug) {\n            configuration[conf].debug = true;\n        }\n    });\n\n    if (typeof configuration.client.remove_server_on_n_missing_heartbeats !== 'number') {\n        configuration.client.remove_server_on_n_missing_heartbeats = 3;\n    }\n    if (typeof configuration.client.method_response_timeout !== 'number') {\n        configuration.client.method_response_timeout = 3000;\n    }\n    if (typeof configuration.client.wait_for_method_timeout !== 'number') {\n        configuration.client.wait_for_method_timeout = 3000;\n    }\n\n    if (typeof configuration.server.heartbeat_interval !== 'number') {\n        configuration.server.heartbeat_interval = 5000;\n    }\n    if (typeof configuration.server.presence_interval !== 'number') {\n        configuration.server.presence_interval = 10000;\n    }\n\n    // Determine if we are given a connection object. If not, create it ourselves:\n    var c = configuration.connection;\n    if (!c) {\n        throw new Error('configuration.connection is required');\n    }\n    agm.connection = c;\n\n    // Create a connection proxy which sets the product name automatically\n    var productName = 'agm';\n    agm.connection.sendAGM = function (type, message) {\n        agm.connection.send(productName, type, message);\n    };\n    agm.connection.onAGM = function (type, handler) {\n        agm.connection.on(productName, type, handler);\n    };\n    // Save a reference to the root system object that we are given\n    var metricsRoot = configuration.metrics;\n    // Create subsystems for our modules and save them in their configuration.\n    if (metricsRoot !== undefined) {\n        configuration.client.metrics = metricsRoot.subSystem('Client');\n        configuration.server.metrics = metricsRoot.subSystem('Server');\n    }\n\n    // Initialize our modules\n    agm.instance = instance(configuration.instance);\n    var clientRepository = repository();\n    var serverRepository = vault();\n    var protocolPromise;\n    var protocolVersion = c.protocolVersion;\n    if (protocolVersion === 3) {\n        var serverGetter = function () {\n            return agm.server;\n        };\n        var clientGetter = function () {\n            return agm.client;\n        };\n        protocolPromise = gW3Protocol(agm.instance, agm.connection, clientRepository, serverRepository, configuration, serverGetter, clientGetter);\n    } else {\n        protocolPromise = gW1Protocol(agm.instance, agm.connection, clientRepository, serverRepository, configuration);\n    }\n\n    return new Promise(function(resolve, reject) {\n        // wait for protocol to resolve\n        protocolPromise.then(function (protocol) {\n            agm.client = client(protocol, clientRepository, agm.instance, configuration.client);\n            agm.server = server(protocol, serverRepository, agm.instance, configuration.server);\n\n            // Add method aliases\n            agm.invoke = agm.client.invoke;\n            agm.register = agm.server.register;\n            agm.registerAsync = agm.server.registerAsync;\n            agm.unregister = agm.server.unregister;\n            agm.createStream = agm.server.createStream;\n            agm.subscribe = agm.client.subscribe;\n            agm.servers = agm.client.servers;\n            agm.methods = agm.client.methods;\n\n            agm.methodsForInstance = agm.client.methodsForInstance;\n            agm.method = agm.client.method;\n            agm.methodAdded = agm.client.methodAdded;\n            agm.methodRemoved = agm.client.methodRemoved;\n\n            agm.serverMethodAdded = agm.client.serverMethodAdded;\n            agm.serverMethodRemoved = agm.client.serverMethodRemoved;\n\n            agm.serverAdded = agm.client.serverAdded;\n            agm.serverRemoved = agm.client.serverRemoved;\n\n            resolve(agm);\n\n        }).catch(function (err) {\n            reject(err);\n        });\n    });\n\n};\nagm = global.htmlContainer !== undefined ? nativeAgm : agm;\n// support for es6 imports\nagm.default = agm;\nmodule.exports = agm;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var random = __webpack_require__(2);\nvar helpers = __webpack_require__(3);\n\nmodule.exports = function (configuration, instance, sendRequest, nextResponseSubject) {\n    'use strict';\n\n    var STATUS_AWAITING_ACCEPT = 'awaitingAccept'; // not even one server has accepted yet\n    var STATUS_SUBSCRIBED = 'subscribed'; // at least one server has responded as 'Accepting'\n    var ERR_MSG_SUB_FAILED = 'Subscription failed.';\n    var ERR_MSG_SUB_REJECTED = 'Subscription rejected.';\n    var ON_CLOSE_MSG_SERVER_INIT = 'ServerInitiated';\n    var ON_CLOSE_MSG_CLIENT_INIT = 'ClientInitiated';\n\n    var subscriptionsList = {};\n\n    function subscribe(streamingMethod, argumentObj, targetServers, stuff, success, error) {\n        if (targetServers.length === 0) {\n            error(ERR_MSG_SUB_FAILED + ' No available servers matched the target params.');\n            return;\n        }\n\n        // This same Id will be passed to all the servers (as 'InvocationId')\n        // so they can respond back with it during the initial handshake\n        var subscriptionId = 'subscriptionId_' + random();\n\n        // Register the user's callbacks\n        var pendingSub = registerSubscription(\n            subscriptionId,\n            streamingMethod,\n            argumentObj,\n            success,\n            error,\n            stuff.method_response_timeout\n        );\n\n        if (typeof pendingSub !== 'object') {\n            error(ERR_MSG_SUB_FAILED + ' Unable to register the user callbacks.');\n            return;\n        }\n\n        // Send a subscription request to each server\n        targetServers.forEach(function (target) {\n\n            // Get a response subject for this invocation\n            var responseSubject = nextResponseSubject();\n\n            // Add server to the list of ones the client is expecting a response from\n            pendingSub.trackedServers.push({\n                server: undefined,\n                streamId: undefined,\n                streamSubjects: {\n                    global: undefined,\n                    private: undefined\n                },\n                methodRequestSubject: streamingMethod.info.requestSubject,\n                methodResponseSubject: responseSubject\n            });\n\n            // Construct a message\n            var message = {\n                EventStreamAction: 1, // \"Subscribe\" = client wishes to subscribe\n                MethodRequestSubject: streamingMethod.info.requestSubject,\n                MethodResponseSubject: responseSubject,\n                Client: instance.info(),\n                Context: {\n                    ArgumentsJson: argumentObj,\n                    InvocationId: subscriptionId,\n                    ObjectType: stuff.object_type,\n                    DisplayContext: stuff.display_context,\n                    MethodName: streamingMethod.info.name,\n                    ExecutionServer: target.server.info,\n                    Timeout: stuff.method_response_timeout\n                }\n            };\n\n            // Send it\n            sendRequest(message);\n\n            if (global.console !== undefined && configuration.debug === true) {\n                console.debug('%c>>> sending MethodInvocationRequestMessage', 'background-color:hsla(198, 51%, 79%, 0.5)');\n                console.debug('%c' + JSON.stringify(message), 'background-color:hsla(198, 51%, 79%, 0.5)');\n            }\n        });\n    }\n\n    function registerSubscription(subscriptionId, method, args, success, error, timeout) {\n\n        subscriptionsList[subscriptionId] = {\n            status: STATUS_AWAITING_ACCEPT,\n            method: method,\n            arguments: args,\n            success: success,\n            error: error,\n            trackedServers: [],\n            handlers: {\n                onData: [],\n                onClosed: []\n                // onFailed: []\n            },\n            queued: {\n                data: [],\n                closers: []\n            },\n            timeoutId: undefined\n        };\n\n\n        subscriptionsList[subscriptionId].timeoutId = setTimeout(function () {\n            if (subscriptionsList[subscriptionId] === undefined) {\n                return; // no such subscription\n            }\n\n            var subscription = subscriptionsList[subscriptionId];\n\n\n            if (subscription.status === STATUS_AWAITING_ACCEPT) {\n                error({\n                    method: method,\n                    called_with: args,\n                    message: ERR_MSG_SUB_FAILED + ' Subscription attempt timed out after ' + timeout + 'ms.'\n                });\n\n                // None of the target servers has answered the subscription attempt\n                delete subscriptionsList[subscriptionId];\n\n            } else if (subscription.status === STATUS_SUBSCRIBED &&\n                subscription.trackedServers.length > 0) {\n                // Clean the trackedServers, removing those without valid streamId\n                subscription.trackedServers = subscription.trackedServers.filter(function (server) {\n                    return (typeof server.streamId === 'string' && server.streamId !== '')\n                });\n\n                subscription.timeoutId = undefined;\n\n                if (subscription.trackedServers.length === 0) {\n                    // TODO this might be dead-code, where is closers.push?\n                    // There are no open streams, some servers accepted then closed very quickly\n                    //\t(that's why the status changed but there's no good server with a StreamId)\n\n                    // call the onClosed handlers\n                    var closersCount = subscription.queued.closers.length;\n                    var closingServer = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\n\n                    subscription.handlers.onClosed.forEach(function (callback) {\n                        if (typeof callback === 'function') {\n                            callback({\n                                message: ON_CLOSE_MSG_SERVER_INIT,\n                                requestArguments: subscription.arguments,\n                                server: closingServer,\n                                stream: subscription.method\n                            })\n                        }\n                    });\n\n                    delete subscriptionsList[subscriptionId];\n                }\n            }\n        }, timeout);\n\n        return subscriptionsList[subscriptionId]\n    }\n\n    function processPublisherMsg(msg) {\n        if (!(msg && msg.EventStreamAction && msg.EventStreamAction !== 0)) {\n            return;\n        }\n\n        if (msg.EventStreamAction === 2) {\n\n            serverIsKickingASubscriber(msg);\n\n        } else if (msg.EventStreamAction === 3) {\n\n            serverAcknowledgesGoodSubscription(msg);\n\n        } else if (msg.EventStreamAction === 5) {\n\n            serverHasPushedSomeDataIntoTheStream(msg);\n        }\n\n    }\n\n    /** msg 'Response' Actions */\n    // action 2\n    function serverIsKickingASubscriber(msg) {\n        // Note: this might be either the server rejecting a subscription request OR closing an existing subscription\n\n        // Get ALL subscriptions\n        var keys = Object.keys(subscriptionsList);\n\n        // If it is a rejection there may be an InvocationId, it can narrow the search\n        if (typeof msg.InvocationId === 'string' && msg.InvocationId !== '') {\n            keys = keys.filter(function (k) {\n                return k === msg.InvocationId;\n            })\n        }\n\n        var deletionsList = [];\n\n        // Find the kicking/rejecting server and remove it from the subscription.trackedServers[]\n        keys.forEach(function (key) {\n            if (typeof subscriptionsList[key] !== 'object') {\n                return;\n            }\n\n            subscriptionsList[key].trackedServers = subscriptionsList[key].trackedServers.filter(function (server) {\n                var isRejecting = (\n                    server.methodRequestSubject === msg.MethodRequestSubject && server.methodResponseSubject === msg.MethodResponseSubject\n                );\n\n                var isKicking = (\n                    server.streamId === msg.StreamId &&\n                    (server.streamSubjects.global === msg.EventStreamSubject || server.streamSubjects.private === msg.EventStreamSubject)\n                );\n\n                var isRejectingOrKicking = isRejecting || isKicking;\n\n                return !isRejectingOrKicking;\n            });\n\n            if (subscriptionsList[key].trackedServers.length === 0) {\n                deletionsList.push(key);\n            }\n        });\n\n        // Call onClosed OR error()\n        // and remove the subscription\n        deletionsList.forEach(function (key) {\n            if (typeof subscriptionsList[key] !== 'object') {\n                return;\n            }\n\n            if (\n                subscriptionsList[key].status === STATUS_AWAITING_ACCEPT &&\n                typeof subscriptionsList[key].timeoutId === 'number'\n            ) {\n\n                var reason = (typeof msg.ResultMessage === 'string' && msg.ResultMessage !== '') ?\n                    ' Publisher said \"' + msg.ResultMessage + '\".' :\n                    ' No reason given.';\n\n                var callArgs = typeof subscriptionsList[key].arguments === 'object' ?\n                    JSON.stringify(subscriptionsList[key].arguments) :\n                    '{}';\n\n                subscriptionsList[key].error(ERR_MSG_SUB_REJECTED + reason + ' Called with:' + callArgs);\n                clearTimeout(subscriptionsList[key].timeoutId);\n\n            } else {\n\n                // The timeout may or may not have expired yet,\n                // but the status is 'subscribed' and trackedServers is now empty\n\n                subscriptionsList[key].handlers.onClosed.forEach(function (callback) {\n                    if (typeof callback !== 'function') {\n                        return;\n                    }\n\n                    callback({\n                        message: ON_CLOSE_MSG_SERVER_INIT,\n                        requestArguments: subscriptionsList[key].arguments,\n                        server: helpers.convertInfoToInstance(msg.Server),\n                        stream: subscriptionsList[key].method\n                    });\n                });\n\n            }\n\n            delete subscriptionsList[key];\n\n        });\n    }\n\n    // action 3\n    function serverAcknowledgesGoodSubscription(msg) {\n\n        var subscriptionId = msg.InvocationId;\n\n        var subscription = subscriptionsList[subscriptionId];\n\n        if (typeof subscription !== 'object') {\n            return;\n        }\n\n        var acceptingServer = subscription.trackedServers.filter(function (server) {\n            return (\n                server.methodRequestSubject === msg.MethodRequestSubject &&\n                server.methodResponseSubject === msg.MethodResponseSubject\n            )\n        })[0];\n\n        if (typeof acceptingServer !== 'object') {\n            return;\n        }\n\n        var isFirstResponse = (subscription.status === STATUS_AWAITING_ACCEPT);\n\n        subscription.status = STATUS_SUBSCRIBED;\n\n        var privateStreamSubject = generatePrivateStreamSubject(subscription.method.name);\n\n        if (typeof acceptingServer.streamId === 'string' && acceptingServer.streamId !== '') {\n            return; // already accepted previously\n        }\n\n        acceptingServer.server = helpers.convertInfoToInstance(msg.Server);\n        acceptingServer.streamId = msg.StreamId;\n        acceptingServer.streamSubjects.global = msg.EventStreamSubject;\n        acceptingServer.streamSubjects.private = privateStreamSubject;\n        // acceptingServer.methodResponseSubject stays the same\n\n        var confirmatoryRequest = {\n            EventStreamAction: 3, // \"Subscribed\" = client confirms intention to subscribe\n            EventStreamSubject: privateStreamSubject,\n            StreamId: msg.StreamId,\n            MethodRequestSubject: msg.MethodRequestSubject,\n            MethodResponseSubject: acceptingServer.methodResponseSubject,\n            Client: instance.info(),\n            Context: {\n                ArgumentsJson: subscription.arguments,\n                MethodName: subscription.method.name\n            }\n        };\n\n        sendRequest(confirmatoryRequest);\n\n        if (isFirstResponse) {\n            // Pass in the subscription object\n            subscription.success({\n                onData: function (dataCallback) {\n                    if (typeof dataCallback !== 'function') {\n                        throw new TypeError('The data callback must be a function.')\n                    }\n\n                    this.handlers.onData.push(dataCallback)\n                    if (this.handlers.onData.length === 1 && this.queued.data.length > 0) {\n                        this.queued.data.forEach(function (dataItem) {\n                            dataCallback(dataItem)\n                        })\n                    }\n                }.bind(subscription),\n                onClosed: function (closedCallback) {\n                    if (typeof closedCallback !== 'function') {\n                        throw new TypeError('The callback must be a function.')\n                    }\n                    this.handlers.onClosed.push(closedCallback)\n                }.bind(subscription),\n                onFailed: function () { /* Will not be implemented for browser. */\n                },\n                close: closeSubscription.bind(subscription, subscriptionId),\n                requestArguments: subscription.arguments,\n                serverInstance: helpers.convertInfoToInstance(msg.Server),\n                stream: subscription.method\n            });\n        }\n    }\n\n    // action 5\n    function serverHasPushedSomeDataIntoTheStream(msg) {\n\n        // Find the subscription of interest by trawling the dictionary\n        for (var key in subscriptionsList) {\n            if (subscriptionsList.hasOwnProperty(key) && typeof subscriptionsList[key] === 'object') {\n\n                var isPrivateData;\n\n                var trackedServersFound = subscriptionsList[key].trackedServers.filter(function (ls) {\n                    return (\n                        ls.streamId === msg.StreamId &&\n                        (ls.streamSubjects.global === msg.EventStreamSubject ||\n                        ls.streamSubjects.private === msg.EventStreamSubject)\n                    );\n                });\n\n                if (trackedServersFound.length === 0) {\n                    isPrivateData = undefined;\n                } else if (trackedServersFound[0].streamSubjects.global === msg.EventStreamSubject) {\n                    isPrivateData = false;\n                } else if (trackedServersFound[0].streamSubjects.private === msg.EventStreamSubject) {\n                    isPrivateData = true;\n                }\n\n                if (isPrivateData !== undefined) {\n                    // create the arrivedData object\n                    var receivedStreamData = {\n                        data: msg.ResultContextJson,\n                        server: helpers.convertInfoToInstance(msg.Server),\n                        requestArguments: subscriptionsList[key].arguments || {},\n                        message: msg.ResultMessage,\n                        private: isPrivateData\n                    };\n\n                    var onDataHandlers = subscriptionsList[key].handlers.onData;\n                    var queuedData = subscriptionsList[key].queued.data;\n\n                    if (Array.isArray(onDataHandlers)) {\n                        if (onDataHandlers.length > 0) {\n                            onDataHandlers.forEach(function (callback) {\n                                if (typeof callback === 'function') {\n                                    callback(receivedStreamData)\n                                }\n                            })\n                        } else {\n                            queuedData.push(receivedStreamData)\n                        }\n                    }\n                }\n            }\n        }// end for-in\n    }\n\n    /** (subscription) Methods */\n    function closeSubscription(subId) {\n\n        var responseSubject = nextResponseSubject();\n\n        this.trackedServers.forEach(function (server) {\n            sendRequest({\n                EventStreamAction: 2,\n                Client: instance.info(),\n                MethodRequestSubject: server.methodRequestSubject,\n                MethodResponseSubject: responseSubject,\n                StreamId: server.streamId,\n                EventStreamSubject: server.streamSubjects.private\n            });\n        });\n\n        var sub = this;\n\n        // Call the onClosed handlers\n        this.handlers.onClosed.forEach(function (callback) {\n            if (typeof callback === 'function') {\n                callback({\n                    message: ON_CLOSE_MSG_CLIENT_INIT,\n                    requestArguments: sub.arguments || {},\n                    server: sub.trackedServers[sub.trackedServers.length - 1].server, // the last one of multi-server subscription\n                    stream: sub.method\n                })\n            }\n        });\n\n        delete subscriptionsList[subId];\n    }\n\n    function generatePrivateStreamSubject(methodName) {\n\n        var appInfo = instance.info();\n\n        var privateStreamSubject = 'ESSpriv-jsb_' +\n            appInfo.ApplicationName +\n            '_on_' +\n            methodName +\n            '_' +\n            random();\n\n        return privateStreamSubject;\n    }\n\n    return { // an instance of the streaming module\n        subscribe: subscribe,\n        processPublisherMsg: processPublisherMsg\n    };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar random = __webpack_require__(2);\nvar callbackRegistry = __webpack_require__(1);\nvar Streaming = __webpack_require__(28);\nvar helpers = __webpack_require__(3);\n\nmodule.exports = function (connection, instance, configuration, repository) {\n    'use strict';\n    var timers = {};\n    var respCounter = 0;\n    var callbacks = callbackRegistry();\n\n    var streaming = new Streaming(\n        configuration,\n        instance,\n        function (m) {\n            connection.sendAGM('MethodInvocationRequestMessage', m)\n        },\n        nextResponseSubject\n    );\n\n    function nextResponseSubject() {\n        return 'resp_' + (respCounter++) + '_' + random();\n    }\n\n    function createServerInfo(instance) {\n        return {\n            machine: instance.MachineName,\n            pid: instance.ProcessId,\n            started: instance.ProcessStartTime,\n            user: instance.UserName,\n            application: instance.ApplicationName,\n            environment: instance.Environment,\n            region: instance.Region,\n            service_name: instance.ServiceName,\n            metrics_repository_id: instance.MetricsRepositoryId,\n            state: instance.State\n        };\n    }\n\n    function createMethod(methodInfo) {\n        var method = methodInfo.Method;\n        return {\n            name: method.Name,\n            accepts: method.InputSignature,\n            returns: method.ResultSignature,\n            requestSubject: methodInfo.MethodRequestSubject,\n            description: method.Description,\n            displayName: method.DisplayName,\n            version: method.Version,\n            objectTypes: method.ObjectTypeRestrictions,\n            supportsStreaming: helpers.isStreamingFlagSet(method.Flags)\n        };\n    }\n\n    // Generates a unique ID for a server\n    function createServerId(serverInfo) {\n        if (serverInfo === undefined) {\n            return undefined;\n        }\n\n        return [serverInfo.application,\n            serverInfo.user,\n            serverInfo.machine,\n            serverInfo.started,\n            serverInfo.pid].join('/').toLowerCase();\n    }\n\n    function processServerPresence(presence, isPresence) {\n\n        var instance = presence.Instance;\n        var serverInfo = createServerInfo(instance);\n        var serverId = createServerId(serverInfo);\n\n        if (isPresence) {\n            // test\n            // console.debug(new Date(), '  heard presence');\n            // if (instance.ApplicationName === 'Dummy server') {\n            //     console.debug(new Date(), '  got Dummy server presence', presence);\n            // }\n\n            serverId = repository.addServer(serverInfo, serverId);\n\n            if (presence.PublishingInterval) {\n                scheduleTimeout(serverId, presence.PublishingInterval);\n            }\n        } else if (presence.PublishingInterval === 0) {\n            // Good bye message from Gateway\n            var server = repository.getServerById(serverId);\n            if (typeof server !== 'undefined') {\n                repository.removeServerById(serverId);\n            }\n        }\n\n        // Finally, update the methods\n        if (presence.MethodDefinitions !== undefined) {\n            updateServerMethods(serverId, presence.MethodDefinitions);\n        }\n    }\n\n    // This function sets a timeout which removes the server unless - the function is called again before the timeout is over\n    function scheduleTimeout(serverId, duration) {\n\n        if (duration === -1) {\n            return;\n        }\n        // Stop the previous timeout\n        var timer = timers[serverId];\n        if (timer !== undefined) {\n            clearTimeout(timer);\n        }\n\n        // Set a new one\n        timers[serverId] = setTimeout(function () {\n            repository.removeServerById(serverId);\n        }, duration * (configuration.client.remove_server_on_n_missing_heartbeats + 1));\n    }\n\n    // Updates the methods of a server\n    function updateServerMethods(serverId, newMethods) {\n\n        // Get an array of the methods the server had before we started this\n        var oldMethods = repository.getServerMethodsById(serverId);\n\n        // Get an array of the methods that the server has now\n        newMethods = newMethods.map(createMethod).reduce(function (obj, method) {\n            var methodId = repository.getMethodId(method);\n            obj[methodId] = method;\n            return obj;\n        }, {});\n\n        // For each of the old methods\n        Object.keys(oldMethods).forEach(function (methodId) {\n            var method = oldMethods[methodId];\n            // Check if it is still there\n            if (newMethods[method.id] === undefined) {\n                // If it isn't, remove it\n                repository.removeServerMethod(serverId, method.id);\n            } else {\n                // If it is there in both the old array and the new one, we don't need to add it again\n                delete newMethods[method.id];\n            }\n        });\n        // Now add the new methods\n        Object.keys(newMethods).forEach(function (key) {\n            var method = newMethods[key];\n            repository.addServerMethod(serverId, method);\n        });\n    }\n\n    function invoke(id, method, args, target, stuff) {\n\n        var methodInfo = method.info;\n        // Construct a message\n        var message = {\n            MethodRequestSubject: methodInfo.requestSubject,\n            MethodResponseSubject: nextResponseSubject(),\n            Client: instance.info(),\n            Context: {\n                ArgumentsJson: args,\n                InvocationId: id,\n                ObjectType: stuff.object_type,\n                DisplayContext: stuff.display_context,\n                MethodName: methodInfo.name,\n                ExecutionServer: target.info,\n                Timeout: stuff.method_response_timeout\n            }\n        };\n\n        connection.sendAGM('MethodInvocationRequestMessage', message);\n    }\n\n    function handleInvokeResultMessage(message) {\n\n        // Delegate streaming-related messages to streaming\n        if (message && message.EventStreamAction && message.EventStreamAction !== 0) {\n            streaming.processPublisherMsg(message);\n            return;\n        }\n\n        var server = message.Server ? createServerInfo(message.Server) : undefined;\n\n        // parse the result\n        var result = message.ResultContextJson;\n        // If the result is an empty object, there is no result\n        if (result && Object.keys(result).length === 0) {\n            result = undefined;\n        }\n\n        callbacks.execute('onResult', message.InvocationId, server, message.Status, result, message.ResultMessage);\n    }\n\n    function onInvocationResult(callback) {\n        callbacks.add('onResult', callback);\n    }\n\n    function listenForEvents() {\n        connection.onAGM('ServerPresenceMessage', function (msg) {\n            processServerPresence(msg, true);\n        });\n        connection.onAGM('ServerHeartbeatMessage', function (msg) {\n            processServerPresence(msg, false);\n        });\n        connection.onAGM('MethodInvocationResultMessage', handleInvokeResultMessage);\n    }\n\n    listenForEvents();\n\n    return {\n        invoke: invoke,\n        onInvocationResult: onInvocationResult,\n        subscribe: streaming.subscribe\n    }\n};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ServerProtocol = __webpack_require__(32);\nvar ClientProtocol = __webpack_require__(29);\n\nmodule.exports = function (instance, connection, repository, vault, configuration) {\n    'use strict';\n    connection.onAGM('Instance', instance._updateIdentity);\n\n    var serverProtocol = new ServerProtocol(connection, instance, configuration, vault);\n    var clientProtocol = new ClientProtocol(connection, instance, configuration, repository);\n\n    return new Promise(function (resolve) {\n\n        resolve({\n            // method-related\n            invoke: clientProtocol.invoke,\n            onInvocationResult: clientProtocol.onInvocationResult,\n            register: serverProtocol.register,\n            unregister: serverProtocol.unregister,\n            onInvoked: serverProtocol.onInvoked,\n            methodInvocationResult: serverProtocol.methodInvocationResult,\n\n            // stream-related\n            subscribe: clientProtocol.subscribe,\n            createStream: serverProtocol.createStream,\n            getBranchList: serverProtocol.getBranchList,\n            getSubscriptionList: serverProtocol.getSubscriptionList,\n            closeAllSubscriptions: serverProtocol.closeAllSubscriptions,\n            closeSingleSubscription: serverProtocol.closeSingleSubscription,\n            pushData: serverProtocol.pushData,\n            pushDataToSingle: serverProtocol.pushDataToSingle,\n            onSubRequest: serverProtocol.onSubRequest,\n            acceptRequestOnBranch: serverProtocol.acceptRequestOnBranch,\n            rejectRequest: serverProtocol.rejectRequest,\n            onSubAdded: serverProtocol.onSubAdded,\n            onSubRemoved: serverProtocol.onSubRemoved\n        });\n    });\n};\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar random = __webpack_require__(2);\n// TODO use Callbacks = require(~)\nvar helpers = __webpack_require__(3);\n\nmodule.exports = function (connection, instance) {\n    'use strict';\n    // TODO extract these into Callbacks\n    var requestHandler = null;\n    var subAddedHandler = null;\n    var subRemovedHandler = null;\n\n    function sendResult(message) {\n        if (typeof message !== 'object') {\n            throw new Error('Invalid message.');\n        }\n\n        if (typeof message.Status !== 'number') {\n            message.Status = 0;\n        }\n\n        connection.sendAGM('MethodInvocationResultMessage', message);\n    }\n\n    function isStreamMsgForStreamingMethod(msg, method) {\n        return (\n            msg &&\n            msg.EventStreamAction &&\n            msg.EventStreamAction !== 0 &&\n            typeof method === 'object' &&\n            method.definition.supportsStreaming === true\n        );\n    }\n\n    function processSubscriberMsg(msg, streamingMethod) {\n        if (!(msg && msg.EventStreamAction && msg.EventStreamAction !== 0)) {\n            return;\n        }\n\n        if (msg.EventStreamAction === 1) {\n            clientWishesToSubscribe(msg, streamingMethod);\n\n        } else if (msg.EventStreamAction === 2) {\n            clientWishesToUnsubscribe(msg, streamingMethod);\n\n        } else if (msg.EventStreamAction === 3) {\n            clientAcknowledgesItDidSubscribe(msg, streamingMethod);\n\n        } else if (msg.EventStreamAction === 4) {\n            clientPerSubHeartbeat(msg);\n        }\n    }\n\n    /** msg 'Request' Actions */\n    // action 1\n    function clientWishesToSubscribe(msg, streamingMethod) {\n\n        var requestContext = {\n            msg: msg,\n            arguments: msg.Context.ArgumentsJson || {},\n            instance: helpers.convertInfoToInstance(msg.Client)\n        };\n\n        if (typeof requestHandler === 'function') {\n            requestHandler(requestContext, streamingMethod);\n        }\n    }\n\n    // action 2\n    function clientWishesToUnsubscribe(msg, streamingMethod) {\n\n        if (!(\n            streamingMethod &&\n            Array.isArray(streamingMethod.subscriptions) &&\n            streamingMethod.subscriptions.length > 0)\n        ) {\n            return;\n        }\n\n        closeIndividualSubscription(streamingMethod, msg.StreamId, msg.EventStreamSubject, false)\n    }\n\n    // action 3\n    function clientAcknowledgesItDidSubscribe(msg, streamingMethod) {\n        // Client indicates it is listening to a specific StreamId\n\n        if (typeof msg.StreamId !== 'string' || msg.StreamId === '') {\n            return;\n        }\n\n        var branchKey = getBranchKey(streamingMethod, msg.StreamId);\n\n        if (typeof branchKey !== 'string') {\n            return;\n        }\n\n        if (!Array.isArray(streamingMethod.subscriptions)) {\n            return;\n        }\n\n        var subscription = {\n            branchKey: branchKey,\n            instance: helpers.convertInfoToInstance(msg.Client),\n            arguments: msg.Context.ArgumentsJson,\n            streamId: msg.StreamId,\n            privateEventStreamSubject: msg.EventStreamSubject,\n            methodResponseSubject: msg.MethodResponseSubject\n        };\n\n        // Subscription back-obj is stored\n        streamingMethod.subscriptions.push(subscription);\n\n        if (typeof subAddedHandler === 'function') {\n            subAddedHandler(subscription, streamingMethod);\n        }\n    }\n\n    // action 4\n    function clientPerSubHeartbeat() {\n        // A client may have multiple subscriptions, each one having its own heartbeat\n        // Currently not implemented by the GW or the client\n    }\n\n\n    /** (request) Methods */\n    function acceptRequestOnBranch(requestContext, streamingMethod, branch) {\n        if (typeof branch !== 'string') {\n            branch = '';\n        }\n\n        var streamId = getStreamId(streamingMethod, branch);\n\n        var msg = requestContext.msg;\n\n        sendResult({\n            EventStreamAction: 3,\n            EventStreamSubject: streamingMethod.globalEventStreamSubject,\n            InvocationId: msg.Context.InvocationId,\n            MethodName: streamingMethod.method.Method.Name,\n            MethodRequestSubject: streamingMethod.method.MethodRequestSubject,\n            MethodResponseSubject: msg.MethodResponseSubject,\n            MethodVersion: streamingMethod.method.Method.Version,\n            ResultMessage: 'Accepted',\n            Server: instance.info(),\n            StreamId: streamId\n        });\n    }\n\n    function getBranchKey(streamingMethod, streamId) {\n        if (typeof streamId !== 'string' || typeof streamingMethod !== 'object') {\n            return;\n        }\n\n        var needle = streamingMethod.branchKeyToStreamIdMap.filter(function (branch) {\n            return branch.streamId === streamId;\n        })[0];\n\n        if (typeof needle !== 'object' || typeof needle.key !== 'string') {\n            return;\n        }\n\n        return needle.key;\n    }\n\n    function getStreamId(streamingMethod, branchKey) {\n        if (typeof branchKey !== 'string') {\n            branchKey = '';\n        }\n\n        var needleBranch = streamingMethod.branchKeyToStreamIdMap.filter(function (branch) {\n            return branch.key === branchKey;\n        })[0];\n\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\n\n        if (typeof    streamId !== 'string' || streamId === '') {\n            streamId = generateNewStreamId(streamingMethod.method.Method.Name);\n            streamingMethod.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\n        }\n\n        return streamId;\n    }\n\n    function generateNewStreamId(streamingMethodName) {\n        var appInfo = instance.info();\n\n        var newStreamId = 'streamId-jsb_of_' +\n            streamingMethodName +\n            '__by_' +\n            appInfo.ApplicationName +\n            '_' +\n            random();\n\n        return newStreamId;\n    }\n\n    function rejectRequest(requestContext, streamingMethod, reason) {\n        if (typeof reason !== 'string') {\n            reason = '';\n        }\n\n        var msg = requestContext.msg;\n\n        sendResult({\n            EventStreamAction: 2,\n            EventStreamSubject: streamingMethod.globalEventStreamSubject,\n            // InvocationId: msg.Context.InvocationId,\n            MethodName: streamingMethod.method.Method.Name,\n            MethodRequestSubject: streamingMethod.method.MethodRequestSubject,\n            MethodResponseSubject: msg.MethodResponseSubject,\n            MethodVersion: streamingMethod.method.Method.Version,\n            ResultMessage: reason,\n            Server: instance.info(),\n            StreamId: 'default_rejection_streamId'\n        });\n    }\n\n    /** (subscription) Methods */\n    function closeIndividualSubscription(streamingMethod, streamId, privateEventStreamSubject, sendKickMessage) {\n\n        var subscription = streamingMethod.subscriptions.filter(function (subItem) {\n            return (\n                subItem.privateEventStreamSubject === privateEventStreamSubject &&\n                subItem.streamId === streamId\n            );\n        })[0];\n\n        if (typeof subscription !== 'object') {\n            return; // unrecognised subscription\n        }\n\n        var initialLength = streamingMethod.subscriptions.length;\n\n        streamingMethod.subscriptions = streamingMethod.subscriptions.filter(function (subItem) {\n            return !(\n                subItem.privateEventStreamSubject === subscription.privateEventStreamSubject &&\n                subItem.streamId === subscription.streamId\n            );\n        });\n\n        var filteredLength = streamingMethod.subscriptions.length;\n\n        if (filteredLength !== (initialLength - 1)) {\n            return; // the subscription wasn't removed\n        }\n\n        if (sendKickMessage === true) {\n            sendResult({\n                EventStreamAction: 2,\n                EventStreamSubject: privateEventStreamSubject,\n                MethodName: streamingMethod.method.Method.Name,\n                MethodRequestSubject: streamingMethod.method.MethodRequestSubject,\n                MethodResponseSubject: subscription.methodResponseSubject,\n                MethodVersion: streamingMethod.method.Method.Version,\n                ResponseContextJson: {},\n                Server: instance.info(),\n                StreamId: subscription.streamId,\n                Status: 0\n            });\n        }\n\n        if (typeof subRemovedHandler === 'function') {\n            subRemovedHandler(subscription, streamingMethod)\n        }\n    }\n\n    function closeMultipleSubscriptions(streamingMethod, branchKey) {\n        if (typeof streamingMethod !== 'object' || !Array.isArray(streamingMethod.branchKeyToStreamIdMap)) {\n            return;\n        }\n\n        var streamList = streamingMethod.branchKeyToStreamIdMap;\n\n        if (typeof branchKey === 'string') {\n            streamList = streamingMethod.branchKeyToStreamIdMap.filter(function (br) {\n                return (typeof br === 'object' && br.key === branchKey);\n            });\n        }\n\n        // TODO: consider getting the unique branch keys from 'live subscribers'\n\n        streamList.forEach(function (br) {\n            var streamId = br.streamId;\n\n            sendResult({\n                EventStreamAction: 2,\n                EventStreamSubject: streamingMethod.globalEventStreamSubject,\n                MethodName: streamingMethod.method.Method.Name,\n                MethodRequestSubject: streamingMethod.method.MethodRequestSubject,\n                Server: instance.info(),\n                StreamId: streamId,\n                Status: 0\n            });\n        });\n    }\n\n    function closeSingleSubscription(streamingMethod, subscription) {\n        closeIndividualSubscription(\n            streamingMethod,\n            subscription.streamId,\n            subscription.privateEventStreamSubject,\n            true\n        );\n    }\n\n    function pushDataToSingle(streamingMethod, subscription, data) {\n\n        // TODO validate data is a plain object\n        if (typeof data !== 'object') {\n            throw new Error('Invalid arguments. Data must be an object.');\n        }\n\n        sendResult({\n            EventStreamAction: 5,\n            EventStreamSubject: subscription.privateEventStreamSubject,\n            MethodName: streamingMethod.method.Method.Name,\n            MethodRequestSubject: streamingMethod.method.MethodRequestSubject,\n            ResultContextJson: data,\n            Server: instance.info(),\n            StreamId: subscription.streamId\n        });\n    }\n\n    function pushToBranch(streamingMethod, data, branches) {\n        if (typeof streamingMethod !== 'object' || !Array.isArray(streamingMethod.branchKeyToStreamIdMap)) {\n            return;\n        }\n\n        // TODO validate data is a plain object\n        if (typeof data !== 'object') {\n            throw new Error('Invalid arguments. Data must be an object.');\n        }\n\n        if (typeof branches === 'string') {\n            branches = [branches]; // user wants to push to single branch\n        } else if (!Array.isArray(branches) || branches.length <= 0) {\n            branches = null;\n        }\n\n        // get the StreamId's from the method's branch map\n        var streamIdList = streamingMethod.branchKeyToStreamIdMap\n            .filter(function (br) {\n                return (\n                    branches === null || (Boolean(br) && typeof br.key === 'string' && branches.indexOf(br.key) >= 0)\n                );\n            }).map(function (br) {\n                return br.streamId;\n            });\n\n        streamIdList.forEach(function (streamId) {\n\n            sendResult({\n                EventStreamAction: 5,\n                EventStreamSubject: streamingMethod.globalEventStreamSubject,\n                MethodName: streamingMethod.method.Method.Name,\n                MethodRequestSubject: streamingMethod.method.MethodRequestSubject,\n                ResultContextJson: data,\n                Server: instance.info(),\n                StreamId: streamId\n            });\n\n        });\n    }\n\n    function getSubscriptionList(streamingMethod, branchKey) {\n        if (typeof streamingMethod !== 'object') {\n            return [];\n        }\n\n        var subscriptions = [];\n\n        if (typeof branchKey !== 'string') {\n            subscriptions = streamingMethod.subscriptions;\n        } else {\n            subscriptions = streamingMethod.subscriptions.filter(function (sub) {\n                return sub.branchKey === branchKey;\n            });\n        }\n\n        return subscriptions;\n    }\n\n    function getBranchList(streamingMethod) {\n        if (typeof streamingMethod !== 'object') {\n            return [];\n        }\n\n        return getUniqueBranchNames(streamingMethod);\n\n        // TODO the agm-api passes each sub to protocol methods for creating the sub front obj\n    }\n\n    // Returns the names of branches for which there are live subscriptions\n    function getUniqueBranchNames(streamingMethod) {\n        var keysWithDuplicates = streamingMethod.subscriptions.map(function (sub) {\n            var result = null;\n            if (typeof sub === 'object' && typeof sub.branchKey === 'string') {\n                result = sub.branchKey;\n            }\n            return result;\n        });\n\n        var seen = [];\n\n        var branchArray = keysWithDuplicates.filter(function (bKey) {\n            if (bKey === null || seen.indexOf(bKey) >= 0) {\n                return false;\n            }\n            seen.push(bKey);\n            return true;\n        });\n\n        return branchArray;\n    }\n\n    /** setting user-provided handlers */ // TODO replace innerds with callback.js\n    function addRequestHandler(handlerFunc) {\n        if (typeof handlerFunc !== 'function') {\n            return;\n        }\n\n        requestHandler = handlerFunc;\n    }\n\n    function addSubAddedHandler(handlerFunc) {\n        if (typeof handlerFunc !== 'function') {\n            return;\n        }\n\n        subAddedHandler = handlerFunc;\n    }\n\n    function addSubRemovedHandler(handlerFunc) {\n        if (typeof handlerFunc !== 'function') {\n            return;\n        }\n\n        subRemovedHandler = handlerFunc;\n    }\n\n    return { // an instance of the publisher\n        isStreamMsg: isStreamMsgForStreamingMethod,\n        processSubscriberMsg: processSubscriberMsg,\n        pushData: pushToBranch,\n        pushDataToSingle: pushDataToSingle,\n        closeAllSubscriptions: closeMultipleSubscriptions,\n        closeSingleSubscription: closeSingleSubscription,\n        getSubscriptionList: getSubscriptionList,\n        getBranchList: getBranchList,\n        onSubRequest: addRequestHandler,\n        acceptRequestOnBranch: acceptRequestOnBranch,\n        rejectRequest: rejectRequest,\n        onSubAdded: addSubAddedHandler,\n        onSubRemoved: addSubRemovedHandler,\n        generateNewStreamId: generateNewStreamId\n\n    };\n};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar random = __webpack_require__(2);\nvar callbackRegistry = __webpack_require__(1);\nvar Streaming = __webpack_require__(31);\nvar helpers = __webpack_require__(3);\n\nmodule.exports = function (connection, instance, configuration, vault) {\n    'use strict';\n    var invocationMessagesMap = {};  // {invocationId: Invocation_RequestMessage}\n\n    var reqCounter = 0;\n    var presenceTimer;\n    var heartbeatTimer;\n    var callbacks = callbackRegistry();\n    var streaming = new Streaming(connection, instance);\n\n    connection.onAGM('MethodInvocationRequestMessage', handleMethodInvocationMessage);\n    sendHeartbeat();\n    if (heartbeatTimer === undefined) {\n        heartbeatTimer = setInterval(sendHeartbeat, configuration.server.heartbeat_interval);\n    }\n\n    function nextRequestSubject() {\n        return 'req_' + (reqCounter++) + '_' + random();\n    }\n\n    // Constructs a heartbeat message\n    function constructHeartbeat() {\n        return {\n            PublishingInterval: configuration.server.heartbeat_interval,\n            Instance: instance.info()\n        };\n    }\n\n    // Constructs a presence message\n    function constructPresence() {\n        var methods = vault.getList();\n\n        return {\n            PublishingInterval: configuration.server.presence_interval,\n            Instance: instance.info(),\n            MethodDefinitions: methods.map(function (m) {\n                return m.method\n            })\n        };\n    }\n\n    // Sends a presence\n    function sendPresence() {\n        connection.sendAGM('ServerPresenceMessage', constructPresence());\n    }\n\n    // Sends a heartbeat\n    function sendHeartbeat() {\n        connection.sendAGM('ServerHeartbeatMessage', constructHeartbeat());\n    }\n\n    function createNewMethodMessage(methodIdentifier, subject) {\n        // If we are given a string instead of an object, we presume that is the method's name:\n        if (typeof methodIdentifier === 'string') {\n            methodIdentifier = { name: methodIdentifier };\n        }\n\n        // Set default values\n        if (typeof methodIdentifier.version !== 'number') {\n            methodIdentifier.version = 0;\n        }\n\n        // Convert the method definition to the format that AGM requires\n        return {\n            Method: {\n                Name: methodIdentifier.name,\n                InputSignature: methodIdentifier.accepts,\n                ResultSignature: methodIdentifier.returns,\n                Description: methodIdentifier.description,\n                DisplayName: methodIdentifier.displayName,\n                Version: methodIdentifier.version,\n                ObjectTypeRestrictions: methodIdentifier.objectTypes\n            },\n            MethodRequestSubject: subject\n        };\n    }\n\n    function register(repoMethod, success) {\n\n        // Get a request subject for this method\n        var reqSubj = nextRequestSubject();\n\n        repoMethod.method = createNewMethodMessage(repoMethod.definition, reqSubj);\n\n        announceNewMethod();\n\n        success();\n    }\n\n    /** Create a streaming method */\n    function createStream(repoMethod, streamDef, success) {\n\n        var reqSubj = nextRequestSubject();\n\n        var streamConverted = createNewMethodMessage(streamDef, reqSubj);\n        streamConverted.Method.Flags = 32; // 100000 bitmask with the largest flag (streaming: true)\n\n        // Used for presences\n        repoMethod.method = streamConverted;\n\n        // Utility things for this protocol\n        repoMethod.globalEventStreamSubject = streamDef.name + '.jsStream.' + random();\n        repoMethod.subscriptions = [];\n        repoMethod.branchKeyToStreamIdMap = []; // [ {branchKey: '', streamId: 'strj_nds7`8`6y2378yb'}, {...}, ...]\n\n        announceNewMethod();\n\n        success();\n    }\n\n    function announceNewMethod() {\n\n        // Send presence so the clients know we have it\n        sendPresence();\n\n        // Start sending presence regularly (if we aren't already doing it)\n        if (presenceTimer === undefined) {\n            presenceTimer = setInterval(sendPresence, configuration.server.presence_interval);\n        }\n    }\n\n    // Listens for method invocations\n    function handleMethodInvocationMessage(message) {\n        var subject = message.MethodRequestSubject;\n        var methodList = vault.getList();\n\n        var method = methodList.filter(function (m) {\n            return m.method.MethodRequestSubject === subject;\n        })[0];\n\n        // Stop if the message isn't for us\n        if (method === undefined) {\n            return;\n        }\n\n        // TODO see if have to move this earlier - i.e. if some messages from Client don't have MethodRequestSubject\n        // Check if message is stream-related : defer to streaming module\n        if (streaming.isStreamMsg(message, method)) {\n            streaming.processSubscriberMsg(message, method);\n            return;\n        }\n\n        var invocationId = message.Context.InvocationId;\n        invocationMessagesMap[invocationId] = message;\n\n        var invocationArgs = {\n            args: message.Context.ArgumentsJson,\n            instance: helpers.convertInfoToInstance(message.Client)\n        };\n        callbacks.execute('onInvoked', method, invocationId, invocationArgs);\n    }\n\n    function onInvoked(callback) {\n        callbacks.add('onInvoked', callback);\n    }\n\n    function methodInvocationResult(executedMethod, invocationId, err, result) {\n\n        var message = invocationMessagesMap[invocationId];\n        if (!message) {\n            return;\n        }\n\n        // Don't send result if the client does not require it\n        if (message.MethodResponseSubject === 'null') {\n            return;\n        }\n\n        if (executedMethod === undefined) {\n            return;\n        }\n\n        var resultMessage = {\n            MethodRequestSubject: message.MethodRequestSubject,\n            MethodResponseSubject: message.MethodResponseSubject,\n            MethodName: executedMethod.method.Method.Name,\n            InvocationId: invocationId,\n            ResultContextJson: result,\n            Server: instance.info(),\n            ResultMessage: err,\n            Status: err ? 1 : 0\n        };\n        // Send result\n        connection.sendAGM('MethodInvocationResultMessage', resultMessage);\n\n        delete invocationMessagesMap[invocationId];\n    }\n\n    function unregister() {\n        sendPresence();\n    }\n\n    return {\n        register: register,\n        onInvoked: onInvoked,\n        methodInvocationResult: methodInvocationResult,\n        unregister: unregister,\n\n        // stream-related\n        createStream: createStream,\n        getBranchList: streaming.getBranchList,\n        getSubscriptionList: streaming.getSubscriptionList,\n        closeAllSubscriptions: streaming.closeAllSubscriptions,\n        closeSingleSubscription: streaming.closeSingleSubscription,\n        pushDataToSingle: streaming.pushDataToSingle,\n        pushData: streaming.pushData,\n        onSubRequest: streaming.onSubRequest,\n        acceptRequestOnBranch: streaming.acceptRequestOnBranch,\n        rejectRequest: streaming.rejectRequest,\n        onSubAdded: streaming.onSubAdded,\n        onSubRemoved: streaming.onSubRemoved\n    }\n};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n/**\n * Handles registering methods and sending data to clients\n */\n\n\nmodule.exports = function (instance, session, repository, logger) {\n    'use strict';\n    session.on('subscribed', handleSubscribed);\n    session.on('event', handleEventData);\n    session.on('subscription-cancelled', handleSubscriptionCancelled);\n\n    var MSG_TYPE_SUBSCRIBE = 'subscribe';\n    var STATUS_AWAITING_ACCEPT = 'awaitingAccept'; // not even one server has accepted yet\n    var STATUS_SUBSCRIBED = 'subscribed'; // at least one server has responded as 'Accepting'\n    var ERR_MSG_SUB_FAILED = 'Subscription failed.';\n    var ERR_MSG_SUB_REJECTED = 'Subscription rejected.';\n    var ON_CLOSE_MSG_SERVER_INIT = 'ServerInitiated';\n    var ON_CLOSE_MSG_CLIENT_INIT = 'ClientInitiated';\n\n    var subscriptionsList = {};\n    var subscriptionIdToLocalKeyMap = {};\n    var nextSubLocalKey = 0;\n\n    function getNextSubscriptionLocalKey() {\n        var current = nextSubLocalKey;\n        nextSubLocalKey += 1;\n\n        return current;\n    }\n\n    function subscribe(streamingMethod, argumentObj, targetServers, stuff, success, error) {\n        if (targetServers.length === 0) {\n            error(ERR_MSG_SUB_FAILED + ' No available servers matched the target params.');\n            return;\n        }\n\n        logger.debug('subscribe to target servers: ', targetServers);\n\n        // Note: used to find the subscription in subList. Do not confuse it with the gw-generated subscription_id\n        var subLocalKey = getNextSubscriptionLocalKey();\n\n        var pendingSub = registerSubscription(\n            subLocalKey,\n            streamingMethod,\n            argumentObj,\n            success,\n            error,\n            stuff.method_response_timeout\n        );\n\n        if (typeof pendingSub !== 'object') {\n            error(ERR_MSG_SUB_FAILED + ' Unable to register the user callbacks.');\n            return;\n        }\n\n        targetServers.forEach(function(target) {\n\n            var serverId = target.server.id;\n\n            pendingSub.trackedServers.push({\n                serverId: serverId,\n                subscriptionId: undefined // is assigned by gw3\n            });\n\n            var msg = {\n                type: MSG_TYPE_SUBSCRIBE,\n                server_id: serverId,\n                method_id: streamingMethod.info.id,\n                arguments_kv: argumentObj\n            };\n\n            session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })\n                .then(handleSubscribed)\n                .catch(handleErrorSubscribing);\n\n        });\n    }\n\n    function registerSubscription(subLocalKey, method, args, success, error, timeout) {\n        subscriptionsList[subLocalKey] = {\n            status: STATUS_AWAITING_ACCEPT,\n            method: method,\n            arguments: args,\n            success: success,\n            error: error,\n            trackedServers: [],\n            handlers: {\n                onData: [],\n                onClosed: []\n                // onFailed: []\n            },\n            queued: {\n                data: [],\n                closers: []\n            },\n            timeoutId: undefined\n        };\n\n        subscriptionsList[subLocalKey].timeoutId = setTimeout(function () {\n            if (subscriptionsList[subLocalKey] === undefined) {\n                return; // no such subscription\n            }\n\n            var pendingSub = subscriptionsList[subLocalKey];\n\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\n                error({\n                    method: method,\n                    called_with: args,\n                    message: ERR_MSG_SUB_FAILED + ' Subscription attempt timed out after ' + timeout + 'ms.'\n                });\n\n                // None of the target servers has answered the subscription attempt\n                delete subscriptionsList[subLocalKey];\n\n            } else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\n                // Clean the trackedServers, removing those without valid streamId\n                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\n                    return (typeof server.subscriptionId !== 'undefined')\n                });\n\n                delete pendingSub.timeoutId;\n\n                if (pendingSub.trackedServers.length <= 0) {\n                    // There are no open streams, some servers accepted then closed very quickly\n                    //  (that's why the status changed but there's no good server with a StreamId)\n\n                    // call the onClosed handlers\n                    callOnClosedHandlers(pendingSub);\n\n                    delete subscriptionsList[subLocalKey];\n                }\n            }\n        }, timeout);\n\n        return subscriptionsList[subLocalKey]\n    }\n\n    function handleErrorSubscribing(errorResponse) {\n        // A target server is rejecting\n        logger.debug('Subscription attempt failed', errorResponse);\n\n        var tag = errorResponse._tag;\n        var subLocalKey = tag.subLocalKey;\n\n        var pendingSub = subscriptionsList[subLocalKey];\n\n        if (typeof pendingSub !== 'object') {\n            return;\n        }\n\n        pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\n            return server.serverId !== tag.serverId;\n        });\n\n        if (pendingSub.trackedServers.length <= 0) {\n            clearTimeout(pendingSub.timeoutId);\n\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\n                // Reject with reason\n                var reason = (typeof errorResponse.reason === 'string' && errorResponse.reason !== '') ?\n                    ' Publisher said \"' + errorResponse.reason + '\".' :\n                    ' No reason given.';\n\n                var callArgs = typeof pendingSub.arguments === 'object' ?\n                    JSON.stringify(pendingSub.arguments) :\n                    '{}';\n\n                pendingSub.error(ERR_MSG_SUB_REJECTED + reason + ' Called with:' + callArgs);\n\n\n            } else if (pendingSub.status === STATUS_SUBSCRIBED) {\n                // The timeout may or may not have expired yet,\n                // but the status is 'subscribed' and trackedServers is now empty\n\n                callOnClosedHandlers(pendingSub);\n            }\n\n\n            delete subscriptionsList[subLocalKey];\n        }\n    }\n\n    function handleSubscribed(msg) {\n        logger.debug('handleSubscribed', msg);\n\n        var subLocalKey = msg._tag.subLocalKey;\n        var pendingSub = subscriptionsList[subLocalKey];\n\n        if (typeof pendingSub !== 'object') {\n            return;\n        }\n\n        var serverId = msg._tag.serverId;\n\n        // Add a subscription_id to this trackedServer\n\n        var acceptingServer = pendingSub.trackedServers\n            .filter(function(server) {\n                return server.serverId === serverId;\n            })[0];\n\n        if (typeof acceptingServer !== 'object') {\n            return;\n        }\n\n        acceptingServer.subscriptionId = msg.subscription_id;\n        subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\n\n        var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\n\n        pendingSub.status = STATUS_SUBSCRIBED;\n\n        if (isFirstResponse) {\n            // Pass in the subscription object\n            pendingSub.success({\n                onData: function (dataCallback) {\n                    if (typeof dataCallback !== 'function') {\n                        throw new TypeError('The data callback must be a function.')\n                    }\n\n                    this.handlers.onData.push(dataCallback);\n                    if (this.handlers.onData.length === 1 && this.queued.data.length > 0) {\n                        this.queued.data.forEach(function (dataItem) {\n                            dataCallback(dataItem)\n                        })\n                    }\n                }.bind(pendingSub),\n                onClosed: function (closedCallback) {\n                    if (typeof closedCallback !== 'function') {\n                        throw new TypeError('The callback must be a function.')\n                    }\n                    this.handlers.onClosed.push(closedCallback)\n                }.bind(pendingSub),\n                onFailed: function () { /* Will not be implemented for browser. */\n                },\n                close: closeSubscription.bind(null, subLocalKey),\n                requestArguments: pendingSub.arguments,\n                serverInstance: repository.getServerById(serverId).getInfoForUser(),\n                stream: pendingSub.method\n            });\n        }\n    }\n\n    function handleEventData(msg) {\n        logger.debug('handleEventData', msg);\n\n        var subLocalKey = subscriptionIdToLocalKeyMap[msg.subscription_id];\n\n        if (typeof subLocalKey === 'undefined') {\n            return;\n        }\n\n        var subscription = subscriptionsList[subLocalKey];\n\n        if (typeof subscription !== 'object') {\n            return;\n        }\n\n        var trackedServersFound = subscription.trackedServers.filter(function (server) {\n            return server.subscriptionId === msg.subscription_id;\n        });\n\n        if (trackedServersFound.length !== 1) {\n            return;\n        }\n\n        var isPrivateData = msg.oob && msg.snapshot;\n\n        var sendingServerId = trackedServersFound[0].serverId;\n\n        // Create the arrivedData object, new object for each handler call\n        function receivedStreamData() {\n            return {\n                data: msg.data,\n                server: repository.getServerById(sendingServerId).getInfoForUser(),\n                requestArguments: subscription.arguments || {},\n                message: null,\n                private: isPrivateData\n            };\n        }\n\n        var onDataHandlers = subscription.handlers.onData;\n        var queuedData = subscription.queued.data;\n\n        if (onDataHandlers.length > 0) {\n            onDataHandlers.forEach(function (callback) {\n                if (typeof callback === 'function') {\n                    callback(receivedStreamData())\n                }\n            })\n        } else {\n            queuedData.push(receivedStreamData())\n        }\n    }\n\n    function handleSubscriptionCancelled(msg) {\n        logger.debug('handleSubscriptionCancelled', msg);\n\n        var subLocalKey = subscriptionIdToLocalKeyMap[msg.subscription_id];\n\n        if (typeof subLocalKey === 'undefined') {\n            return;\n        }\n\n        var subscription = subscriptionsList[subLocalKey];\n\n        if (typeof subscription !== 'object') {\n            return;\n        }\n\n        // Filter tracked servers\n        var expectedNewLength = subscription.trackedServers.length - 1;\n\n        subscription.trackedServers = subscription.trackedServers.filter(function(server) {\n            if (server.subscriptionId === msg.subscription_id) {\n                subscription.queued.closers.push(server.serverId);\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        // Check if a server was actually removed\n        if (subscription.trackedServers.length !== expectedNewLength) {\n            return;\n        }\n\n        // Check if this was the last remaining server\n        if (subscription.trackedServers.length <= 0) {\n            clearTimeout(subscription.timeoutId);\n            callOnClosedHandlers(subscription);\n            delete subscriptionsList[subLocalKey];\n        }\n\n        delete subscriptionIdToLocalKeyMap[msg.subscription_id]\n    }\n\n    function callOnClosedHandlers(subscription, reason) {\n\n        var closersCount = subscription.queued.closers.length;\n        var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\n\n        var closingServer = null;\n        if (typeof closingServerId === 'number') {\n            closingServer = repository.getServerById(closingServerId).getInfoForUser();\n        }\n\n        subscription.handlers.onClosed.forEach(function (callback) {\n            if (typeof callback !== 'function') {\n                return;\n            }\n\n            callback({\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\n                requestArguments: subscription.arguments,\n                server: closingServer,\n                stream: subscription.method\n            });\n        });\n    }\n\n    function closeSubscription(subLocalKey) {\n        logger.debug('closeSubscription', subLocalKey);\n\n        var subscription = subscriptionsList[subLocalKey];\n\n        if (typeof subscription !== 'object') {\n            return;\n        }\n\n        // Tell each server that we're unsubscribing\n        subscription.trackedServers.forEach(function (server) {\n            if (typeof server.subscriptionId === 'undefined') {\n                return;\n            }\n\n            session.sendFireAndForget({\n                type: 'unsubscribe',\n                subscription_id: server.subscriptionId,\n                reason_uri: '',\n                reason: ON_CLOSE_MSG_CLIENT_INIT\n            });\n\n            delete subscriptionIdToLocalKeyMap[server.subscriptionId];\n        });\n\n        subscription.trackedServers = [];\n\n        callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\n\n        delete subscriptionsList[subLocalKey];\n\n\n    }\n\n    return { subscribe: subscribe };\n};\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar callbackRegistry = __webpack_require__(1);\nvar Streaming = __webpack_require__(33);\n\n/**\n * Handles session lifetime and events\n */\nmodule.exports = function (instance, session, repository, logger) {\n    'use strict';\n    session.on('peer-added', handlePeerAdded);\n    session.on('peer-removed', handlePeerRemoved);\n    session.on('methods-added', handleMethodsAddedMessage);\n    session.on('methods-removed', handleMethodsRemovedMessage);\n\n    var callbacks = callbackRegistry();\n    var streaming = new Streaming(instance, session, repository, logger);\n\n    function handlePeerAdded(msg) {\n        var newPeerId = msg.new_peer_id;\n        var remoteId = msg.identity;\n\n        var serverInfo = {\n            machine: remoteId.machine,\n            pid: remoteId.process,\n            instance: remoteId.instance,\n            application: remoteId.application,\n            environment: remoteId.environment,\n            region: remoteId.region,\n            user: remoteId.user\n        };\n\n        repository.addServer(serverInfo, newPeerId);\n    }\n\n    function handlePeerRemoved(msg) {\n        var removedPeerId = msg.removed_id;\n        var reason = msg.reason;\n\n        repository.removeServerById(removedPeerId, reason);\n    }\n\n    function handleMethodsAddedMessage(msg) {\n        var serverId = msg.server_id;\n        var methods = msg.methods;\n\n        methods.forEach(function (method) {\n            var methodInfo = {\n                id: method.id,\n                name: method.name,\n                displayName: method.display_name,\n                description: method.description,\n                version: method.version,\n                objectTypes: method.object_types,\n                accepts: method.input_signature,\n                returns: method.result_signature,\n                supportsStreaming:  typeof method.flags !== 'undefined' ? method.flags.supportsStreaming : false\n            };\n\n            repository.addServerMethod(serverId, methodInfo);\n        });\n    }\n\n    function handleMethodsRemovedMessage(msg) {\n        var serverId = msg.server_id;\n        var methodIdList = msg.methods;\n\n        var server = repository.getServerById(serverId);\n\n        var serverMethodKeys = Object.keys(server.methods);\n\n        serverMethodKeys.forEach(function (methodKey) {\n\n            var method = server.methods[methodKey];\n\n            if (methodIdList.indexOf(method.info.id) > -1) {\n\n                repository.removeServerMethod(serverId, methodKey)\n            }\n\n        });\n    }\n\n    function invoke(id, method, args, target) {\n\n        var serverId = target.id;\n        var methodId = method.info.id;\n\n        logger.debug('sending call (' + id + ') for method id ' + methodId + ' to server ' + serverId);\n        var msg = {\n            type: 'call',\n            server_id: serverId,\n            method_id: methodId,\n            arguments_kv: args\n        };\n\n        // we transfer the invocation id as tag\n        session.send(msg, { invocationId: id, serverId: serverId })\n            .then(handleResultMessage)\n            .catch(handleInvocationError);\n    }\n\n    function onInvocationResult(callback) {\n        callbacks.add('onResult', callback);\n    }\n\n    function handleResultMessage(msg) {\n        logger.debug('handle result message ' + msg);\n\n        var invocationId = msg._tag.invocationId;\n        var result = msg.result;\n        var serverId = msg._tag.serverId;\n        var server = repository.getServerById(serverId);\n\n        callbacks.execute('onResult', invocationId, server.getInfoForUser(), 0, result, '');\n    }\n\n    function handleInvocationError(msg) {\n        logger.debug('handle invocation error ' + msg);\n\n        var invocationId = msg._tag.invocationId;\n        var serverId = msg._tag.serverId;\n        var server = repository.getServerById(serverId);\n        var message = msg.reason;\n        var context = msg.context;\n        callbacks.execute('onResult', invocationId, server.getInfoForUser(), 1, context, message);\n    }\n\n    return {\n        invoke: invoke,\n        onInvocationResult: onInvocationResult,\n        subscribe: streaming.subscribe\n    };\n};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\nvar serverFactory = __webpack_require__(37);\nvar clientFactory = __webpack_require__(34);\n\nmodule.exports = function (instance, connection, clientRepository, serverRepository, libConfig, serverGetter) {\n    'use strict';\n\n    var logger = libConfig.logger.subLogger('gw3-protocol');\n    var resolveReadyPromise;\n\n    var readyPromise = new Promise(function (resolve) {\n        resolveReadyPromise = resolve;\n    });\n\n    // start domain join handshake\n    var session = connection.domain('agm', logger.subLogger('domain'));\n    var server = serverFactory(instance, session, clientRepository, serverRepository, logger.subLogger('server'));\n    var client = clientFactory(instance, session, clientRepository, logger.subLogger('client'));\n\n    function handleReconnect() {\n        // we're reconnecting\n        logger.info('reconnected - will replay registered methods and subscriptions');\n\n        // Client side\n        clientRepository.reset();\n        // add our server\n        clientRepository.addServer(instance, connection.peerId);\n        // TODO - re-subscribe for streams\n\n        // server side\n        var registeredMethods = serverRepository.getList();\n        serverRepository.reset();\n\n        // replay server methods\n        registeredMethods.forEach(function (method) {\n            var def = method.definition;\n            var userCallback = method.theFunction.userCallback;\n\n            var functionToUse = serverGetter().register;\n            if (method.theFunction.isAsync) {\n                functionToUse = serverGetter().registerAsync;\n            }\n\n            functionToUse(def, userCallback);\n        });\n    }\n\n    function handleInitialJoin() {\n        clientRepository.addServer(instance, connection.peerId);\n\n        resolveReadyPromise({\n            invoke: client.invoke,\n            onInvocationResult: client.onInvocationResult,\n            register: server.register,\n\n            // TODO change params\n            unregister: server.unregister,\n            onInvoked: server.onInvoked,\n            methodInvocationResult: server.methodInvocationResult,\n\n            // stream-related\n            subscribe: client.subscribe,\n            createStream: server.createStream,\n            getBranchList: server.getBranchList,\n            getSubscriptionList: server.getSubscriptionList,\n            closeAllSubscriptions: server.closeAllSubscriptions,\n            closeSingleSubscription: server.closeSingleSubscription,\n            pushData: server.pushData,\n            pushDataToSingle: server.pushDataToSingle,\n            onSubRequest: server.onSubRequest,\n            acceptRequestOnBranch: server.acceptRequestOnBranch,\n            rejectRequest: server.rejectRequest,\n            onSubAdded: server.onSubAdded,\n            onSubRemoved: server.onSubRemoved\n        });\n\n        resolveReadyPromise = undefined;\n    }\n\n    session.onJoined(function (reconnect) {\n        if (reconnect) {\n            handleReconnect();\n        } else {\n            handleInitialJoin();\n        }\n    });\n\n    session.join();\n\n    return readyPromise;\n};\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar callbackRegistry = __webpack_require__(1);\n\n/**\n * Handles registering methods and sending data to clients\n */\nmodule.exports = function (instance, session, repository, vault, logger) {\n    'use strict';\n    session.on('add-interest', handleAddInterest);\n    session.on('remove-interest', handleRemoveInterest);\n\n    var SUBSCRIPTION_REQUEST = 'onSubscriptionRequest';\n    var SUBSCRIPTION_ADDED = 'onSubscriptionAdded';\n    var SUBSCRIPTION_REMOVED = 'onSubscriptionRemoved';\n    var ERR_URI_SUBSCRIPTION_FAILED = 'com.tick42.agm.errors.subscription.failure';\n    var callbacks = callbackRegistry();\n    var nextStreamId = 0;\n\n    // TODO there are many of these incrementing integer id's -> make a helper module\n    function getNextStreamId() {\n        var current = nextStreamId;\n        nextStreamId += 1;\n        return current;\n    }\n\n    /**\n     * Processes a subscription request\n     */\n    function handleAddInterest(msg) {\n\n        logger.debug('server_AddInterest ', msg);\n\n        var caller = repository.getServerById(msg.caller_id);\n        var instance = (typeof caller.getInfoForUser === 'function') ? caller.getInfoForUser() : null;\n\n        // call subscriptionRequestHandler\n        var requestContext = {\n            msg: msg,\n            arguments: msg.arguments_kv || {},\n            instance: instance\n        };\n\n        var streamingMethod = vault.getById(msg.method_id);\n\n        if (streamingMethod === undefined) {\n            sendSubscriptionFailed(\n                'No method with id ' + msg.method_id + ' on this server.',\n                msg.subscription_id\n            );\n            return;\n        }\n\n        if (streamingMethod.subscriptionsMap && streamingMethod.subscriptionsMap[msg.subscription_id]) {\n            sendSubscriptionFailed(\n                'A subscription with id ' + msg.subscription_id + ' already exists.',\n                msg.subscription_id\n            );\n            return;\n        }\n\n        callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\n    }\n\n    function sendSubscriptionFailed(reason, subscriptionId) {\n        var errorMessage = {\n            type: 'error',\n            reason_uri: ERR_URI_SUBSCRIPTION_FAILED,\n            reason: reason,\n            request_id: subscriptionId // this overrides connection wrapper\n        };\n\n        session.sendFireAndForget(errorMessage);\n    }\n\n    function acceptRequestOnBranch (requestContext, streamingMethod, branch) {\n        console.log('requestContext', requestContext);\n\n        if (typeof branch !== 'string') {\n            branch = '';\n            console.log('empty branch', branch)\n        }\n\n        if (typeof streamingMethod.subscriptionsMap !== 'object') {\n            throw new TypeError('The streaming method is missing its subscriptions.');\n        }\n\n        if (!Array.isArray(streamingMethod.branchKeyToStreamIdMap)) {\n            throw new TypeError('The streaming method is missing its branches.');\n        }\n\n        var streamId = getStreamId(streamingMethod, branch);\n\n        // Add a new subscription to the method\n        var key = requestContext.msg.subscription_id;\n\n        var subscription = {\n            id: key,\n            arguments: requestContext.arguments,\n            instance: requestContext.instance,\n            branchKey: branch,\n            streamId: streamId,\n            subscribeMsg: requestContext.msg\n        };\n\n        streamingMethod.subscriptionsMap[key] = subscription;\n\n        // Inform the gw\n        session.sendFireAndForget({\n            type: 'accepted',\n            subscription_id: key,\n            stream_id: streamId\n        });\n\n        // Pass state above-protocol for user objects\n        callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod)\n    }\n\n    function getStreamId(streamingMethod, branchKey) {\n        if (typeof branchKey !== 'string') {\n            branchKey = '';\n        }\n\n        var needleBranch = streamingMethod.branchKeyToStreamIdMap.filter(function (branch) {\n            return branch.key === branchKey;\n        })[0];\n\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\n\n        if (typeof    streamId !== 'string' || streamId === '') {\n            streamId = getNextStreamId();\n            streamingMethod.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\n        }\n\n        return streamId;\n    }\n\n    function rejectRequest(requestContext, streamingMethod, reason) {\n        if (typeof reason !== 'string') {\n            reason = '';\n        }\n\n        sendSubscriptionFailed(\n            'Subscription rejected by user. ' + reason,\n            requestContext.msg.subscription_id\n        )\n    }\n\n    function onSubscriptionLifetimeEvent(eventName, handlerFunc) {\n        callbacks.add(eventName, handlerFunc)\n    }\n\n    function pushToBranch(streamingMethod, data, branches) {\n        if (typeof streamingMethod !== 'object' || !Array.isArray(streamingMethod.branchKeyToStreamIdMap)) {\n            return;\n        }\n\n        // TODO validate data is a plain object\n        if (typeof data !== 'object') {\n            throw new Error('Invalid arguments. Data must be an object.');\n        }\n\n        if (typeof branches === 'string') {\n            branches = [branches]; // user wants to push to single branch\n        } else if (!Array.isArray(branches) || branches.length <= 0) {\n            branches = null;\n        }\n\n        // get the StreamId's from the method's branch map\n        var streamIdList = streamingMethod.branchKeyToStreamIdMap\n            .filter(function (br) {\n                return (\n                    branches === null || (Boolean(br) && typeof br.key === 'string' && branches.indexOf(br.key) >= 0)\n                );\n            }).map(function (br) {\n                return br.streamId;\n            });\n\n        streamIdList.forEach(function (streamId) {\n            session.sendFireAndForget({\n                type: 'publish',\n                stream_id: streamId,\n                // sequence: null,  // the streamingMethod might be used for this\n                // snapshot: false, // ...and this\n                data: data\n            })\n        });\n    }\n\n    function pushDataToSingle(streamingMethod, subscription, data) {\n        // TODO validate data is a plain object\n        if (typeof data !== 'object') {\n            throw new Error('Invalid arguments. Data must be an object.');\n        }\n\n        session.sendFireAndForget({\n            type: 'post',\n            subscription_id: subscription.id,\n            // sequence: null,  // the streamingMethod might be used for this\n            // snapshot: false, // ...and this\n            data: data\n        })\n    }\n\n    function closeSingleSubscription(streamingMethod, subscription) {\n\n        delete streamingMethod.subscriptionsMap[subscription.id];\n\n        session.sendFireAndForget({\n            type: 'drop-subscription',\n            subscription_id: subscription.id,\n            reason: 'Server dropping a single subscription'\n        });\n\n        var subscriber = subscription.instance;\n\n        callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\n    }\n\n    function closeMultipleSubscriptions(streamingMethod, branchKey) {\n        if (typeof streamingMethod !== 'object' || typeof streamingMethod.subscriptionsMap !== 'object') {\n            return;\n        }\n\n        var subscriptionsToClose = Object.keys(streamingMethod.subscriptionsMap)\n            .map(function(key) {\n                return streamingMethod.subscriptionsMap[key];\n            });\n\n        if (typeof branchKey === 'string') {\n            subscriptionsToClose = subscriptionsToClose.filter(function(sub) {\n                return sub.branchKey === branchKey;\n            });\n        }\n\n        subscriptionsToClose.forEach(function (subscription) {\n            delete streamingMethod.subscriptionsMap[subscription.id];\n\n            session.sendFireAndForget({\n                type: 'drop-subscription',\n                subscription_id: subscription.id,\n                reason: 'Server dropping all subscriptions on stream_id: ' + subscription.streamId\n            });\n        });\n    }\n\n    function getSubscriptionList(streamingMethod, branchKey) {\n        if (typeof streamingMethod !== 'object') {\n            return [];\n        }\n\n        var subscriptions = [];\n\n        var allSubscriptions = Object.keys(streamingMethod.subscriptionsMap).map(function(key) {\n            return streamingMethod.subscriptionsMap[key];\n        });\n\n        if (typeof branchKey !== 'string') {\n            subscriptions = allSubscriptions;\n        } else {\n            subscriptions = allSubscriptions.filter(function (sub) {\n                return sub.branchKey === branchKey;\n            });\n        }\n\n        return subscriptions;\n    }\n\n    function getBranchList(streamingMethod) {\n        if (typeof streamingMethod !== 'object') {\n            return [];\n        }\n\n        var allSubscriptions = Object.keys(streamingMethod.subscriptionsMap).map(function(key) {\n            return streamingMethod.subscriptionsMap[key];\n        });\n\n        var keysWithDuplicates = allSubscriptions.map(function (sub) {\n            var result = null;\n            if (typeof sub === 'object' && typeof sub.branchKey === 'string') {\n                result = sub.branchKey;\n            }\n            return result;\n        });\n\n        var seen = [];\n\n        var branchArray = keysWithDuplicates.filter(function (bKey) {\n            if (bKey === null || seen.indexOf(bKey) >= 0) {\n                return false;\n            }\n            seen.push(bKey);\n            return true;\n        });\n\n        return branchArray;\n    }\n\n    function handleRemoveInterest(msg) {\n        logger.debug('handleRemoveInterest', msg);\n\n        var streamingMethod = vault.getById(msg.method_id)\n\n        if (typeof msg.subscription_id !== 'string' ||\n            typeof streamingMethod !== 'object' ||\n            typeof streamingMethod.subscriptionsMap[msg.subscription_id] !== 'object'\n        ) {\n            return;\n        }\n\n        var subscription = streamingMethod.subscriptionsMap[msg.subscription_id];\n\n        delete streamingMethod.subscriptionsMap[msg.subscription_id];\n\n        callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\n    }\n\n    return {\n        pushData: pushToBranch,\n        pushDataToSingle: pushDataToSingle,\n        onSubRequest: onSubscriptionLifetimeEvent.bind(null, SUBSCRIPTION_REQUEST),\n        onSubAdded: onSubscriptionLifetimeEvent.bind(null, SUBSCRIPTION_ADDED),\n        onSubRemoved: onSubscriptionLifetimeEvent.bind(null, SUBSCRIPTION_REMOVED),\n        acceptRequestOnBranch: acceptRequestOnBranch,\n        rejectRequest: rejectRequest,\n        getSubscriptionList: getSubscriptionList,\n        getBranchList: getBranchList,\n        closeSingleSubscription: closeSingleSubscription,\n        closeMultipleSubscriptions: closeMultipleSubscriptions\n    };\n};\n\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar callbackRegistry = __webpack_require__(1);\nvar Streaming = __webpack_require__(36);\n\n/**\n * Handles registering methods and sending data to clients\n */\nmodule.exports = function (instance, session, repository, vault, logger) {\n    'use strict';\n    var callbacks = callbackRegistry();\n    var streaming = new Streaming(instance, session, repository, vault, logger);\n\n    session.on('invoke', handleInvokeMessage);\n\n    function handleRegisteredMessage(msg) {\n        var methodId = msg._tag.methodId;\n        var repoMethod = vault.getById(methodId);\n\n        if (repoMethod && repoMethod.registrationCallbacks) {\n            logger.debug('registered method ' + repoMethod.definition.name + ' with id ' + methodId);\n            repoMethod.registrationCallbacks.success();\n        }\n    }\n\n    function handleErrorRegister(msg) {\n        logger.warn(msg);\n\n        var methodId = msg._tag.methodId;\n        var repoMethod = vault.getById(methodId);\n\n        if (repoMethod && repoMethod.registrationCallbacks) {\n            logger.debug('failed to register method ' + repoMethod.definition.name + ' with id ' + methodId);\n            repoMethod.registrationCallbacks.fail();\n        }\n    }\n\n    function handleInvokeMessage(msg) {\n        var invocationId = msg.invocation_id;\n        var callerId = msg.caller_id;\n        var methodId = msg.method_id;\n        var args = msg.arguments_kv;\n\n        logger.debug('received invocation for method id \"' + methodId + '\" from peer '+ callerId);\n\n        var methodList = vault.getList();\n\n        var method = methodList.filter(function (m) {\n            return m._repoId === methodId;\n        })[0];\n\n        // Stop if the message isn't for us\n        if (method === undefined) {\n            return;\n        }\n\n        var client = repository.getServerById(callerId);\n        var invocationArgs = { args: args, instance: client.getInfoForUser() };\n\n        callbacks.execute('onInvoked', method, invocationId, invocationArgs);\n    }\n\n    function createStream(repoMethod, streamDef, success, fail) {\n        var isStreaming = true;\n\n        // Utility things for this protocol\n        repoMethod.subscriptionsMap = {}; // ~subscription_id~ : {id:~, branchKey: '~', arguments: {~}, instance:{~}, etc.}\n        repoMethod.branchKeyToStreamIdMap = []; // [ {branchKey: '', streamId: 7}, {...}, ...]\n\n        register(repoMethod, success, fail, isStreaming);\n    }\n\n    function register(repoMethod, success, fail, isStreaming) {\n\n        var methodDef = repoMethod.definition;\n\n        // TODO review, why is this type of closure necessary\n        repoMethod.registrationCallbacks = {\n            success: success,\n            fail: fail\n        };\n\n        var flags = {};\n        if (isStreaming === true) {\n            flags = { supportsStreaming: true }\n        }\n\n        logger.debug('registering method \"' + methodDef.name + '\"');\n        var registerMsg = {\n            type: 'register',\n            methods: [{\n                id: repoMethod._repoId,\n                name: methodDef.name,\n                display_name: methodDef.displayName,\n                description: methodDef.description,\n                version: methodDef.version,\n                flags: flags,\n                object_types: methodDef.objectTypes,\n                input_signature: methodDef.accepts,\n                result_signature: methodDef.returns,\n                restrictions: undefined\n            }]\n        };\n\n        session.send(registerMsg, { methodId: repoMethod._repoId })\n            .then(handleRegisteredMessage)\n            .catch(handleErrorRegister);\n    }\n\n    function onInvoked(callback) {\n        callbacks.add('onInvoked', callback);\n    }\n\n    function methodInvocationResult(registrationId, invocationId, err, result) {\n        var msg;\n        if (err) {\n            msg = {\n                type: 'error',\n                request_id: invocationId,\n                reason_uri: 'agm.errors.client_error',\n                reason: err,\n                context: result\n            };\n        } else {\n            msg = {\n                type: 'yield',\n                invocation_id: invocationId,\n                peer_id: session.peerId,\n                result: result\n            };\n        }\n        session.sendFireAndForget(msg);\n    }\n\n    function unregister(method) {\n        var msg = {\n            type: 'unregister',\n            methods: [method._repoId]\n        };\n\n        session.send(msg)\n            .then(handleUnregisteredMessage);\n    }\n\n    function handleUnregisteredMessage(msg) {\n        var requestId = msg.request_id;\n\n        logger.debug('unregistered by requestId ' + requestId);\n    }\n\n    return {\n        register: register,\n        onInvoked: onInvoked,\n        methodInvocationResult: methodInvocationResult,\n        unregister: unregister,\n\n        createStream: createStream,\n        getBranchList: streaming.getBranchList,\n        getSubscriptionList: streaming.getSubscriptionList,\n        closeAllSubscriptions: streaming.closeMultipleSubscriptions,\n        closeSingleSubscription: streaming.closeSingleSubscription,\n        pushData: streaming.pushData,\n        pushDataToSingle: streaming.pushDataToSingle,\n        onSubRequest: streaming.onSubRequest,\n        acceptRequestOnBranch: streaming.acceptRequestOnBranch,\n        rejectRequest: streaming.rejectRequest,\n        onSubAdded: streaming.onSubAdded,\n        onSubRemoved: streaming.onSubRemoved\n    }\n};\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tick42-gateway-connection\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tick42-gateway-connection\"] = factory();\n\telse\n\t\troot[\"tick42-gateway-connection\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 26);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction createRegistry() {\r\n    var callbacks = {};\r\n    function add(key, callback) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            allForKey = allForKey.filter(function (item) {\r\n                return item !== callback;\r\n            });\r\n            callbacks[key] = allForKey;\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute\r\n    };\r\n}\r\n;\r\ncreateRegistry.default = createRegistry;\r\nmodule.exports = createRegistry;\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar randomFromSeed = __webpack_require__(23);\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"tick42-gateway-connection\",\n\t\"version\": \"2.2.10\",\n\t\"description\": \"Tick42 Gateway Connection.\",\n\t\"precommit\": \"tslint\",\n\t\"main\": \"dist/node/tick42-gateway-connection.js\",\n\t\"browser\": \"dist/web/tick42-gateway-connection.js\",\n\t\"types\": \"types/index.d.ts\",\n\t\"scripts\": {\n\t\t\"clean\": \"node ./build/scripts/clean.js\",\n\t\t\"pre:build\": \"tsc && set NODE_ENV=development && npm run clean\",\n\t\t\"file-versionify\": \"node ./build/scripts/file-versionify.js\",\n\t\t\"tslint\": \"tslint -t codeFrame ./src/main.ts\",\n\t\t\"tslint:fix\": \"tslint -t codeFrame --fix ./src/main.ts\",\n\t\t\"watch\": \"onchange ./src/**/*.ts -- npm run build:dev\",\n\t\t\"build:dev\": \"npm run pre:build && set NODE_ENV=development && webpack && npm run file-versionify && npm run types\",\n\t\t\"build:prod\": \"npm run pre:build && set NODE_ENV=development && webpack && set NODE_ENV=production && webpack && npm run file-versionify && npm run types\",\n\t\t\"docs\": \"typedoc --options typedoc.json ./src\",\n\t\t\"types\": \"node ./build/scripts/copy-types.js\",\n\t\t\"types:merged\": \"dts-generator --project ./ --out ./types/index.d.ts\",\n\t\t\"prepublish\": \"npm run build:prod && npm run test:only\",\n\t\t\"test\": \"npm run build:dev && mocha ./tests\",\n\t\t\"test:only\": \"mocha ./tests\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@types/es6-promise\": \"0.0.32\",\n\t\t\"@types/shortid\": \"0.0.28\",\n\t\t\"@types/tick42-logger\": \"^3.0.0\",\n\t\t\"babel-core\": \"^6.25.0\",\n\t\t\"babel-loader\": \"^6.4.1\",\n\t\t\"babel-plugin-add-module-exports\": \"^0.2.1\",\n\t\t\"babel-plugin-es6-promise\": \"^1.0.0\",\n\t\t\"babel-preset-es2015\": \"^6.16.0\",\n\t\t\"babel-preset-stage-2\": \"^6.22.0\",\n\t\t\"chai\": \"^4.0.2\",\n\t\t\"dts-generator\": \"^2.1.0\",\n\t\t\"es6-promise\": \"^4.1.0\",\n\t\t\"mocha\": \"^3.4.2\",\n\t\t\"onchange\": \"3.*\",\n\t\t\"pre-commit\": \"^1.1.3\",\n\t\t\"shelljs\": \"^0.6.0\",\n\t\t\"tick42-gateway\": \"^0.2.26\",\n\t\t\"tick42-webpack-config\": \"4.1.6\",\n\t\t\"ts-node\": \"^3.0.6\",\n\t\t\"tslint\": \"^5.4.3\",\n\t\t\"typedoc\": \"^0.5.10\",\n\t\t\"typescript\": \"2.3.0\",\n\t\t\"webpack\": \"2.3.3\"\n\t},\n\t\"dependencies\": {\n\t\t\"callback-registry\": \"^2.2.7\",\n\t\t\"shortid\": \"^2.2.6\",\n\t\t\"ws\": \"^0.7.2\"\n\t}\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(0);\r\nvar packageJson = __webpack_require__(3);\r\n/**\r\n * A template for gateway connections - this is extended from specific protocols and transports.\r\n */\r\nvar ConnectionImpl = (function () {\r\n    function ConnectionImpl(settings) {\r\n        // The message handlers that have to be executed for each received message\r\n        this.messageHandlers = {};\r\n        this.ids = 1;\r\n        this.registry = callback_registry_1.default();\r\n        this._connected = false;\r\n        this._settings = settings;\r\n    }\r\n    ConnectionImpl.prototype.init = function (transport, protocol) {\r\n        this._protocol = protocol;\r\n        this._transport = transport;\r\n        this._transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        this._transport.onMessage(this.handleTransportMessage.bind(this));\r\n    };\r\n    ConnectionImpl.prototype.send = function (product, type, message, id) {\r\n        // create a message using the protocol\r\n        if (this._transport.isObjectBasedTransport) {\r\n            var msg = this._protocol.createObjectMessage(product, type, message, id);\r\n            this._transport.sendObject(msg, product, type);\r\n        }\r\n        else {\r\n            var strMessage = this._protocol.createStringMessage(product, type, message, id);\r\n            this._transport.send(strMessage, product, type);\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.on = function (product, type, messageHandler) {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n        var id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n        return {\r\n            type: type,\r\n            id: id,\r\n        };\r\n    };\r\n    // Remove a handler\r\n    ConnectionImpl.prototype.off = function (info) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    };\r\n    Object.defineProperty(ConnectionImpl.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this._connected;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConnectionImpl.prototype.connected = function (callback) {\r\n        if (this._connected) {\r\n            callback(this._settings.ws || this._settings.http);\r\n        }\r\n        return this.registry.add(\"connected\", callback);\r\n    };\r\n    ConnectionImpl.prototype.disconnected = function (callback) {\r\n        this.registry.add(\"disconnected\", callback);\r\n    };\r\n    ConnectionImpl.prototype.login = function (authRequest) {\r\n        return this._protocol.login(authRequest);\r\n    };\r\n    ConnectionImpl.prototype.logout = function () {\r\n        this._protocol.logout();\r\n        this._transport.close();\r\n    };\r\n    ConnectionImpl.prototype.loggedIn = function (callback) {\r\n        this._protocol.loggedIn(callback);\r\n    };\r\n    Object.defineProperty(ConnectionImpl.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            return this._settings.protocolVersion || 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConnectionImpl.prototype, \"version\", {\r\n        get: function () {\r\n            return this._settings.version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConnectionImpl.prototype.toAPI = function () {\r\n        var that = this;\r\n        return {\r\n            send: that.send.bind(that),\r\n            on: that.on.bind(that),\r\n            off: that.off.bind(that),\r\n            login: that.login.bind(that),\r\n            logout: that.logout.bind(that),\r\n            loggedIn: that.loggedIn.bind(that),\r\n            connected: that.connected.bind(that),\r\n            disconnected: that.disconnected.bind(that),\r\n            get protocolVersion() {\r\n                return that.protocolVersion;\r\n            },\r\n            get version() {\r\n                return that.version;\r\n            },\r\n        };\r\n    };\r\n    ConnectionImpl.prototype.distributeMessage = function (message, type) {\r\n        // Retrieve handlers for the message type\r\n        var handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            // Execute them\r\n            Object.keys(handlers).forEach(function (handlerId) {\r\n                var handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    handler(message);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.handleConnectionChanged = function (connected) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n        if (connected) {\r\n            this.registry.execute(\"connected\");\r\n        }\r\n        else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.handleTransportMessage = function (msg) {\r\n        var msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this._protocol.processStringMessage(msg);\r\n        }\r\n        else {\r\n            msgObj = this._protocol.processObjectMessage(msg);\r\n        }\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    };\r\n    return ConnectionImpl;\r\n}());\r\nexports.default = ConnectionImpl;\r\n//# sourceMappingURL=connection.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar randomByte = __webpack_require__(22);\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection_1 = __webpack_require__(4);\r\nvar GW3ConnectionImpl = (function (_super) {\r\n    __extends(GW3ConnectionImpl, _super);\r\n    function GW3ConnectionImpl(settings) {\r\n        return _super.call(this, settings) || this;\r\n    }\r\n    GW3ConnectionImpl.prototype.init = function (transport, protocol) {\r\n        _super.prototype.init.call(this, transport, protocol);\r\n        this.gw3Protocol = protocol;\r\n    };\r\n    GW3ConnectionImpl.prototype.toAPI = function () {\r\n        var that = this;\r\n        var superAPI = _super.prototype.toAPI.call(this);\r\n        return {\r\n            domain: that.domain.bind(that),\r\n            get peerId() { return that.peerId; },\r\n            get token() { return that.token; },\r\n            get info() { return that.info; },\r\n            get resolvedIdentity() { return that.resolvedIdentity; },\r\n            get availableDomains() { return that.availableDomains; },\r\n            on: superAPI.on,\r\n            send: superAPI.send,\r\n            off: superAPI.off,\r\n            login: superAPI.login,\r\n            logout: superAPI.logout,\r\n            loggedIn: superAPI.loggedIn,\r\n            connected: superAPI.connected,\r\n            disconnected: superAPI.disconnected,\r\n            get protocolVersion() { return superAPI.protocolVersion; },\r\n            get version() { return superAPI.version; },\r\n        };\r\n    };\r\n    GW3ConnectionImpl.prototype.domain = function (domain, logger) {\r\n        return this.gw3Protocol.domain(domain, logger);\r\n    };\r\n    return GW3ConnectionImpl;\r\n}(connection_1.default));\r\nexports.default = GW3ConnectionImpl;\r\n//# sourceMappingURL=gw3Connection.js.map\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Connection to gateway V1 - the one that runs on the desktop without authentication\r\n */\r\nvar GW1Protocol = (function () {\r\n    function GW1Protocol() {\r\n    }\r\n    GW1Protocol.prototype.processStringMessage = function (message) {\r\n        // GW1 messages have the following structure\r\n        // {message: object, type: string}\r\n        // so type is outside the message\r\n        var messageObj = JSON.parse(message);\r\n        return {\r\n            msg: messageObj.message,\r\n            msgType: messageObj.type,\r\n        };\r\n    };\r\n    GW1Protocol.prototype.createStringMessage = function (product, type, message, id) {\r\n        return JSON.stringify({\r\n            type: type,\r\n            message: message,\r\n            id: id,\r\n        });\r\n    };\r\n    GW1Protocol.prototype.login = function (message) {\r\n        return Promise.resolve({});\r\n    };\r\n    GW1Protocol.prototype.logout = function () {\r\n        // Do nothing\r\n    };\r\n    GW1Protocol.prototype.loggedIn = function (callback) {\r\n        callback();\r\n    };\r\n    GW1Protocol.prototype.processObjectMessage = function (message) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    GW1Protocol.prototype.createObjectMessage = function (product, type, message, id) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    return GW1Protocol;\r\n}());\r\nexports.default = GW1Protocol;\r\n//# sourceMappingURL=gw1.js.map\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MESSAGE_LOGIN = \"LOGIN\";\r\nvar MESSAGE_LOGIN_RESPONSE = \"LOGIN_RESPONSE\";\r\nvar MESSAGE_LOGIN_TOKEN = \"LOGIN_TOKEN\";\r\nvar MESSAGE_LOGOUT = \"LOGOUT\";\r\nvar MESSAGE_SEND = \"SEND\";\r\n// Connection to gateway V2 - gw1 +  authentication\r\nvar GW2Protocol = (function () {\r\n    function GW2Protocol(connection) {\r\n        this.connection = connection;\r\n    }\r\n    GW2Protocol.prototype.processStringMessage = function (message) {\r\n        // GW2 messages have the following structure\r\n        // {message: object, type: string}\r\n        // so type is outside the message\r\n        // This is the same protocol sa GW1 except for SEND messages :(\r\n        // They have different structure because of authentication\r\n        var messageObj = JSON.parse(message);\r\n        if (messageObj.type === MESSAGE_SEND) {\r\n            // GW2 introduces a new\r\n            return {\r\n                msg: messageObj.data.message,\r\n                msgType: messageObj.data.type,\r\n            };\r\n        }\r\n        return {\r\n            msg: messageObj,\r\n            msgType: messageObj.type,\r\n        };\r\n    };\r\n    GW2Protocol.prototype.createStringMessage = function (product, type, message, id) {\r\n        // GW2 message madness bellow\r\n        // LOGIN and LOGOUT are kind of special\r\n        if (type === MESSAGE_LOGIN) {\r\n            return JSON.stringify(message);\r\n        }\r\n        if (type === MESSAGE_LOGOUT) {\r\n            return JSON.stringify({ type: \"LOGOUT\" });\r\n        }\r\n        return JSON.stringify({\r\n            type: MESSAGE_SEND,\r\n            sessionCookie: this.sessionCookie,\r\n            data: {\r\n                type: type,\r\n                message: message,\r\n                id: id,\r\n            },\r\n        });\r\n    };\r\n    GW2Protocol.prototype.login = function (message) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var request;\r\n            if (message.token) {\r\n                request = {\r\n                    token: message.token,\r\n                    type: MESSAGE_LOGIN_TOKEN,\r\n                };\r\n            }\r\n            else if (message.username) {\r\n                request = {\r\n                    user: message.username,\r\n                    password: message.password,\r\n                    type: MESSAGE_LOGIN,\r\n                };\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth message\" + JSON.stringify(message));\r\n            }\r\n            var lrSubs = _this.connection.on(\"\", MESSAGE_LOGIN_RESPONSE, function (response) {\r\n                _this.connection.off(lrSubs);\r\n                if (response && !response.errorMessage) {\r\n                    _this.sessionCookie = response.sessionCookie;\r\n                    resolve(response);\r\n                }\r\n                else {\r\n                    reject(response);\r\n                }\r\n            });\r\n            _this.connection.send(\"\", \"LOGIN\", request);\r\n        });\r\n    };\r\n    GW2Protocol.prototype.logout = function () {\r\n        this.connection.send(\"\", \"LOGOUT\", {});\r\n    };\r\n    GW2Protocol.prototype.loggedIn = function (callback) {\r\n        callback();\r\n    };\r\n    GW2Protocol.prototype.processObjectMessage = function (message) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    GW2Protocol.prototype.createObjectMessage = function (product, type, message, id) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    return GW2Protocol;\r\n}());\r\nexports.default = GW2Protocol;\r\n//# sourceMappingURL=gw2.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar gw3Domain_1 = __webpack_require__(27);\r\nvar callback_registry_1 = __webpack_require__(0);\r\nfunction default_1(connection, settings, logger) {\r\n    var datePrefix = \"#T42_DATE#\";\r\n    var datePrefixLen = datePrefix.length;\r\n    var dateMinLen = datePrefixLen + 1; // prefix + at least one char (1970/01/01 = 0)\r\n    var datePrefixFirstChar = datePrefix[0];\r\n    var registry = callback_registry_1.default();\r\n    var isLoggedIn = false;\r\n    // if true(default) the user wants to be connected. If the user explicitly calls logout this will become false\r\n    var shouldTryLogin = true;\r\n    var sessions = [];\r\n    var loginConfig;\r\n    connection.disconnected(handleDisconnected.bind(this));\r\n    ping();\r\n    function processStringMessage(message) {\r\n        var msg = JSON.parse(message, function (key, value) {\r\n            // check for date - we have custom protocol for dates\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            try {\r\n                var milliseconds = parseInt(value.substring(datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            }\r\n            catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n        return {\r\n            msg: msg,\r\n            msgType: msg.type,\r\n        };\r\n    }\r\n    function createStringMessage(product, type, message, id) {\r\n        var oldToJson = Date.prototype.toJSON;\r\n        Date.prototype.toJSON = function () {\r\n            return datePrefix + this.getTime();\r\n        };\r\n        var result = JSON.stringify(message);\r\n        Date.prototype.toJSON = oldToJson;\r\n        return result;\r\n    }\r\n    function processObjectMessage(message) {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    }\r\n    function createObjectMessage(product, type, message, id) {\r\n        return message;\r\n    }\r\n    function login(config) {\r\n        logger.debug(\"logging in...\");\r\n        loginConfig = config;\r\n        shouldTryLogin = true;\r\n        return new Promise(function (resolve, reject) {\r\n            var authentication = {};\r\n            var gwToken = getGatewayToken();\r\n            if (gwToken) {\r\n                authentication.method = \"gateway-token\";\r\n                authentication.token = gwToken;\r\n            }\r\n            else if (config.token) {\r\n                authentication.method = \"access-token\";\r\n                authentication.token = config.token;\r\n            }\r\n            else if (config.username) {\r\n                authentication.method = \"secret\";\r\n                authentication.login = config.username;\r\n                authentication.secret = config.password;\r\n            }\r\n            else {\r\n                throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n            }\r\n            var helloMsg = {\r\n                type: \"hello\",\r\n                identity: settings.identity,\r\n                authentication: authentication,\r\n            };\r\n            var globalDomain = gw3Domain_1.default(\"global\", connection, logger);\r\n            globalDomain.send(helloMsg)\r\n                .then(function (msg) {\r\n                logger.debug(\"login successful with PeerId \" + msg.peer_id);\r\n                connection.peerId = msg.peer_id;\r\n                connection.resolvedIdentity = msg.resolved_identity;\r\n                connection.availableDomains = msg.available_domains;\r\n                if (msg.options) {\r\n                    connection.token = msg.options.access_token;\r\n                    connection.info = msg.options.info;\r\n                }\r\n                setLoggedIn(true);\r\n                resolve(msg.resolved_identity);\r\n            })\r\n                .catch(function (err) {\r\n                logger.error(\"error sending hello message - \" + err);\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function logout() {\r\n        logger.debug(\"logging out...\");\r\n        shouldTryLogin = false;\r\n        // go through all sessions and leave the corresponding domain\r\n        sessions.forEach(function (session) {\r\n            session.leave();\r\n        });\r\n    }\r\n    function loggedIn(callback) {\r\n        if (isLoggedIn) {\r\n            callback();\r\n        }\r\n        return registry.add(\"onLoggedIn\", callback);\r\n    }\r\n    function domain(domain, domainLogger) {\r\n        var session = gw3Domain_1.default(domain, connection, domainLogger);\r\n        sessions.push(session);\r\n        return session;\r\n    }\r\n    function getGatewayToken() {\r\n        if (settings.gwTokenProvider) {\r\n            return settings.gwTokenProvider.get();\r\n        }\r\n        if (typeof location !== \"undefined\" && location.search) {\r\n            var searchParams = new URLSearchParams(location.search.slice(1));\r\n            return searchParams.get(\"t42gwtoken\");\r\n        }\r\n        return null;\r\n    }\r\n    function handleDisconnected() {\r\n        setLoggedIn(false);\r\n        logger.debug(\"disconnected - will try new login?\" + shouldTryLogin);\r\n        if (shouldTryLogin) {\r\n            connection.login(loginConfig)\r\n                .catch(function () {\r\n                setTimeout(handleDisconnected, 1000);\r\n            });\r\n        }\r\n    }\r\n    function setLoggedIn(value) {\r\n        isLoggedIn = value;\r\n        if (isLoggedIn) {\r\n            registry.execute(\"onLoggedIn\");\r\n        }\r\n    }\r\n    // ping the server every 30 sec\r\n    function ping() {\r\n        if (isLoggedIn) {\r\n            connection.send(\"\", \"\", { type: \"ping\" });\r\n        }\r\n        setTimeout(ping, 30 * 1000);\r\n    }\r\n    return {\r\n        processStringMessage: processStringMessage,\r\n        createStringMessage: createStringMessage,\r\n        createObjectMessage: createObjectMessage,\r\n        processObjectMessage: processObjectMessage,\r\n        login: login,\r\n        logout: logout,\r\n        loggedIn: loggedIn,\r\n        domain: domain,\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=gw3.js.map\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar es6_promise_1 = __webpack_require__(15);\r\n/**\r\n * Connection to HC\r\n */\r\nvar HCProtocol = (function () {\r\n    function HCProtocol() {\r\n    }\r\n    HCProtocol.prototype.processStringMessage = function (message) {\r\n        var messageObj = JSON.parse(message);\r\n        return {\r\n            msg: messageObj,\r\n            msgType: messageObj.type,\r\n        };\r\n    };\r\n    HCProtocol.prototype.createStringMessage = function (product, type, message, id) {\r\n        return JSON.stringify(message);\r\n    };\r\n    HCProtocol.prototype.login = function (message) {\r\n        return es6_promise_1.Promise.resolve({});\r\n    };\r\n    HCProtocol.prototype.logout = function () {\r\n        // Do nothing\r\n    };\r\n    HCProtocol.prototype.loggedIn = function (callback) {\r\n        callback();\r\n    };\r\n    HCProtocol.prototype.processObjectMessage = function (message) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    HCProtocol.prototype.createObjectMessage = function (product, type, message, id) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    return HCProtocol;\r\n}());\r\nexports.default = HCProtocol;\r\n//# sourceMappingURL=hc.js.map\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Connection to HtmlContainer\r\n */\r\nvar HCTransport = (function () {\r\n    function HCTransport() {\r\n        this.connectionId = Math.floor(1e10 * Math.random()).toString();\r\n    }\r\n    HCTransport.prototype.send = function (message, product, type) {\r\n        if (product === \"metrics\") {\r\n            global.htmlContainer.metricsFacade.send(type, message);\r\n        }\r\n        else if (product === \"log\") {\r\n            global.htmlContainer.loggingFacade.send(type, message);\r\n        }\r\n    };\r\n    HCTransport.prototype.onConnectedChanged = function (callback) {\r\n        // always connected;\r\n        callback(true);\r\n    };\r\n    HCTransport.prototype.onMessage = function (callback) {\r\n        // dummy implementation\r\n        // hc transports are one way only\r\n    };\r\n    HCTransport.prototype.close = function () {\r\n        // do nothing\r\n    };\r\n    return HCTransport;\r\n}());\r\nexports.default = HCTransport;\r\n//# sourceMappingURL=hc.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(0);\r\nvar HTTPTransport = (function () {\r\n    function HTTPTransport(settings, logger) {\r\n        this.registry = callback_registry_1.default();\r\n        this.url = settings.http;\r\n        // polling interval in ms, default is 1 second\r\n        this.interval = settings.httpInterval || 1000;\r\n        this.logger = logger;\r\n        this.logger.debug(\"Attempting connection to Gateway via HTTP with url \" + this.url + \" on interval \" + this.interval + \" ms\");\r\n    }\r\n    HTTPTransport.prototype.close = function () {\r\n        // Do nothing\r\n    };\r\n    HTTPTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    HTTPTransport.prototype.onMessage = function (callback) {\r\n        this.registry.add(\"onMessage\", callback);\r\n    };\r\n    HTTPTransport.prototype.send = function (msg) {\r\n        this.httpPost(this.url, msg);\r\n    };\r\n    /**\r\n     * Polls data from a given url on some interval\r\n     * @param url       Base server url. A sequence url param may be added based on the seq param\r\n     * @param interval  Interval (in ms) between polling requestts\r\n     * @param seq       Next sequence number we should ask for (if 0 the server will return the last known message)\r\n     * @param ondata    Data callback\r\n     */\r\n    HTTPTransport.prototype.poll = function (url, interval, seq, ondata) {\r\n        var _this = this;\r\n        // construct the get Url - if seq != 0 add as url param to get\r\n        // only messages after this sequence\r\n        var getUrl = url;\r\n        if (seq !== 0) {\r\n            getUrl = url + \"?sequence=\" + seq + \"&no-cache=\" + new Date().getTime();\r\n        }\r\n        // create a request\r\n        var xmlhttp = this.createCORSRequest(\"GET\", getUrl, function () {\r\n            if (seq === 0) {\r\n                _this.logger.debug(\"Connected to Gateway on \" + url);\r\n            }\r\n            var message = JSON.parse(xmlhttp.responseText);\r\n            // the server returns the number of the next sequence that we must query for\r\n            var nextSeq = message.nextSequence;\r\n            // call user callback\r\n            ondata(message.data);\r\n            // re-schedule\r\n            setTimeout(function () {\r\n                _this.poll(url, interval, nextSeq, ondata);\r\n            }, _this.interval);\r\n        });\r\n        xmlhttp.onerror = function (ev) {\r\n            console.log(\"Error polling data from http server \" + getUrl + \" -  + \" + ev);\r\n            // re-schedule\r\n            setTimeout(function () {\r\n                _this.poll(url, interval, seq, ondata);\r\n            }, _this.interval);\r\n        };\r\n        xmlhttp.send();\r\n    };\r\n    /**\r\n     * POSTs a message to a given url\r\n     */\r\n    HTTPTransport.prototype.httpPost = function (url, message) {\r\n        // create a request\r\n        var xmlhttp = this.createCORSRequest(\"POST\", url);\r\n        xmlhttp.send(message);\r\n    };\r\n    /**\r\n     * Creates CORS request (cross domain requests) for different browsers - XMLHttpRequest withCredentials\r\n     * for Chrome and FF and XDomainRequest for IE\r\n     */\r\n    HTTPTransport.prototype.createCORSRequest = function (method, url, resultCallback) {\r\n        var xhr = new XMLHttpRequest();\r\n        if (\"withCredentials\" in xhr) {\r\n            // Check if the XMLHttpRequest object has a \"withCredentials\" property.\r\n            // \"withCredentials\" only exists on XMLHTTPRequest2 objects.\r\n            xhr.open(method, url, true);\r\n            if (typeof resultCallback !== \"undefined\") {\r\n                xhr.onreadystatechange = function () {\r\n                    if (xhr.readyState === 4 && xhr.status === 200) {\r\n                        resultCallback();\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        else if (typeof global.XDomainRequest !== \"undefined\") {\r\n            // Otherwise, check if XDomainRequest.\r\n            // XDomainRequest only exists in IE, and is IE's way of making CORS requests.\r\n            xhr = new global.XDomainRequest();\r\n            xhr.open(method, url);\r\n            if (typeof resultCallback !== \"undefined\") {\r\n                xhr.onload = resultCallback;\r\n            }\r\n        }\r\n        else {\r\n            // Otherwise, CORS is not supported by the browser.\r\n            xhr = null;\r\n        }\r\n        return xhr;\r\n    };\r\n    return HTTPTransport;\r\n}());\r\nexports.default = HTTPTransport;\r\n//# sourceMappingURL=http.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(0);\r\n/**\r\n * Inproc transport for GW3\r\n */\r\nvar Inproc = (function () {\r\n    function Inproc(token, gw, logger) {\r\n        this.registry = callback_registry_1.default();\r\n        this.gw = gw;\r\n        this.gwToken = token;\r\n        this.logger = logger;\r\n        this.connectToken = this.gw.connect(this.gwToken, this.messageHandler.bind(this));\r\n    }\r\n    Object.defineProperty(Inproc.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Inproc.prototype.sendObject = function (msg) {\r\n        this.gw.send(this.connectToken, msg);\r\n    };\r\n    Inproc.prototype.send = function (msg, product, type) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    Inproc.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    Inproc.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    Inproc.prototype.close = function () {\r\n        // DO NOTHING\r\n    };\r\n    Inproc.prototype.messageHandler = function (msg) {\r\n        if (this.logger.consoleLevel() === \"trace\") {\r\n            this.logger.debug(JSON.stringify(msg));\r\n        }\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return Inproc;\r\n}());\r\nexports.default = Inproc;\r\n//# sourceMappingURL=inproc.js.map\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(0);\r\nvar WebSocket = isNode() ? __webpack_require__(25) : global.WebSocket;\r\nfunction isNode() {\r\n    // Only Node.JS has a process variable that is of [[Class]] process\r\n    try {\r\n        return Object.prototype.toString.call(global.process) === \"[object process]\";\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\nvar WS = (function () {\r\n    function WS(settings, logger) {\r\n        /**\r\n         * If the flag is true the connection should keep trying to connect.\r\n         */\r\n        this._shouldTryConnecting = true;\r\n        this._registry = callback_registry_1.default();\r\n        this._settings = settings;\r\n        this._logger = logger;\r\n        this.waitForSocketConnection(undefined);\r\n    }\r\n    WS.prototype.onMessage = function (callback) {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    };\r\n    // Create a function for sending a message\r\n    WS.prototype.send = function (msg) {\r\n        var _this = this;\r\n        this.waitForSocketConnection(function () {\r\n            _this._ws.send(msg);\r\n        });\r\n    };\r\n    WS.prototype.close = function () {\r\n        this._shouldTryConnecting = false;\r\n        this._ws.close();\r\n    };\r\n    WS.prototype.onConnectedChanged = function (callback) {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WS.prototype.initiateSocket = function () {\r\n        var _this = this;\r\n        this._logger.debug(\"initiating _ws...\");\r\n        this._ws = new WebSocket(this._settings.ws);\r\n        this._ws.onclose = function () {\r\n            _this._logger.debug(\"_ws closed\");\r\n            _this._registry.execute(\"onConnectedChanged\", false);\r\n        };\r\n        // Log on connection\r\n        this._ws.onopen = function () {\r\n            _this._logger.debug(\"_ws opened\");\r\n            _this._registry.execute(\"onConnectedChanged\", true);\r\n        };\r\n        // Attach handler\r\n        this._ws.onmessage = function (message) {\r\n            _this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n    };\r\n    // Holds callback execution until socket connection is established.\r\n    WS.prototype.waitForSocketConnection = function (callback) {\r\n        var _this = this;\r\n        if (!callback) {\r\n            callback = function () {\r\n                // Do nothing\r\n            };\r\n        }\r\n        if (!this._shouldTryConnecting) {\r\n            return;\r\n        }\r\n        if (!this._ws || this._ws.readyState > 1) {\r\n            // > 1 means closing or closed\r\n            this.initiateSocket();\r\n        }\r\n        else if (this._ws.readyState === 1) {\r\n            return callback();\r\n        }\r\n        setTimeout(function () {\r\n            _this.waitForSocketConnection(callback);\r\n        }, this._settings.reconnectInterval); // wait X milliseconds for the connection...\r\n    };\r\n    return WS;\r\n}());\r\nexports.default = WS;\r\n//# sourceMappingURL=ws.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {var require;/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.1.0\n */\n\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = __webpack_require__(28);\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n      GET_THEN_ERROR.error = null;\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n//# sourceMappingURL=es6-promise.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16), __webpack_require__(1)))\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = __webpack_require__(20);\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar encode = __webpack_require__(5);\nvar alphabet = __webpack_require__(2);\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar alphabet = __webpack_require__(2);\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar alphabet = __webpack_require__(2);\nvar encode = __webpack_require__(5);\nvar decode = __webpack_require__(19);\nvar build = __webpack_require__(18);\nvar isValid = __webpack_require__(21);\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = __webpack_require__(24) || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar alphabet = __webpack_require__(2);\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 0;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n\n/**\n * Module dependencies.\n */\n\nvar global = (function() { return this; })();\n\n/**\n * WebSocket constructor.\n */\n\nvar WebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WebSocket ? ws : null;\n\n/**\n * WebSocket constructor.\n *\n * The third `opts` options object gets ignored in web browsers, since it's\n * non-standard, and throws a TypeError if passed to the constructor.\n * See: https://github.com/einaros/ws/issues/227\n *\n * @param {String} uri\n * @param {Array} protocols (optional)\n * @param {Object) opts (optional)\n * @api public\n */\n\nfunction ws(uri, protocols, opts) {\n  var instance;\n  if (protocols) {\n    instance = new WebSocket(uri, protocols);\n  } else {\n    instance = new WebSocket(uri);\n  }\n  return instance;\n}\n\nif (WebSocket) ws.prototype = WebSocket.prototype;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection_1 = __webpack_require__(4);\r\nvar gw3_1 = __webpack_require__(9);\r\nvar hc_1 = __webpack_require__(10);\r\nvar ws_1 = __webpack_require__(14);\r\nvar gw3Connection_1 = __webpack_require__(6);\r\nvar gw1_1 = __webpack_require__(7);\r\nvar hc_2 = __webpack_require__(11);\r\nvar gw2_1 = __webpack_require__(8);\r\nvar inproc_1 = __webpack_require__(13);\r\nvar http_1 = __webpack_require__(12);\r\nvar PackageJson = __webpack_require__(3);\r\n/**\r\n * Check readme.md for detailed description\r\n */\r\nexports.default = function (settings) {\r\n    settings = settings || {};\r\n    settings.version = PackageJson.version;\r\n    var connection = new connection_1.default(settings);\r\n    var logger = settings.logger;\r\n    if (!logger) {\r\n        throw new Error(\"please pass a logger object\");\r\n    }\r\n    // by default use gw1 protocol and hc transport\r\n    var protocol = new hc_1.default();\r\n    var transport = new hc_2.default();\r\n    if (global.htmlContainer === undefined) {\r\n        if (settings.gw && settings.gw.facade && settings.gw.token && settings.protocolVersion === 3) {\r\n            transport = new inproc_1.default(settings.gw.token, settings.gw.facade, logger.subLogger(\"inproc\"));\r\n        }\r\n        else if (settings.ws !== undefined) {\r\n            transport = new ws_1.default(settings, logger.subLogger(\"ws\"));\r\n        }\r\n        else if (settings.http !== undefined) {\r\n            transport = new http_1.default(settings, logger.subLogger(\"http\"));\r\n        }\r\n        else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n        // if running in the browser - let's check which protocol version user wants\r\n        if (settings.protocolVersion === 3) {\r\n            var gw3Connection = new gw3Connection_1.default(settings);\r\n            var gw3Prot = gw3_1.default(gw3Connection, settings, logger.subLogger(\"gw3\"));\r\n            gw3Connection.init(transport, gw3Prot);\r\n            return gw3Connection.toAPI();\r\n        }\r\n        else if (settings.protocolVersion === 2) {\r\n            protocol = new gw2_1.default(connection);\r\n        }\r\n        else {\r\n            protocol = new gw1_1.default();\r\n        }\r\n    }\r\n    connection.init(transport, protocol);\r\n    return connection.toAPI();\r\n};\r\n//# sourceMappingURL=main.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callbackRegistry = __webpack_require__(0);\r\nvar shortid_1 = __webpack_require__(17);\r\n/**\r\n * Handles domain session lifetime and events for a given connection/domain pair\r\n */\r\nfunction default_1(domain, connection, logger) {\r\n    var isJoined = false;\r\n    var tryReconnecting = false;\r\n    /** holds latest options passed to join - used when doing reconnects */\r\n    var _latestOptions;\r\n    var callbacks = callbackRegistry();\r\n    // attach event handlers to connection\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(domain, \"welcome\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(domain, \"error\", function (msg) { return handleErrorMessage(msg); });\r\n    connection.on(domain, \"success\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(domain, \"result\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(domain, \"subscribed\", function (msg) { return handleSuccessMessage(msg); });\r\n    var requestsMap = {};\r\n    function join(options) {\r\n        _latestOptions = options;\r\n        return new Promise(function (resolve, reject) {\r\n            logger.debug(\"joining \" + domain);\r\n            var joinMsg = {\r\n                type: \"join\",\r\n                destination: domain,\r\n                domain: \"global\",\r\n                options: options,\r\n            };\r\n            send(joinMsg)\r\n                .then(function () {\r\n                handleJoined();\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    // join/leave, log in/(get) disconnect(ed)\r\n    function leave() {\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        var leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        // #deleteme - handling\r\n        send(leaveMsg).then(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n    function handleJoined() {\r\n        logger.debug(\"joined \" + domain);\r\n        isJoined = true;\r\n        var wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n    function handleConnectionDisconnected() {\r\n        logger.warn(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n    function handleConnectionLoggedIn() {\r\n        if (tryReconnecting) {\r\n            logger.info(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n    function onJoined(callback) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n    function onLeft(callback) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n    function handleErrorMessage(msg) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.error(msg);\r\n    }\r\n    function handleSuccessMessage(msg) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n    function getNextRequestId() {\r\n        return shortid_1.generate();\r\n    }\r\n    /**\r\n     * Send a message\r\n     * @param msg message to send\r\n     * @param tag a custom object (tag) - it will be transferred to success/error callback\r\n     * @param success\r\n     * @param error\r\n     */\r\n    function send(msg, tag) {\r\n        // Allows function caller to override request_id\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        // Allows function caller to override domain (join/leave messages are in global domain)\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        var requestId = msg.request_id;\r\n        return new Promise(function (resolve, reject) {\r\n            requestsMap[requestId] = {\r\n                success: function (successMsg) {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: function (errorMsg) {\r\n                    logger.warn(\"GW error - \" + JSON.stringify(errorMsg) + \" for request \" + JSON.stringify(msg));\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection.send(domain, domain, msg);\r\n        });\r\n    }\r\n    function sendFireAndForget(msg) {\r\n        // Allows function caller to override request_id\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        // Allows function caller to override domain (join/leave messages are in global domain)\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        connection.send(domain, domain, msg);\r\n    }\r\n    return {\r\n        join: join,\r\n        leave: leave,\r\n        onJoined: onJoined,\r\n        onLeft: onLeft,\r\n        send: send,\r\n        sendFireAndForget: sendFireAndForget,\r\n        on: function (type, callback) {\r\n            connection.on(domain, type, callback);\r\n        },\r\n        loggedIn: function (callback) { return connection.loggedIn(callback); },\r\n        connected: function (callback) { return connection.connected(callback); },\r\n        disconnected: function (callback) { return connection.disconnected(callback); },\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=gw3Domain.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=tick42-gateway-connection.js.map\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tick42-logger\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tick42-logger\"] = factory();\n\telse\n\t\troot[\"tick42-logger\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar levels_1 = __webpack_require__(2);\nvar LoggerImpl = function () {\n    function LoggerImpl(name, parent, metricSystem) {\n        this._subloggers = [];\n        this._name = name;\n        this._parent = parent;\n        if (parent) {\n            this._path = parent.path + \".\" + name;\n        } else {\n            this._path = name;\n        }\n        this._loggerFullName = \"[\" + this._path + \"]\";\n        // create metric system\n        if (typeof metricSystem !== \"undefined\") {\n            this.metricsLevel(\"warn\", metricSystem.subSystem(name));\n        }\n    }\n    Object.defineProperty(LoggerImpl.prototype, \"name\", {\n        get: function get() {\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoggerImpl.prototype, \"path\", {\n        get: function get() {\n            return this._path;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerImpl.prototype.subLogger = function (name) {\n        // Check if the sublogger is already created\n        var existingSub = this._subloggers.filter(function (subLogger) {\n            return subLogger.name === name;\n        })[0];\n        if (existingSub !== undefined) {\n            return existingSub;\n        }\n        // Check if the name isn't the same as one of the parent properties\n        Object.keys(this).forEach(function (key) {\n            if (key === name) {\n                throw new Error(\"This sub logger name is not allowed.\");\n            }\n        });\n        var sub = new LoggerImpl(name, this);\n        // add sublogger to subloggers array\n        this._subloggers.push(sub);\n        return sub;\n    };\n    LoggerImpl.prototype.publishLevel = function (level) {\n        if (level !== null && level !== undefined) {\n            this._publishLevel = level;\n        }\n        return this._publishLevel || this._parent.publishLevel();\n    };\n    LoggerImpl.prototype.consoleLevel = function (level) {\n        if (level !== null && level !== undefined) {\n            this._consoleLevel = level;\n        }\n        return this._consoleLevel || this._parent.consoleLevel();\n    };\n    LoggerImpl.prototype.metricsLevel = function (level, metricsSystem) {\n        if (level !== null && level !== undefined) {\n            this._metricLevel = level;\n        }\n        if (metricsSystem !== undefined) {\n            if ((typeof metricsSystem === \"undefined\" ? \"undefined\" : _typeof(metricsSystem)) === \"object\" && typeof metricsSystem.objectMetric === \"function\") {\n                this._metricSystem = metricsSystem;\n            } else {\n                throw new Error(\"Please specify metric system\");\n            }\n        }\n        return this._metricLevel || this._parent.metricsLevel();\n    };\n    LoggerImpl.prototype.log = function (message, level) {\n        this.publishMessage(level || levels_1.default.info, message);\n    };\n    LoggerImpl.prototype.trace = function (message) {\n        this.log(message, levels_1.default.trace);\n    };\n    LoggerImpl.prototype.debug = function (message) {\n        this.log(message, levels_1.default.debug);\n    };\n    LoggerImpl.prototype.info = function (message) {\n        this.log(message, levels_1.default.info);\n    };\n    LoggerImpl.prototype.warn = function (message) {\n        this.log(message, levels_1.default.warn);\n    };\n    LoggerImpl.prototype.error = function (message) {\n        this.log(message, levels_1.default.error);\n    };\n    LoggerImpl.prototype.toAPIObject = function () {\n        var that = this;\n        return {\n            name: this.name,\n            subLogger: this.subLogger.bind(that),\n            publishLevel: this.publishLevel.bind(that),\n            consoleLevel: this.consoleLevel.bind(that),\n            metricsLevel: this.metricsLevel.bind(that),\n            log: this.log.bind(that),\n            trace: this.trace.bind(that),\n            debug: this.debug.bind(that),\n            info: this.info.bind(that),\n            warn: this.warn.bind(that),\n            error: this.error.bind(that)\n        };\n    };\n    LoggerImpl.prototype.publishMessage = function (level, message) {\n        // Retrieve logger name and levels\n        var loggerName = this._loggerFullName;\n        // Add stack trace if the message is an error\n        if (level === levels_1.default.error) {\n            var e = new Error();\n            if (e.stack) {\n                message = message + \"\\n\" + e.stack.split(\"\\n\").slice(3).join(\"\\n\");\n            }\n        }\n        // Publish in console\n        if (levels_1.default.canPublish(level, this.consoleLevel())) {\n            var toPrint = loggerName + \": \" + message;\n            switch (level) {\n                case levels_1.default.trace:\n                    console.trace(toPrint);\n                    break;\n                case levels_1.default.debug:\n                    if (console.debug) {\n                        console.debug(toPrint);\n                    } else {\n                        console.log(toPrint);\n                    }\n                    break;\n                case levels_1.default.info:\n                    console.info(toPrint);\n                    break;\n                case levels_1.default.warn:\n                    console.warn(toPrint);\n                    break;\n                case levels_1.default.error:\n                    console.error(toPrint);\n                    break;\n            }\n        }\n        // Publish in file\n        if (levels_1.default.canPublish(level, this.publishLevel())) {\n            LoggerImpl.GetConnection().send(\"log\", \"LogMessage\", {\n                instance: LoggerImpl.Instance,\n                level: levels_1.default.order.indexOf(level),\n                logger: loggerName,\n                message: message\n            });\n        }\n        // Publish in metrics\n        if (levels_1.default.canPublish(level, this.metricsLevel())) {\n            if (this._metricSystem !== undefined) {\n                this._metricSystem.objectMetric(\"LogMessage\", {\n                    Level: level,\n                    Logger: loggerName,\n                    Message: message,\n                    Time: new Date()\n                });\n                if (level === levels_1.default.error) {\n                    this._metricSystem.setState(100, message);\n                }\n            }\n        }\n    };\n    return LoggerImpl;\n}();\nexports.default = LoggerImpl;\n//# sourceMappingURL=logger.js.map\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"tick42-logger\",\n\t\"version\": \"3.0.8\",\n\t\"description\": \"Glue library for logging\",\n\t\"main\": \"dist/node/tick42-logger.js\",\n\t\"browser\": \"dist/web/tick42-logger.js\",\n\t\"types\": \"./types/index.d.ts\",\n\t\"scripts\": {\n\t\t\"clean\": \"node ./build/scripts/clean.js\",\n\t\t\"pre:build\": \"npm run tslint && tsc && set NODE_ENV=development && npm run clean\",\n\t\t\"file-versionify\": \"node ./build/scripts/file-versionify.js\",\n\t\t\"tslint\": \"tslint -t codeFrame ./src/main.ts\",\n\t\t\"tslint:fix\": \"tslint -t codeFrame --fix ./src/main.ts\",\n\t\t\"watch\": \"onchange ./src/**/*.ts -- npm run build:dev\",\n\t\t\"build:dev\": \"npm run pre:build && set NODE_ENV=development && webpack && npm run file-versionify && npm run types\",\n\t\t\"build:prod\": \"npm run pre:build && set NODE_ENV=development && webpack && set NODE_ENV=production && webpack && npm run file-versionify && npm run types\",\n\t\t\"docs\": \"typedoc --options typedoc.json ./src\",\n\t\t\"types\": \"node ./build/scripts/copy-types.js\",\n\t\t\"prepublish\": \"npm run build:prod\",\n\t\t\"types:merged\": \"dts-generator --project ./ --out ./types/index.d.ts\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://stash.tick42.com:8443/scm/ofgw/js-logger.git\"\n\t},\n\t\"author\": \"Tick42\",\n\t\"license\": \"ISC\",\n\t\"precommit\": \"tslint:fix\",\n\t\"devDependencies\": {\n\t\t\"@types/tick42-gateway-connection\": \"^2.2.3\",\n\t\t\"babel-core\": \"^6.17.0\",\n\t\t\"babel-loader\": \"^6.4.1\",\n\t\t\"babel-plugin-add-module-exports\": \"^0.2.1\",\n\t\t\"babel-plugin-es6-promise\": \"^1.0.0\",\n\t\t\"babel-preset-es2015\": \"^6.16.0\",\n\t\t\"babel-preset-stage-2\": \"^6.22.0\",\n\t\t\"dts-generator\": \"^2.1.0\",\n\t\t\"es6-promise\": \"^4.1.0\",\n\t\t\"onchange\": \"3.*\",\n\t\t\"pre-commit\": \"^1.1.3\",\n\t\t\"shelljs\": \"^0.6.0\",\n\t\t\"tick42-webpack-config\": \"4.1.1\",\n\t\t\"tslint\": \"5.*\",\n\t\t\"typedoc\": \"^0.5.10\",\n\t\t\"typescript\": \"2.3.0\",\n\t\t\"webpack\": \"2.3.3\"\n\t}\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LogLevel = function () {\n    function LogLevel() {}\n    LogLevel.canPublish = function (level, restriction) {\n        var levelIdx = LogLevel.order.indexOf(level);\n        var restrictionIdx = LogLevel.order.indexOf(restriction);\n        return levelIdx >= restrictionIdx;\n    };\n    return LogLevel;\n}();\nLogLevel.off = \"off\";\nLogLevel.trace = \"trace\";\nLogLevel.debug = \"debug\";\nLogLevel.info = \"info\";\nLogLevel.warn = \"warn\";\nLogLevel.error = \"error\";\nLogLevel.order = [LogLevel.trace, LogLevel.debug, LogLevel.info, LogLevel.warn, LogLevel.error, LogLevel.off];\nexports.default = LogLevel;\n//# sourceMappingURL=levels.js.map\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logger_1 = __webpack_require__(0);\nvar PackageJson = __webpack_require__(1);\nexports.default = function (settings) {\n    // Convert instance to string, throw exceptions if it is not full\n    var identity = settings.identity;\n    if (!identity) {\n        throw new Error(\"identity is missing\");\n    }\n    var identityStr = identity.system + \"\\\\\" + identity.service + \"\\\\\" + identity.instance;\n    logger_1.default.Instance = identityStr;\n    logger_1.default.GetConnection = settings.getConnection;\n    var mainLogger = new logger_1.default(\"main\");\n    mainLogger.publishLevel(settings.publish || \"off\");\n    mainLogger.consoleLevel(settings.console || \"info\");\n    mainLogger.metricsLevel(settings.metrics || \"off\");\n    var apiLogger = mainLogger.toAPIObject();\n    apiLogger.version = PackageJson.version;\n    return apiLogger;\n};\n//# sourceMappingURL=main.js.map\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=tick42-logger.js.map\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tick42-metrics\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tick42-metrics\"] = factory();\n\telse\n\t\troot[\"tick42-metrics\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 20);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    DEFAULT: 0,\n    STRING: 1,\n    NUMBER: 2,\n    COUNT: 3,\n    RATE: 4,\n    STATISTICS: 6,\n    TIMESTAMP: 7,\n    ADDRESS: 8,\n    TIMESPAN: 10,\n    OBJECT: 11\n};\n//# sourceMappingURL=metric-types.js.map\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    validate: function validate(definition, parent, transport) {\n        // TODO: Add validation for parent, transport, system\n        if (definition === null || (typeof definition === \"undefined\" ? \"undefined\" : _typeof(definition)) !== \"object\") {\n            throw new Error(\"Missing definition\");\n        }\n        if (parent === null || (typeof parent === \"undefined\" ? \"undefined\" : _typeof(parent)) !== \"object\") {\n            throw new Error(\"Missing parent\");\n        }\n        if (transport === null || (typeof transport === \"undefined\" ? \"undefined\" : _typeof(transport)) !== \"object\") {\n            throw new Error(\"Missing transport\");\n        }\n    }\n};\n//# sourceMappingURL=helpers.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"tick42-metrics\",\n\t\"version\": \"2.3.4\",\n\t\"description\": \"\",\n\t\"main\": \"dist/node/tick42-metrics.js\",\n\t\"browser\": \"dist/web/tick42-metrics.js\",\n\t\"types\": \"types/index.d.ts\",\n\t\"scripts\": {\n\t\t\"clean\": \"node ./build/scripts/clean.js\",\n\t\t\"pre:build\": \"npm run tslint && tsc && set NODE_ENV=development && npm run clean\",\n\t\t\"file-versionify\": \"node ./build/scripts/file-versionify.js\",\n\t\t\"tslint\": \"tslint -t codeFrame ./src/main.ts\",\n\t\t\"tslint:fix\": \"tslint -t codeFrame --fix ./src/main.ts\",\n\t\t\"watch\": \"onchange ./src/**/*.ts -- npm run build:dev\",\n\t\t\"build:dev\": \"npm run pre:build && set NODE_ENV=development && webpack && npm run file-versionify && npm run types\",\n\t\t\"build:prod\": \"npm run pre:build && set NODE_ENV=development && webpack && set NODE_ENV=production && webpack && npm run file-versionify && npm run types\",\n\t\t\"docs\": \"typedoc --options typedoc.json ./src\",\n\t\t\"types\": \"node ./build/scripts/copy-types.js\",\n\t\t\"prepublish\": \"npm run build:prod\",\n\t\t\"types:merged\": \"dts-generator --project ./ --out ./types/index.d.ts\"\n\t},\n\t\"author\": \"Tick42\",\n\t\"license\": \"ISC\",\n\t\"precommit\": \"tslint:fix\",\n\t\"devDependencies\": {\n\t\t\"@types/tick42-gateway-connection\": \"^2.2.4\",\n\t\t\"@types/tick42-logger\": \"^3.0.6\",\n\t\t\"babel-core\": \"^6.17.0\",\n\t\t\"babel-loader\": \"^6.4.1\",\n\t\t\"babel-plugin-add-module-exports\": \"^0.2.1\",\n\t\t\"babel-plugin-es6-promise\": \"^1.0.0\",\n\t\t\"babel-preset-es2015\": \"^6.16.0\",\n\t\t\"babel-preset-stage-2\": \"^6.22.0\",\n\t\t\"dts-generator\": \"^2.1.0\",\n\t\t\"es6-promise\": \"^4.1.0\",\n\t\t\"onchange\": \"3.*\",\n\t\t\"pre-commit\": \"^1.1.3\",\n\t\t\"shelljs\": \"^0.6.0\",\n\t\t\"tick42-webpack-config\": \"4.1.1\",\n\t\t\"tslint\": \"5.*\",\n\t\t\"typedoc\": \"^0.5.10\",\n\t\t\"typescript\": \"2.3.0\",\n\t\t\"webpack\": \"2.3.3\"\n\t}\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar serializer_1 = __webpack_require__(18);\nfunction default_1(connection, config) {\n    var DEFAULT_HEARTBEAT_INTERVAL = 3000;\n    if (!connection || (typeof connection === \"undefined\" ? \"undefined\" : _typeof(connection)) !== \"object\") {\n        throw new Error(\"Connection is required parameter\");\n    }\n    var _connection = connection;\n    var heartbeatInterval = config.heartbeatInterval || DEFAULT_HEARTBEAT_INTERVAL;\n    var send = function send(type, message) {\n        _connection.send(\"metrics\", type, message);\n    };\n    function sendFull(repo) {\n        if (!repo.root) {\n            return;\n        }\n        if (repo.root.subSystems.length === 0) {\n            return;\n        }\n        sendFullSystem(repo.root);\n    }\n    function sendFullSystem(system) {\n        createSystem(system);\n        system.subSystems.forEach(function (sub) {\n            sendFullSystem(sub);\n        });\n        system.metrics.forEach(function (metric) {\n            createMetric(metric);\n        });\n    }\n    function heartbeat(repo) {\n        send(\"HeartbeatMetrics\", {\n            publishingInterval: heartbeatInterval,\n            instance: repo.instance\n        });\n    }\n    function createSystem(system) {\n        if (system.parent !== undefined) {\n            send(\"CreateMetricSystem\", {\n                id: system.id,\n                instance: system.repo.instance,\n                definition: {\n                    name: system.name,\n                    description: system.description,\n                    path: system.path\n                }\n            });\n        }\n    }\n    function updateSystem(system, state) {\n        send(\"UpdateMetricSystem\", {\n            id: system.id,\n            instance: system.repo.instance,\n            state: state\n        });\n    }\n    function createMetric(metric) {\n        send(\"CreateMetric\", serializer_1.default(metric));\n    }\n    function updateMetric(metric) {\n        send(\"UpdateMetric\", serializer_1.default(metric));\n    }\n    function init(repo) {\n        heartbeat(repo);\n        _connection.on(\"metrics\", \"MetricsSnapshotRequest\", function (instanceInfo) {\n            if (instanceInfo.Instance !== repo.instance) {\n                return;\n            }\n            sendFull(repo);\n        });\n        setInterval(function () {\n            heartbeat(repo);\n        }, heartbeatInterval);\n    }\n    var me = {\n        createSystem: createSystem,\n        updateSystem: updateSystem,\n        createMetric: createMetric,\n        updateMetric: updateMetric,\n        init: init\n    };\n    return me;\n}\nexports.default = default_1;\n//# sourceMappingURL=gw1.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar es6_promise_1 = __webpack_require__(6);\nvar serializer_1 = __webpack_require__(19);\nfunction default_1(connection, config) {\n    if (!connection || (typeof connection === \"undefined\" ? \"undefined\" : _typeof(connection)) !== \"object\") {\n        throw new Error(\"Connection is required parameter\");\n    }\n    var joinPromise;\n    var session;\n    var init = function init(repo) {\n        var resolveReadyPromise;\n        joinPromise = new es6_promise_1.Promise(function (resolve) {\n            resolveReadyPromise = resolve;\n        });\n        session = connection.domain(\"metrics\", config.logger);\n        session.onJoined(function (reconnect) {\n            if (!reconnect) {\n                resolveReadyPromise();\n                resolveReadyPromise = undefined;\n            }\n            // Creating root state metric\n            var rootStateMetric = {\n                name: \"/State\",\n                type: \"object\",\n                composite: {\n                    Description: {\n                        type: \"string\",\n                        description: \"\"\n                    },\n                    Value: {\n                        type: \"number\",\n                        description: \"\"\n                    }\n                },\n                description: \"System state\",\n                context: {}\n            };\n            var defineRootMetricsMsg = {\n                type: \"define\",\n                metrics: [rootStateMetric]\n            };\n            session.send(defineRootMetricsMsg);\n            if (reconnect) {\n                replayRepo(repo);\n            }\n        });\n        session.join(config.identity);\n    };\n    var replayRepo = function replayRepo(repo) {\n        replaySystem(repo.root);\n    };\n    var replaySystem = function replaySystem(system) {\n        // replay system\n        createSystem(system);\n        // replay all metrics in the system\n        system.metrics.forEach(function (m) {\n            createMetric(m);\n        });\n        // replay all sub-systems\n        system.subSystems.forEach(function (ss) {\n            replaySystem(ss);\n        });\n    };\n    var createSystem = function createSystem(system) {\n        if (system.parent === undefined) {\n            return;\n        }\n        joinPromise.then(function () {\n            var metric = {\n                name: serializer_1.normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\n                type: \"object\",\n                composite: {\n                    Description: {\n                        type: \"string\",\n                        description: \"\"\n                    },\n                    Value: {\n                        type: \"number\",\n                        description: \"\"\n                    }\n                },\n                description: \"System state\",\n                context: {}\n            };\n            var createMetricsMsg = {\n                type: \"define\",\n                metrics: [metric]\n            };\n            session.send(createMetricsMsg);\n        });\n    };\n    var updateSystem = function updateSystem(system, state) {\n        joinPromise.then(function () {\n            var updateMetric = {\n                type: \"publish\",\n                values: [{\n                    name: serializer_1.normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\n                    value: {\n                        Description: state.description,\n                        Value: state.state\n                    },\n                    timestamp: Date.now()\n                }]\n            };\n            session.send(updateMetric);\n            var stateObj = serializer_1.composeMsgForRootStateMetric(system);\n            var rootMetric = {\n                type: \"publish\",\n                peer_id: connection.peerId,\n                values: [{\n                    name: \"/State\",\n                    value: {\n                        Description: stateObj.description,\n                        Value: stateObj.value\n                    },\n                    timestamp: Date.now()\n                }]\n            };\n            session.send(rootMetric);\n        });\n    };\n    var createMetric = function createMetric(metric) {\n        joinPromise.then(function () {\n            var m = serializer_1.serializeMetric(metric);\n            var createMetricsMsg = {\n                type: \"define\",\n                metrics: [m]\n            };\n            session.send(createMetricsMsg);\n            if (typeof metric.value !== \"undefined\") {\n                updateMetric(metric);\n            }\n        });\n    };\n    var updateMetric = function updateMetric(metric) {\n        joinPromise.then(function () {\n            var value = serializer_1.getMetricValueByType(metric);\n            var publishMetricsMsg = {\n                type: \"publish\",\n                values: [{\n                    name: serializer_1.normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\n                    value: value,\n                    timestamp: Date.now()\n                }]\n            };\n            session.send(publishMetricsMsg);\n        });\n    };\n    return {\n        init: init,\n        createSystem: createSystem,\n        updateSystem: updateSystem,\n        createMetric: createMetric,\n        updateMetric: updateMetric\n    };\n}\nexports.default = default_1;\n//# sourceMappingURL=gw3.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar system_1 = __webpack_require__(21);\nvar PackageJson = __webpack_require__(2);\nfunction repository(options, protocol) {\n    if (!options.identity) {\n        throw new Error(\"Identity missing from metrics configuration\");\n    }\n    if (!options.identity.service || typeof options.identity.service !== \"string\") {\n        throw new Error(\"Service missing or invalid in metrics identity configuration\");\n    }\n    if (!options.identity.system || typeof options.identity.system !== \"string\") {\n        throw new Error(\"System missing or invalid in metrics identity configuration\");\n    }\n    if (!options.identity.instance || typeof options.identity.instance !== \"string\") {\n        throw new Error(\"Instance missing or invalid in metrics identity configuration\");\n    }\n    var identity = options.identity;\n    var instance = options.identity.system + \"/\" + options.identity.service + \"/\" + options.identity.instance;\n    var version = PackageJson.version;\n    function _initSystemMetrics(rootSystem, useClickStream) {\n        // Create some system metrics\n        if (typeof navigator !== \"undefined\") {\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\n        }\n        if (useClickStream && typeof document !== \"undefined\") {\n            var clickStream_1 = rootSystem.subSystem(\"ClickStream\");\n            var documentClickHandler = function documentClickHandler(e) {\n                if (!e.target) {\n                    return;\n                }\n                var target = e.target;\n                clickStream_1.objectMetric(\"LastBrowserEvent\", {\n                    type: \"click\",\n                    timestamp: new Date(),\n                    target: {\n                        className: e.target ? target.className : \"\",\n                        id: target.id,\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\n                        href: target.href || \"\"\n                    }\n                });\n            };\n            // Create click stream record\n            clickStream_1.objectMetric(\"Page\", {\n                title: document.title,\n                page: window.location.href\n            });\n            if (document.addEventListener) {\n                document.addEventListener(\"click\", documentClickHandler);\n            } else {\n                // For IE versions prior to IE9, attachEvent method should be used to register the specified listener\n                // to the EventTarget it is called on, for others addEventListener should be used.\n                // (<any>document)\n                document.attachEvent(\"onclick\", documentClickHandler);\n            }\n        }\n    }\n    var me = {\n        identity: identity,\n        instance: instance,\n        version: version,\n        get root() {\n            return _root;\n        }\n    };\n    protocol.init(me);\n    var _root = system_1.default(\"\", me, protocol);\n    _initSystemMetrics(_root, options.clickStream || options.clickStream === undefined);\n    return me;\n}\nexports.default = repository;\n//# sourceMappingURL=repository.js.map\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process, global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var require;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.1.0\n */\n\n(function (global, factory) {\n  ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : global.ES6Promise = factory();\n})(undefined, function () {\n  'use strict';\n\n  function objectOrFunction(x) {\n    return typeof x === 'function' || (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null;\n  }\n\n  function isFunction(x) {\n    return typeof x === 'function';\n  }\n\n  var _isArray = undefined;\n  if (!Array.isArray) {\n    _isArray = function _isArray(x) {\n      return Object.prototype.toString.call(x) === '[object Array]';\n    };\n  } else {\n    _isArray = Array.isArray;\n  }\n\n  var isArray = _isArray;\n\n  var len = 0;\n  var vertxNext = undefined;\n  var customSchedulerFn = undefined;\n\n  var asap = function asap(callback, arg) {\n    queue[len] = callback;\n    queue[len + 1] = arg;\n    len += 2;\n    if (len === 2) {\n      // If len is 2, that means that we need to schedule an async flush.\n      // If additional callbacks are queued before the queue is flushed, they\n      // will be processed by this flush that we are scheduling.\n      if (customSchedulerFn) {\n        customSchedulerFn(flush);\n      } else {\n        scheduleFlush();\n      }\n    }\n  };\n\n  function setScheduler(scheduleFn) {\n    customSchedulerFn = scheduleFn;\n  }\n\n  function setAsap(asapFn) {\n    asap = asapFn;\n  }\n\n  var browserWindow = typeof window !== 'undefined' ? window : undefined;\n  var browserGlobal = browserWindow || {};\n  var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\n  var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n  // test for web worker but not in IE10\n  var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n  // node\n  function useNextTick() {\n    // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n    // see https://github.com/cujojs/when/issues/410 for details\n    return function () {\n      return process.nextTick(flush);\n    };\n  }\n\n  // vertx\n  function useVertxTimer() {\n    if (typeof vertxNext !== 'undefined') {\n      return function () {\n        vertxNext(flush);\n      };\n    }\n\n    return useSetTimeout();\n  }\n\n  function useMutationObserver() {\n    var iterations = 0;\n    var observer = new BrowserMutationObserver(flush);\n    var node = document.createTextNode('');\n    observer.observe(node, { characterData: true });\n\n    return function () {\n      node.data = iterations = ++iterations % 2;\n    };\n  }\n\n  // web worker\n  function useMessageChannel() {\n    var channel = new MessageChannel();\n    channel.port1.onmessage = flush;\n    return function () {\n      return channel.port2.postMessage(0);\n    };\n  }\n\n  function useSetTimeout() {\n    // Store setTimeout reference so es6-promise will be unaffected by\n    // other code modifying setTimeout (like sinon.useFakeTimers())\n    var globalSetTimeout = setTimeout;\n    return function () {\n      return globalSetTimeout(flush, 1);\n    };\n  }\n\n  var queue = new Array(1000);\n  function flush() {\n    for (var i = 0; i < len; i += 2) {\n      var callback = queue[i];\n      var arg = queue[i + 1];\n\n      callback(arg);\n\n      queue[i] = undefined;\n      queue[i + 1] = undefined;\n    }\n\n    len = 0;\n  }\n\n  function attemptVertx() {\n    try {\n      var r = require;\n      var vertx = __webpack_require__(22);\n      vertxNext = vertx.runOnLoop || vertx.runOnContext;\n      return useVertxTimer();\n    } catch (e) {\n      return useSetTimeout();\n    }\n  }\n\n  var scheduleFlush = undefined;\n  // Decide what async method to use to triggering processing of queued callbacks:\n  if (isNode) {\n    scheduleFlush = useNextTick();\n  } else if (BrowserMutationObserver) {\n    scheduleFlush = useMutationObserver();\n  } else if (isWorker) {\n    scheduleFlush = useMessageChannel();\n  } else if (browserWindow === undefined && \"function\" === 'function') {\n    scheduleFlush = attemptVertx();\n  } else {\n    scheduleFlush = useSetTimeout();\n  }\n\n  function then(onFulfillment, onRejection) {\n    var _arguments = arguments;\n\n    var parent = this;\n\n    var child = new this.constructor(noop);\n\n    if (child[PROMISE_ID] === undefined) {\n      makePromise(child);\n    }\n\n    var _state = parent._state;\n\n    if (_state) {\n      (function () {\n        var callback = _arguments[_state - 1];\n        asap(function () {\n          return invokeCallback(_state, child, callback, parent._result);\n        });\n      })();\n    } else {\n      subscribe(parent, child, onFulfillment, onRejection);\n    }\n\n    return child;\n  }\n\n  /**\n    `Promise.resolve` returns a promise that will become resolved with the\n    passed `value`. It is shorthand for the following:\n  \n    ```javascript\n    let promise = new Promise(function(resolve, reject){\n      resolve(1);\n    });\n  \n    promise.then(function(value){\n      // value === 1\n    });\n    ```\n  \n    Instead of writing the above, your code now simply becomes the following:\n  \n    ```javascript\n    let promise = Promise.resolve(1);\n  \n    promise.then(function(value){\n      // value === 1\n    });\n    ```\n  \n    @method resolve\n    @static\n    @param {Any} value value that the returned promise will be resolved with\n    Useful for tooling.\n    @return {Promise} a promise that will become fulfilled with the given\n    `value`\n  */\n  function resolve(object) {\n    /*jshint validthis:true */\n    var Constructor = this;\n\n    if (object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object.constructor === Constructor) {\n      return object;\n    }\n\n    var promise = new Constructor(noop);\n    _resolve(promise, object);\n    return promise;\n  }\n\n  var PROMISE_ID = Math.random().toString(36).substring(16);\n\n  function noop() {}\n\n  var PENDING = void 0;\n  var FULFILLED = 1;\n  var REJECTED = 2;\n\n  var GET_THEN_ERROR = new ErrorObject();\n\n  function selfFulfillment() {\n    return new TypeError(\"You cannot resolve a promise with itself\");\n  }\n\n  function cannotReturnOwn() {\n    return new TypeError('A promises callback cannot return that same promise.');\n  }\n\n  function getThen(promise) {\n    try {\n      return promise.then;\n    } catch (error) {\n      GET_THEN_ERROR.error = error;\n      return GET_THEN_ERROR;\n    }\n  }\n\n  function tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n    try {\n      then.call(value, fulfillmentHandler, rejectionHandler);\n    } catch (e) {\n      return e;\n    }\n  }\n\n  function handleForeignThenable(promise, thenable, then) {\n    asap(function (promise) {\n      var sealed = false;\n      var error = tryThen(then, thenable, function (value) {\n        if (sealed) {\n          return;\n        }\n        sealed = true;\n        if (thenable !== value) {\n          _resolve(promise, value);\n        } else {\n          fulfill(promise, value);\n        }\n      }, function (reason) {\n        if (sealed) {\n          return;\n        }\n        sealed = true;\n\n        _reject(promise, reason);\n      }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n      if (!sealed && error) {\n        sealed = true;\n        _reject(promise, error);\n      }\n    }, promise);\n  }\n\n  function handleOwnThenable(promise, thenable) {\n    if (thenable._state === FULFILLED) {\n      fulfill(promise, thenable._result);\n    } else if (thenable._state === REJECTED) {\n      _reject(promise, thenable._result);\n    } else {\n      subscribe(thenable, undefined, function (value) {\n        return _resolve(promise, value);\n      }, function (reason) {\n        return _reject(promise, reason);\n      });\n    }\n  }\n\n  function handleMaybeThenable(promise, maybeThenable, then$$) {\n    if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n      handleOwnThenable(promise, maybeThenable);\n    } else {\n      if (then$$ === GET_THEN_ERROR) {\n        _reject(promise, GET_THEN_ERROR.error);\n        GET_THEN_ERROR.error = null;\n      } else if (then$$ === undefined) {\n        fulfill(promise, maybeThenable);\n      } else if (isFunction(then$$)) {\n        handleForeignThenable(promise, maybeThenable, then$$);\n      } else {\n        fulfill(promise, maybeThenable);\n      }\n    }\n  }\n\n  function _resolve(promise, value) {\n    if (promise === value) {\n      _reject(promise, selfFulfillment());\n    } else if (objectOrFunction(value)) {\n      handleMaybeThenable(promise, value, getThen(value));\n    } else {\n      fulfill(promise, value);\n    }\n  }\n\n  function publishRejection(promise) {\n    if (promise._onerror) {\n      promise._onerror(promise._result);\n    }\n\n    publish(promise);\n  }\n\n  function fulfill(promise, value) {\n    if (promise._state !== PENDING) {\n      return;\n    }\n\n    promise._result = value;\n    promise._state = FULFILLED;\n\n    if (promise._subscribers.length !== 0) {\n      asap(publish, promise);\n    }\n  }\n\n  function _reject(promise, reason) {\n    if (promise._state !== PENDING) {\n      return;\n    }\n    promise._state = REJECTED;\n    promise._result = reason;\n\n    asap(publishRejection, promise);\n  }\n\n  function subscribe(parent, child, onFulfillment, onRejection) {\n    var _subscribers = parent._subscribers;\n    var length = _subscribers.length;\n\n    parent._onerror = null;\n\n    _subscribers[length] = child;\n    _subscribers[length + FULFILLED] = onFulfillment;\n    _subscribers[length + REJECTED] = onRejection;\n\n    if (length === 0 && parent._state) {\n      asap(publish, parent);\n    }\n  }\n\n  function publish(promise) {\n    var subscribers = promise._subscribers;\n    var settled = promise._state;\n\n    if (subscribers.length === 0) {\n      return;\n    }\n\n    var child = undefined,\n        callback = undefined,\n        detail = promise._result;\n\n    for (var i = 0; i < subscribers.length; i += 3) {\n      child = subscribers[i];\n      callback = subscribers[i + settled];\n\n      if (child) {\n        invokeCallback(settled, child, callback, detail);\n      } else {\n        callback(detail);\n      }\n    }\n\n    promise._subscribers.length = 0;\n  }\n\n  function ErrorObject() {\n    this.error = null;\n  }\n\n  var TRY_CATCH_ERROR = new ErrorObject();\n\n  function tryCatch(callback, detail) {\n    try {\n      return callback(detail);\n    } catch (e) {\n      TRY_CATCH_ERROR.error = e;\n      return TRY_CATCH_ERROR;\n    }\n  }\n\n  function invokeCallback(settled, promise, callback, detail) {\n    var hasCallback = isFunction(callback),\n        value = undefined,\n        error = undefined,\n        succeeded = undefined,\n        failed = undefined;\n\n    if (hasCallback) {\n      value = tryCatch(callback, detail);\n\n      if (value === TRY_CATCH_ERROR) {\n        failed = true;\n        error = value.error;\n        value.error = null;\n      } else {\n        succeeded = true;\n      }\n\n      if (promise === value) {\n        _reject(promise, cannotReturnOwn());\n        return;\n      }\n    } else {\n      value = detail;\n      succeeded = true;\n    }\n\n    if (promise._state !== PENDING) {\n      // noop\n    } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n  }\n\n  function initializePromise(promise, resolver) {\n    try {\n      resolver(function resolvePromise(value) {\n        _resolve(promise, value);\n      }, function rejectPromise(reason) {\n        _reject(promise, reason);\n      });\n    } catch (e) {\n      _reject(promise, e);\n    }\n  }\n\n  var id = 0;\n  function nextId() {\n    return id++;\n  }\n\n  function makePromise(promise) {\n    promise[PROMISE_ID] = id++;\n    promise._state = undefined;\n    promise._result = undefined;\n    promise._subscribers = [];\n  }\n\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this._input = input;\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate();\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      _reject(this.promise, validationError());\n    }\n  }\n\n  function validationError() {\n    return new Error('Array Methods must be provided an Array');\n  };\n\n  Enumerator.prototype._enumerate = function () {\n    var length = this.length;\n    var _input = this._input;\n\n    for (var i = 0; this._state === PENDING && i < length; i++) {\n      this._eachEntry(_input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function (entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$ = c.resolve;\n\n    if (resolve$$ === resolve) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$) {\n          return resolve$$(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function (state, i, value) {\n    var promise = this.promise;\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        _reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function (promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  /**\n    `Promise.all` accepts an array of promises, and returns a new promise which\n    is fulfilled with an array of fulfillment values for the passed promises, or\n    rejected with the reason of the first passed promise to be rejected. It casts all\n    elements of the passed iterable to promises as it runs this algorithm.\n  \n    Example:\n  \n    ```javascript\n    let promise1 = resolve(1);\n    let promise2 = resolve(2);\n    let promise3 = resolve(3);\n    let promises = [ promise1, promise2, promise3 ];\n  \n    Promise.all(promises).then(function(array){\n      // The array here would be [ 1, 2, 3 ];\n    });\n    ```\n  \n    If any of the `promises` given to `all` are rejected, the first promise\n    that is rejected will be given as an argument to the returned promises's\n    rejection handler. For example:\n  \n    Example:\n  \n    ```javascript\n    let promise1 = resolve(1);\n    let promise2 = reject(new Error(\"2\"));\n    let promise3 = reject(new Error(\"3\"));\n    let promises = [ promise1, promise2, promise3 ];\n  \n    Promise.all(promises).then(function(array){\n      // Code here never runs because there are rejected promises!\n    }, function(error) {\n      // error.message === \"2\"\n    });\n    ```\n  \n    @method all\n    @static\n    @param {Array} entries array of promises\n    @param {String} label optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise} promise that is fulfilled when all `promises` have been\n    fulfilled, or rejected if any of them become rejected.\n    @static\n  */\n  function all(entries) {\n    return new Enumerator(this, entries).promise;\n  }\n\n  /**\n    `Promise.race` returns a new promise which is settled in the same way as the\n    first passed promise to settle.\n  \n    Example:\n  \n    ```javascript\n    let promise1 = new Promise(function(resolve, reject){\n      setTimeout(function(){\n        resolve('promise 1');\n      }, 200);\n    });\n  \n    let promise2 = new Promise(function(resolve, reject){\n      setTimeout(function(){\n        resolve('promise 2');\n      }, 100);\n    });\n  \n    Promise.race([promise1, promise2]).then(function(result){\n      // result === 'promise 2' because it was resolved before promise1\n      // was resolved.\n    });\n    ```\n  \n    `Promise.race` is deterministic in that only the state of the first\n    settled promise matters. For example, even if other promises given to the\n    `promises` array argument are resolved, but the first settled promise has\n    become rejected before the other promises became fulfilled, the returned\n    promise will become rejected:\n  \n    ```javascript\n    let promise1 = new Promise(function(resolve, reject){\n      setTimeout(function(){\n        resolve('promise 1');\n      }, 200);\n    });\n  \n    let promise2 = new Promise(function(resolve, reject){\n      setTimeout(function(){\n        reject(new Error('promise 2'));\n      }, 100);\n    });\n  \n    Promise.race([promise1, promise2]).then(function(result){\n      // Code here never runs\n    }, function(reason){\n      // reason.message === 'promise 2' because promise 2 became rejected before\n      // promise 1 became fulfilled\n    });\n    ```\n  \n    An example real-world use case is implementing timeouts:\n  \n    ```javascript\n    Promise.race([ajax('foo.json'), timeout(5000)])\n    ```\n  \n    @method race\n    @static\n    @param {Array} promises array of promises to observe\n    Useful for tooling.\n    @return {Promise} a promise which settles in the same way as the first passed\n    promise to settle.\n  */\n  function race(entries) {\n    /*jshint validthis:true */\n    var Constructor = this;\n\n    if (!isArray(entries)) {\n      return new Constructor(function (_, reject) {\n        return reject(new TypeError('You must pass an array to race.'));\n      });\n    } else {\n      return new Constructor(function (resolve, reject) {\n        var length = entries.length;\n        for (var i = 0; i < length; i++) {\n          Constructor.resolve(entries[i]).then(resolve, reject);\n        }\n      });\n    }\n  }\n\n  /**\n    `Promise.reject` returns a promise rejected with the passed `reason`.\n    It is shorthand for the following:\n  \n    ```javascript\n    let promise = new Promise(function(resolve, reject){\n      reject(new Error('WHOOPS'));\n    });\n  \n    promise.then(function(value){\n      // Code here doesn't run because the promise is rejected!\n    }, function(reason){\n      // reason.message === 'WHOOPS'\n    });\n    ```\n  \n    Instead of writing the above, your code now simply becomes the following:\n  \n    ```javascript\n    let promise = Promise.reject(new Error('WHOOPS'));\n  \n    promise.then(function(value){\n      // Code here doesn't run because the promise is rejected!\n    }, function(reason){\n      // reason.message === 'WHOOPS'\n    });\n    ```\n  \n    @method reject\n    @static\n    @param {Any} reason value that the returned promise will be rejected with.\n    Useful for tooling.\n    @return {Promise} a promise rejected with the given `reason`.\n  */\n  function reject(reason) {\n    /*jshint validthis:true */\n    var Constructor = this;\n    var promise = new Constructor(noop);\n    _reject(promise, reason);\n    return promise;\n  }\n\n  function needsResolver() {\n    throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n  }\n\n  function needsNew() {\n    throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n  }\n\n  /**\n    Promise objects represent the eventual result of an asynchronous operation. The\n    primary way of interacting with a promise is through its `then` method, which\n    registers callbacks to receive either a promise's eventual value or the reason\n    why the promise cannot be fulfilled.\n  \n    Terminology\n    -----------\n  \n    - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n    - `thenable` is an object or function that defines a `then` method.\n    - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n    - `exception` is a value that is thrown using the throw statement.\n    - `reason` is a value that indicates why a promise was rejected.\n    - `settled` the final resting state of a promise, fulfilled or rejected.\n  \n    A promise can be in one of three states: pending, fulfilled, or rejected.\n  \n    Promises that are fulfilled have a fulfillment value and are in the fulfilled\n    state.  Promises that are rejected have a rejection reason and are in the\n    rejected state.  A fulfillment value is never a thenable.\n  \n    Promises can also be said to *resolve* a value.  If this value is also a\n    promise, then the original promise's settled state will match the value's\n    settled state.  So a promise that *resolves* a promise that rejects will\n    itself reject, and a promise that *resolves* a promise that fulfills will\n    itself fulfill.\n  \n  \n    Basic Usage:\n    ------------\n  \n    ```js\n    let promise = new Promise(function(resolve, reject) {\n      // on success\n      resolve(value);\n  \n      // on failure\n      reject(reason);\n    });\n  \n    promise.then(function(value) {\n      // on fulfillment\n    }, function(reason) {\n      // on rejection\n    });\n    ```\n  \n    Advanced Usage:\n    ---------------\n  \n    Promises shine when abstracting away asynchronous interactions such as\n    `XMLHttpRequest`s.\n  \n    ```js\n    function getJSON(url) {\n      return new Promise(function(resolve, reject){\n        let xhr = new XMLHttpRequest();\n  \n        xhr.open('GET', url);\n        xhr.onreadystatechange = handler;\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Accept', 'application/json');\n        xhr.send();\n  \n        function handler() {\n          if (this.readyState === this.DONE) {\n            if (this.status === 200) {\n              resolve(this.response);\n            } else {\n              reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n            }\n          }\n        };\n      });\n    }\n  \n    getJSON('/posts.json').then(function(json) {\n      // on fulfillment\n    }, function(reason) {\n      // on rejection\n    });\n    ```\n  \n    Unlike callbacks, promises are great composable primitives.\n  \n    ```js\n    Promise.all([\n      getJSON('/posts'),\n      getJSON('/comments')\n    ]).then(function(values){\n      values[0] // => postsJSON\n      values[1] // => commentsJSON\n  \n      return values;\n    });\n    ```\n  \n    @class Promise\n    @param {function} resolver\n    Useful for tooling.\n    @constructor\n  */\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  Promise.all = all;\n  Promise.race = race;\n  Promise.resolve = resolve;\n  Promise.reject = reject;\n  Promise._setScheduler = setScheduler;\n  Promise._setAsap = setAsap;\n  Promise._asap = asap;\n\n  Promise.prototype = {\n    constructor: Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n    \n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n    \n      Chaining\n      --------\n    \n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n    \n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n    \n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n    \n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n    \n      Assimilation\n      ------------\n    \n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n    \n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n    \n      If the assimliated promise rejects, then the downstream promise will also reject.\n    \n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n    \n      Simple Example\n      --------------\n    \n      Synchronous Example\n    \n      ```javascript\n      let result;\n    \n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n    \n      Errback Example\n    \n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n    \n      Promise Example;\n    \n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n    \n      Advanced Example\n      --------------\n    \n      Synchronous Example\n    \n      ```javascript\n      let author, books;\n    \n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n    \n      Errback Example\n    \n      ```js\n    \n      function foundBooks(books) {\n    \n      }\n    \n      function failure(reason) {\n    \n      }\n    \n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n    \n      Promise Example;\n    \n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n    \n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n    then: then,\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n    \n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n    \n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n    \n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n    \n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n    'catch': function _catch(onRejection) {\n      return this.then(null, onRejection);\n    }\n  };\n\n  function polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n      local = global;\n    } else if (typeof self !== 'undefined') {\n      local = self;\n    } else {\n      try {\n        local = Function('return this')();\n      } catch (e) {\n        throw new Error('polyfill failed because global object is unavailable in this environment');\n      }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n      var promiseToString = null;\n      try {\n        promiseToString = Object.prototype.toString.call(P.resolve());\n      } catch (e) {\n        // silently ignored\n      }\n\n      if (promiseToString === '[object Promise]' && !P.cast) {\n        return;\n      }\n    }\n\n    local.Promise = Promise;\n  }\n\n  // Strange compat..\n  Promise.polyfill = polyfill;\n  Promise.Promise = Promise;\n\n  return Promise;\n});\n//# sourceMappingURL=es6-promise.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(8)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while (len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n    return [];\n};\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n    return '/';\n};\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function () {\n    return 0;\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction addressMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.ADDRESS;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        update: update,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = addressMetric;\n//# sourceMappingURL=address.js.map\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction countMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || 0;\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.COUNT;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    function incrementBy(num) {\n        update(_value + num);\n    }\n    function increment() {\n        incrementBy(1);\n    }\n    function decrement() {\n        incrementBy(-1);\n    }\n    function decrementBy(num) {\n        incrementBy(num * -1);\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get path() {\n            return _path;\n        },\n        get value() {\n            return _value;\n        },\n        update: update,\n        getValueType: getValueType,\n        incrementBy: incrementBy,\n        increment: increment,\n        decrement: decrement,\n        decrementBy: decrementBy\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = countMetric;\n//# sourceMappingURL=count.js.map\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction numberMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _path = parent.path.slice(0);\n    var _value = value || 0;\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.NUMBER;\n    _path.push(parent.name);\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    function incrementBy(num) {\n        update(_value + num);\n    }\n    function increment() {\n        incrementBy(1);\n    }\n    function decrement() {\n        incrementBy(-1);\n    }\n    function decrementBy(num) {\n        incrementBy(num * -1);\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        get value() {\n            return _value;\n        },\n        type: type,\n        get path() {\n            return _path;\n        },\n        update: update,\n        getValueType: getValueType,\n        incrementBy: incrementBy,\n        increment: increment,\n        decrement: decrement,\n        decrementBy: decrementBy\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = numberMetric;\n//# sourceMappingURL=number.js.map\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metric_types_1 = __webpack_require__(0);\nvar helpers_1 = __webpack_require__(1);\nfunction objectMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.OBJECT;\n    function update(newValue) {\n        mergeValues(newValue);\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    function mergeValues(values) {\n        return Object.keys(_value).forEach(function (k) {\n            if (typeof values[k] !== \"undefined\") {\n                _value[k] = values[k];\n            }\n        });\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        update: update,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = objectMetric;\n//# sourceMappingURL=object.js.map\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction rateMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.RATE;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        update: update,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = rateMetric;\n//# sourceMappingURL=rate.js.map\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction statisticsMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.STATISTICS;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        update: update,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = statisticsMetric;\n//# sourceMappingURL=statistics.js.map\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction stringMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.STRING;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        type: type,\n        update: update,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = stringMetric;\n//# sourceMappingURL=string.js.map\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction timespanMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.TIMESPAN;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function start() {\n        update(true);\n    }\n    function stop() {\n        update(false);\n    }\n    function getValueType() {\n        return undefined;\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        update: update,\n        start: start,\n        stop: stop,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = timespanMetric;\n//# sourceMappingURL=timespan.js.map\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction timestampMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.TIMESTAMP;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function now() {\n        update(new Date());\n    }\n    function getValueType() {\n        return undefined;\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        update: update,\n        now: now,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = timestampMetric;\n//# sourceMappingURL=timestamp.js.map\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metric_types_1 = __webpack_require__(0);\nfunction metricToMessage(metric) {\n    var definition = getMetricDefinition(metric.name, metric.value, metric.path, metric.type, metric.description, metric.period, metric.resolution);\n    function getMetricDefinition(name, value, path, type, description, period, resolution) {\n        var _definition = {\n            name: name,\n            description: description,\n            type: type ? type : getTypeFromValue(value),\n            path: path,\n            resolution: resolution,\n            period: period\n        };\n        if (_definition.type === metric_types_1.default.OBJECT) {\n            _definition.Composite = Object.keys(value).reduce(function (arr, key) {\n                var val = value[key];\n                arr.push(getMetricDefinition(key, val, path));\n                return arr;\n            }, []);\n        }\n        return _definition;\n    }\n    function serializeValue(value, _metric) {\n        if (value && value.constructor === Date) {\n            return {\n                value: {\n                    type: _valueTypes.indexOf(\"date\"),\n                    value: value.valueOf(),\n                    isArray: false\n                }\n            };\n        }\n        if ((typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) === \"object\") {\n            return {\n                CompositeValue: Object.keys(value).reduce(function (arr, key) {\n                    var val = serializeValue(value[key]);\n                    val.InnerMetricName = key;\n                    arr.push(val);\n                    return arr;\n                }, [])\n            };\n        }\n        var valueType = _metric ? _metric.getValueType() : undefined;\n        valueType = valueType || _valueTypes.indexOf(typeof value === \"undefined\" ? \"undefined\" : _typeof(value));\n        return {\n            value: {\n                type: valueType,\n                value: value,\n                isArray: false\n            }\n        };\n    }\n    function getTypeFromValue(value) {\n        var typeAsString = value.constructor === Date ? \"timestamp\" : typeof value === \"undefined\" ? \"undefined\" : _typeof(value);\n        switch (typeAsString) {\n            case \"string\":\n                return metric_types_1.default.STRING;\n            case \"number\":\n                return metric_types_1.default.NUMBER;\n            case \"timestamp\":\n                return metric_types_1.default.TIMESTAMP;\n            case \"object\":\n                return metric_types_1.default.OBJECT;\n        }\n        return 0;\n    }\n    var _valueTypes = [\"boolean\", \"int\", \"number\", \"long\", \"string\", \"date\", \"object\"];\n    return {\n        id: metric.id,\n        instance: metric.repo.instance,\n        definition: definition,\n        value: serializeValue(metric.value, metric)\n    };\n}\nexports.default = metricToMessage;\n//# sourceMappingURL=serializer.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metric_types_1 = __webpack_require__(0);\nfunction getMetricTypeByValue(metric) {\n    if (metric.value.constructor === Date || metric.type === metric_types_1.default.TIMESPAN || metric.type === metric_types_1.default.TIMESTAMP) {\n        return \"timestamp\";\n    } else if (typeof metric.value === \"number\") {\n        return \"number\";\n    } else if (typeof metric.value === \"string\" || metric.type === metric_types_1.default.RATE) {\n        return \"string\";\n    } else if (_typeof(metric.value) === \"object\") {\n        return \"object\";\n    }\n}\nfunction getTypeByValue(value) {\n    if (value.constructor === Date) {\n        return \"timestamp\";\n    } else if (typeof value === \"number\") {\n        return \"number\";\n    } else if (typeof value === \"string\") {\n        return \"string\";\n    } else if ((typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) === \"object\") {\n        return \"object\";\n    } else {\n        return \"string\";\n    }\n}\nfunction serializeMetric(metric) {\n    var serializedMetrics = {};\n    var type = getMetricTypeByValue(metric);\n    if (type === \"object\") {\n        var values = Object.keys(metric.value).reduce(function (memo, key) {\n            var innerType = getTypeByValue(metric.value[key]);\n            if (innerType === \"object\") {\n                var composite = defineNestedComposite(metric.value[key]);\n                memo[key] = {\n                    type: \"object\",\n                    description: \"\",\n                    context: {},\n                    composite: composite\n                };\n            } else {\n                memo[key] = {\n                    type: innerType,\n                    description: \"\",\n                    context: {}\n                };\n            }\n            return memo;\n        }, {});\n        serializedMetrics.composite = values;\n    }\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\n    serializedMetrics.type = type;\n    serializedMetrics.description = metric.description;\n    serializedMetrics.context = {};\n    return serializedMetrics;\n}\nexports.serializeMetric = serializeMetric;\nfunction defineNestedComposite(values) {\n    return Object.keys(values).reduce(function (memo, key) {\n        var type = getTypeByValue(values[key]);\n        if (type === \"object\") {\n            memo[key] = {\n                type: \"object\",\n                description: \"\",\n                context: {},\n                composite: defineNestedComposite(values[key])\n            };\n        } else {\n            memo[key] = {\n                type: type,\n                description: \"\",\n                context: {}\n            };\n        }\n        return memo;\n    }, {});\n}\nfunction normalizeMetricName(name) {\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\n        return \"/\" + name;\n    } else {\n        return name;\n    }\n}\nexports.normalizeMetricName = normalizeMetricName;\nfunction getMetricValueByType(metric) {\n    var type = getMetricTypeByValue(metric);\n    if (type === \"timestamp\") {\n        return Date.now();\n    } else {\n        return publishNestedComposite(metric.value);\n    }\n}\nexports.getMetricValueByType = getMetricValueByType;\nfunction publishNestedComposite(values) {\n    if ((typeof values === \"undefined\" ? \"undefined\" : _typeof(values)) !== \"object\") {\n        return values;\n    }\n    return Object.keys(values).reduce(function (memo, key) {\n        var value = values[key];\n        if ((typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) === \"object\" && value.constructor !== Date) {\n            memo[key] = publishNestedComposite(value);\n        } else if (value.constructor === Date) {\n            memo[key] = new Date(value).getTime();\n        } else if (value.constructor === Boolean) {\n            memo[key] = value.toString();\n        } else {\n            memo[key] = value;\n        }\n        return memo;\n    }, {});\n}\nfunction flatten(arr) {\n    return arr.reduce(function (flat, toFlatten) {\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n    }, []);\n}\nfunction getHighestState(arr) {\n    return arr.sort(function (a, b) {\n        return b.state - a.state;\n    })[0];\n}\nfunction aggregateDescription(arr) {\n    var msg = \"\";\n    arr.forEach(function (m, idx, a) {\n        var path = m.path.join(\".\");\n        if (idx === a.length - 1) {\n            msg += path + \".\" + m.name + \": \" + m.description;\n        } else {\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\n        }\n    });\n    if (msg.length > 100) {\n        return msg.slice(0, 100) + \"...\";\n    } else {\n        return msg;\n    }\n}\nfunction composeMsgForRootStateMetric(system) {\n    var aggregatedState = system.root.getAggregateState();\n    var merged = flatten(aggregatedState);\n    var highestState = getHighestState(merged);\n    var aggregateDesc = aggregateDescription(merged);\n    return {\n        description: aggregateDesc,\n        value: highestState.state\n    };\n}\nexports.composeMsgForRootStateMetric = composeMsgForRootStateMetric;\n//# sourceMappingURL=serializer.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gw1_1 = __webpack_require__(3);\nvar gw3_1 = __webpack_require__(4);\nvar repository_1 = __webpack_require__(5);\nvar version = __webpack_require__(2).version;\nvar windowAsAny = typeof window === \"undefined\" ? {} : window;\nwindowAsAny.tick42 = windowAsAny.tick42 || {};\nexports.default = function (settings) {\n    var options = {\n        connection: settings.connection,\n        identity: settings.identity,\n        logger: settings.logger,\n        heartbeatInterval: settings.heartbeatInterval,\n        settings: {},\n        clickStream: settings.clickStream\n    };\n    if (!options.connection || _typeof(options.connection) !== \"object\") {\n        throw new Error(\"Connection is required parameter\");\n    }\n    var _protocol;\n    if (options.connection.protocolVersion === 3) {\n        _protocol = gw3_1.default(options.connection, settings);\n    } else {\n        _protocol = gw1_1.default(options.connection, settings);\n    }\n    var repo = repository_1.default(options, _protocol);\n    var rootSystem = repo.root;\n    rootSystem.version = version;\n    return rootSystem; // System\n};\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar address_1 = __webpack_require__(9);\nvar count_1 = __webpack_require__(10);\nvar number_1 = __webpack_require__(11);\nvar object_1 = __webpack_require__(12);\nvar rate_1 = __webpack_require__(13);\nvar statistics_1 = __webpack_require__(14);\nvar string_1 = __webpack_require__(15);\nvar timespan_1 = __webpack_require__(16);\nvar timestamp_1 = __webpack_require__(17);\nvar metric_types_1 = __webpack_require__(0);\nfunction system(name, repo, protocol, parent, description) {\n    // Validation\n    // if (!name) throw new Error(\"Name is required. \");\n    if (!repo) {\n        throw new Error(\"Repository is required\");\n    }\n    if (!protocol) {\n        throw new Error(\"Transport is required\");\n    }\n    var _transport = protocol;\n    var _name = name;\n    var _description = description || \"\";\n    var _repo = repo;\n    var _parent = parent;\n    var _path = _buildPath(parent);\n    var _state = {};\n    var id = _arrayToString(_path, \"/\") + name;\n    var identity = repo.identity;\n    var root = repo.root;\n    var _subSystems = [];\n    var _metrics = [];\n    function subSystem(nameSystem, descriptionSystem) {\n        if (!nameSystem || nameSystem.length === 0) {\n            throw new Error(\"name is required\");\n        }\n        var match = _subSystems.filter(function (s) {\n            return s.name === nameSystem;\n        });\n        if (match.length > 0) {\n            return match[0];\n        }\n        var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);\n        _subSystems.push(_system);\n        return _system;\n    }\n    function setState(state, stateDescription) {\n        _state = { state: state, description: stateDescription };\n        _transport.updateSystem(me, _state);\n    }\n    function stringMetric(definition, value) {\n        return _getOrCreateMetric.call(me, definition, metric_types_1.default.STRING, value, function (metricDef) {\n            return string_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function numberMetric(definition, value) {\n        return _getOrCreateMetric.call(me, definition, metric_types_1.default.NUMBER, value, function (metricDef) {\n            return number_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function countMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.COUNT, value, function (metricDef) {\n            return count_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function addressMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.ADDRESS, value, function (metricDef) {\n            return address_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function objectMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.OBJECT, value, function (metricDef) {\n            return object_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function timespanMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.TIMESPAN, value, function (metricDef) {\n            return timespan_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function timestampMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.TIMESTAMP, value, function (metricDef) {\n            return timestamp_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function rateMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.RATE, value, function (metricDef) {\n            return rate_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function statisticsMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.STATISTICS, value, function (metricDef) {\n            return statistics_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function _unionToMetricDef(def) {\n        var metricDefinition = {};\n        // NOTE: Handle undefined\n        if (typeof def === \"string\") {\n            metricDefinition.name = def;\n        } else {\n            metricDefinition = def;\n        }\n        if (metricDefinition.name === undefined) {\n            throw new Error(\"Metric name is required\");\n        }\n        return metricDefinition;\n    }\n    function _getOrCreateMetric(definition, expectedType, value, createMetric) {\n        var metricDefinition = _unionToMetricDef(definition);\n        var matching = _metrics.filter(function (metric) {\n            return metric.name === metricDefinition.name;\n        });\n        if (matching.length > 0) {\n            var existing = matching[0];\n            if (existing.type !== expectedType) {\n                // NOTE: Extend the error with the already defined metric?\n                throw new Error(\"A metric named \" + metricDefinition.name + \" is already defined with different type.\");\n            }\n            if (typeof value !== \"undefined\") {\n                existing.update(value);\n            }\n            return existing;\n        }\n        var metric = createMetric(metricDefinition);\n        _metrics.push(metric);\n        return metric;\n    }\n    function _buildPath(system) {\n        if (!system || !system.parent) {\n            return [];\n        }\n        var path = _buildPath(system.parent);\n        path.push(system.name);\n        return path;\n    }\n    function _arrayToString(path, separator) {\n        return path && path.length > 0 ? path.join(separator) : \"\";\n    }\n    function getAggregateState() {\n        var aggState = [];\n        if (Object.keys(_state).length > 0) {\n            aggState.push({\n                name: _name,\n                path: _path,\n                state: _state.state,\n                description: _state.description\n            });\n        }\n        _subSystems.forEach(function (subSystem) {\n            var result = subSystem.getAggregateState();\n            if (result.length > 0) {\n                aggState.push(result);\n            }\n        });\n        return aggState;\n    }\n    var me = {\n        get name() {\n            return _name;\n        },\n        get description() {\n            return _description;\n        },\n        get repo() {\n            return _repo;\n        },\n        get parent() {\n            return _parent;\n        },\n        path: _path,\n        id: id,\n        identity: identity,\n        root: root,\n        get subSystems() {\n            return _subSystems;\n        },\n        get metrics() {\n            return _metrics;\n        },\n        subSystem: subSystem,\n        getState: function getState() {\n            return _state;\n        },\n        setState: setState,\n        stringMetric: stringMetric,\n        statisticsMetric: statisticsMetric,\n        rateMetric: rateMetric,\n        timestampMetric: timestampMetric,\n        timespanMetric: timespanMetric,\n        objectMetric: objectMetric,\n        addressMetric: addressMetric,\n        countMetric: countMetric,\n        numberMetric: numberMetric,\n        getAggregateState: getAggregateState\n    };\n    _transport.createSystem(me);\n    return me;\n}\nexports.default = system;\n//# sourceMappingURL=system.js.map\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=tick42-metrics.js.map\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar shortid_1 = __webpack_require__(7);\r\nvar pjson = __webpack_require__(10);\r\nfunction default_1(configuration, ext) {\r\n    var hc;\r\n    if (typeof window !== \"undefined\") {\r\n        hc = window.htmlContainer;\r\n        global = global || window; // ... Safari WebView\r\n    }\r\n    global = global || {}; // ... a bit paranoid\r\n    // when searching for a configuration value check the following chain until the value is resolved:\r\n    //\r\n    // 1. global.GLUE_CONFIG            - a way to override user preferences. Use case is GLUE Mobile\r\n    // 2. userConfig                    - user configuration\r\n    // 3. global.GLUE_DEFAULT_CONFIG    - a way to dynamically override hard coded defaults\r\n    // 4. hardDefaults                  - glue.js hard coded defaults\r\n    var masterConfig = global.GLUE_CONFIG || {};\r\n    var dynamicDefaults = global.GLUE_DEFAULT_CONFIG || {};\r\n    var hardDefaults = getHardDefaults();\r\n    function getMetrics() {\r\n        return {\r\n            identity: {\r\n                system: getConfigProp(\"metrics\", \"system\"),\r\n                service: getConfigProp(\"metrics\", \"service\"),\r\n                instance: getConfigProp(\"metrics\", \"instance\")\r\n            }\r\n        };\r\n    }\r\n    function getGateway() {\r\n        function detectNode() {\r\n            // Only Node.JS has a process variable that is of [[Class]] process\r\n            try {\r\n                return Object.prototype.toString.call(global.process) === \"[object process]\";\r\n            }\r\n            catch (e) {\r\n                // catch all\r\n            }\r\n            return false;\r\n        }\r\n        var gw = hc === undefined;\r\n        if (gw) {\r\n            var gwConfig = getConfigProp(\"gateway\");\r\n            var protocolVersion = getConfigProp(\"gateway\", \"protocolVersion\");\r\n            var reconnectInterval = getConfigProp(\"gateway\", \"reconnectInterval\");\r\n            var ws = gwConfig.ws;\r\n            var http = gwConfig.http;\r\n            var inproc = gwConfig.inproc;\r\n            // if not we will select endpoint for him\r\n            if (!ws && !http && !inproc) {\r\n                if (detectNode() || (\"WebSocket\" in window && window.WebSocket.CLOSING === 2)) {\r\n                    // if in node, or we have WebSockets use ws\r\n                    ws = getConfigProp(\"gateway\", \"ws\");\r\n                }\r\n                else {\r\n                    // fallback to http\r\n                    http = getConfigProp(\"gateway\", \"http\");\r\n                }\r\n            }\r\n            return {\r\n                gwTokenProvider: gwConfig.gwTokenProvider,\r\n                identity: {\r\n                    application: getApplication(),\r\n                },\r\n                reconnectInterval: reconnectInterval,\r\n                ws: ws,\r\n                http: http,\r\n                gw: inproc,\r\n                protocolVersion: protocolVersion,\r\n            };\r\n        }\r\n        return {};\r\n    }\r\n    function getLogger() {\r\n        return getConfigProp(\"logger\");\r\n    }\r\n    function getAgm() {\r\n        return {\r\n            instance: {\r\n                application: getApplication()\r\n            }\r\n        };\r\n    }\r\n    function getApplication() {\r\n        return getConfigProp(\"application\");\r\n    }\r\n    function getAuth() {\r\n        return getConfigProp(\"auth\");\r\n    }\r\n    function getHardDefaults() {\r\n        function getMetricsDefaults(uid) {\r\n            var documentTitle = typeof document !== \"undefined\" ? document.title : \"unknown\";\r\n            // check for empty titles\r\n            documentTitle = documentTitle || \"none\";\r\n            if (typeof hc === \"undefined\") {\r\n                return {\r\n                    system: \"Connect.Browser\",\r\n                    service: configuration.application || documentTitle,\r\n                    instance: \"~\" + uid\r\n                };\r\n            }\r\n            if (typeof hc.metricsFacade.getIdentity !== \"undefined\") {\r\n                var identity = hc.metricsFacade.getIdentity();\r\n                return {\r\n                    system: identity.system,\r\n                    service: identity.service,\r\n                    instance: identity.instance\r\n                };\r\n            }\r\n            // backward compatibility for HC <= 1.60\r\n            return {\r\n                system: \"HtmlContainer.\" + hc.containerName,\r\n                service: \"JS.\" + hc.browserWindowName,\r\n                instance: \"~\" + hc.machineName\r\n            };\r\n        }\r\n        function getGatewayDefaults() {\r\n            function isSecureConnection(protocolVersion) {\r\n                // GW2 and lower in JPM don't have SSL certificates\r\n                if (protocolVersion && protocolVersion <= 2) {\r\n                    return false;\r\n                }\r\n                if (typeof window !== \"undefined\" && window.location) {\r\n                    return window.location.protocol !== \"http:\";\r\n                }\r\n                // Defaults to secure for node env.\r\n                return true;\r\n            }\r\n            var defaultProtocol = 1;\r\n            var gatewayURL = \"localhost:22037\";\r\n            var isSSL = isSecureConnection(defaultProtocol);\r\n            var defaultWs = isSSL ? \"wss://\" + gatewayURL : \"ws://\" + gatewayURL;\r\n            var defaultHttp = isSSL ? \"https://\" + gatewayURL : \"http://\" + gatewayURL;\r\n            return {\r\n                ws: defaultWs,\r\n                http: defaultHttp,\r\n                protocolVersion: defaultProtocol,\r\n                reconnectInterval: 1000\r\n            };\r\n        }\r\n        function getDefaultApplicationName(uid) {\r\n            if (hc) {\r\n                return hc.containerName + \".\" + hc.browserWindowName;\r\n            }\r\n            if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n                return (window.agm_application || document.title) + uid;\r\n            }\r\n            else {\r\n                return \"NodeJS\" + uid;\r\n            }\r\n        }\r\n        var uid = shortid_1.generate();\r\n        return {\r\n            application: getDefaultApplicationName(uid),\r\n            metrics: getMetricsDefaults(uid),\r\n            agm: {},\r\n            gateway: getGatewayDefaults(),\r\n            logger: {\r\n                publish: \"off\",\r\n                console: \"info\",\r\n                metrics: \"off\",\r\n            }\r\n        };\r\n    }\r\n    function getConfigProp(prop1, prop2) {\r\n        var masterConfigProp1 = masterConfig[prop1];\r\n        var userProp1 = configuration[prop1];\r\n        var dynamicDefaultsProp1 = dynamicDefaults[prop1];\r\n        var hardDefaultsProp1 = hardDefaults[prop1];\r\n        if (prop2) {\r\n            if (masterConfigProp1 && masterConfigProp1[prop2] !== undefined) {\r\n                return masterConfig[prop2];\r\n            }\r\n            if (userProp1 && userProp1[prop2] !== undefined) {\r\n                return userProp1[prop2];\r\n            }\r\n            if (dynamicDefaultsProp1 && dynamicDefaultsProp1[prop2] !== undefined) {\r\n                return dynamicDefaultsProp1[prop2];\r\n            }\r\n            if (hardDefaultsProp1 && hardDefaultsProp1[prop2] !== undefined) {\r\n                return hardDefaultsProp1[prop2];\r\n            }\r\n        }\r\n        else {\r\n            if (masterConfigProp1 !== undefined) {\r\n                return masterConfigProp1;\r\n            }\r\n            if (userProp1 !== undefined) {\r\n                return userProp1;\r\n            }\r\n            if (dynamicDefaultsProp1 !== undefined) {\r\n                return dynamicDefaultsProp1;\r\n            }\r\n            if (hardDefaultsProp1 !== undefined) {\r\n                return hardDefaultsProp1;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    return {\r\n        application: getApplication(),\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection: getGateway(),\r\n        metrics: getMetrics(),\r\n        agm: getAgm(),\r\n        version: ext.version || pjson.version,\r\n        libs: ext.libs\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=config.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection = {\r\n    protocolVersion: -1,\r\n    version: \"-1\",\r\n    send: function (product, type, message, id) {\r\n    },\r\n    on: function (product, type, messageHandler) {\r\n        return { type: \"1\", id: 1 };\r\n    },\r\n    off: function (info) {\r\n    },\r\n    login: function (message) {\r\n        return undefined;\r\n    },\r\n    logout: function () {\r\n    },\r\n    loggedIn: function (callback) {\r\n    },\r\n    connected: function (callback) {\r\n    },\r\n    disconnected: function (callback) {\r\n    },\r\n};\r\nexports.default = connection;\r\n//# sourceMappingURL=dummyConnection.js.map\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar glue_1 = __webpack_require__(8);\r\nif (typeof window !== \"undefined\") {\r\n    window.GlueCore = glue_1.default;\r\n}\r\n// add default library for ES6 modules\r\nglue_1.default.default = glue_1.default;\r\nmodule.exports = glue_1.default;\r\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction default_1() {\r\n    function now() {\r\n        return new Date().getTime();\r\n    }\r\n    var startTime = now();\r\n    var endTime;\r\n    var period;\r\n    function stop() {\r\n        endTime = now();\r\n        period = now() - startTime;\r\n        return period;\r\n    }\r\n    return {\r\n        get startTime() {\r\n            return startTime;\r\n        },\r\n        get endTime() {\r\n            return endTime;\r\n        },\r\n        get period() {\r\n            return period;\r\n        },\r\n        stop: stop\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=timer.js.map\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=tick42-glue-core.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Model = __webpack_require__(0);\nvar Account = __webpack_require__(16);\nvar Contact = __webpack_require__(1);\n\nvar AccountContactList = Model({\n  account: Account,\n  contacts: Model.Array(Contact)\n});\n\nmodule.exports = function AccountController(agm, config) {\n  return {\n    create: function create(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var account = new Account(args.account);\n        agm.invoke('T42.CRM.CreateAccount', { account: args.account }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    },\n    resolve: function resolve(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var account = new Account(args.account);\n        agm.invoke('T42.CRM.ResolveAccount', { account: args.account }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    },\n    update: function update(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var account = new Account(args.account);\n        var autoCreate = args.autoCreate;\n        agm.invoke('T42.CRM.UpdateAccount', { account: args.account, autoCreate: autoCreate }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    },\n    delete: function _delete(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var account = new Account(args.account);\n        agm.invoke('T42.CRM.DeleteAccount', { account: args.account }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    },\n    get: function get(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var account = new Account(args.account);\n        agm.invoke('T42.CRM.GetAccount', { account: args.account }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    },\n    sync: function sync(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var account = new Account(args.account);\n        agm.invoke('T42.CRM.SyncAccount', { account: args.account }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    },\n    resolveContactList: function resolveContactList(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var contactList = new AccountContactList({ account: args.account, contacts: args.contacts });\n        agm.invoke('T42.CRM.ResolveAccountContactList', { account: args.account, contacts: args.contacts }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    }\n  };\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Contact = __webpack_require__(1);\nvar Id = __webpack_require__(1);\nvar Model = __webpack_require__(0);\n\nvar Call = Model({\n  contact: Contact,\n  participants: [Model.Array(Contact)],\n  subject: [String],\n  dueDate: [String],\n  description: [String]\n});\n\nmodule.exports = function ContactController(agm, config) {\n  return {\n    create: function create(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var contact = new Contact(args.contact);\n        agm.invoke('T42.CRM.CreateContact', { contact: args.contact }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    },\n    resolve: function resolve(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var contact = new Contact(args.contact);\n        agm.invoke('T42.CRM.ResolveContact', { contact: args.contact }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    },\n    update: function update(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var contact = new Contact(args.contact);\n        var autoCreate = args.autoCreate;\n        agm.invoke('T42.CRM.UpdateContact', { contact: args.contact, autoCreate: autoCreate }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    },\n    delete: function _delete(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var contact = new Contact(args.contact);\n        agm.invoke('T42.CRM.DeleteContact', { contact: args.contact }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    },\n    get: function get(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var contact = new Contact(args.contact);\n        agm.invoke('T42.CRM.GetContact', { contact: args.contact }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    },\n    sync: function sync(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var contact = new Contact(args.contact);\n        agm.invoke('T42.CRM.SyncContact', { contact: args.contact }, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    },\n    logCall: function logCall(args) {\n      args = args || {};\n      return new Promise(function (resolve, reject) {\n        var call = new Call(args);\n        agm.invoke('T42.CRM.LogContactCall', call, 'all', { method_response_timeout: config.timeout }, resolve, reject);\n      });\n    }\n  };\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nvar definition = {\n  \"name\": \"T42.Account\",\n  \"properties\": [{\n    \"name\": \"ids\",\n    \"displayName\": \"IDs\",\n    \"type\": \"Composite\",\n    \"isArray\": true,\n    \"properties\": [{\n      \"name\": \"nativeId\",\n      \"type\": \"String\",\n      \"displayName\": \"Native ID\",\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"systemName\",\n      \"type\": \"String\",\n      \"displayName\": \"System Name\",\n      \"searchType\": \"Exact\"\n    }]\n  }, {\n    \"name\": \"displayName\",\n    \"displayName\": \"Display Name\",\n    \"type\": \"String\",\n    \"searchType\": \"Partial\",\n    \"description\": \"Display Name\"\n  }, {\n    \"name\": \"owner\",\n    \"displayName\": \"Owner\",\n    \"type\": \"Composite\",\n    \"properties\": [{\n      \"name\": \"nativeId\",\n      \"type\": \"String\",\n      \"displayName\": \"Native ID\",\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"systemName\",\n      \"type\": \"String\",\n      \"displayName\": \"System Name\",\n      \"searchType\": \"Exact\"\n    }]\n  }, {\n    \"name\": \"subsidiaries\",\n    \"displayName\": \"Subsidiaries\",\n    \"type\": \"Composite\",\n    \"isArray\": true,\n    \"properties\": [{\n      \"name\": \"nativeId\",\n      \"type\": \"String\",\n      \"displayName\": \"Native ID\",\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"systemName\",\n      \"type\": \"String\",\n      \"displayName\": \"System Name\",\n      \"searchType\": \"Exact\"\n    }]\n  }, {\n    \"name\": \"name\",\n    \"displayName\": \"Name\",\n    \"type\": \"String\",\n    \"searchType\": \"Partial\"\n  }, {\n    \"name\": \"status\",\n    \"displayName\": \"Status\",\n    \"type\": \"String\",\n    \"searchType\": \"Exact\",\n    \"description\": \"Status\"\n  }, {\n    \"name\": \"contacts\",\n    \"displayName\": \"Contacts\",\n    \"type\": \"Composite\",\n    \"isArray\": true,\n    \"properties\": [{\n      \"name\": \"nativeId\",\n      \"type\": \"String\",\n      \"displayName\": \"Native ID\",\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"systemName\",\n      \"type\": \"String\",\n      \"displayName\": \"System Name\",\n      \"searchType\": \"Exact\"\n    }]\n  }, {\n    \"name\": \"addresses\",\n    \"displayName\": \"Addresses\",\n    \"type\": \"Composite\",\n    \"isArray\": true,\n    \"properties\": [{\n      \"name\": \"streetAddress\",\n      \"type\": \"String\",\n      \"displayName\": \"Street Address\",\n      \"searchType\": \"Partial\"\n    }, {\n      \"name\": \"city\",\n      \"type\": \"String\",\n      \"displayName\": \"City\",\n      \"searchType\": \"Partial\"\n    }, {\n      \"name\": \"stateOrRegion\",\n      \"type\": \"String\",\n      \"displayName\": \"State or Region\",\n      \"searchType\": \"Partial\"\n    }, {\n      \"name\": \"postalCode\",\n      \"type\": \"String\",\n      \"displayName\": \"Postal Code\",\n      \"searchType\": \"Partial\"\n    }, {\n      \"name\": \"country\",\n      \"type\": \"String\",\n      \"displayName\": \"Country\",\n      \"searchType\": \"Partial\"\n    }, {\n      \"name\": \"description\",\n      \"type\": \"String\",\n      \"displayName\": \"Description\",\n      \"searchType\": \"Partial\"\n    }]\n  }, {\n    \"name\": \"phones\",\n    \"displayName\": \"Phones\",\n    \"type\": \"Composite\",\n    \"isArray\": true,\n    \"properties\": [{\n      \"name\": \"number\",\n      \"type\": \"String\",\n      \"displayName\": \"Number\",\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"name\",\n      \"type\": \"String\",\n      \"displayName\": \"Name\",\n      \"searchType\": \"Exact\"\n    }]\n  }, {\n    \"name\": \"websites\",\n    \"displayName\": \"Websites\",\n    \"type\": \"String\",\n    \"isArray\": true,\n    \"searchType\": \"Partial\"\n  }, {\n    \"name\": \"emailDomains\",\n    \"displayName\": \"Email Domains\",\n    \"type\": \"String\",\n    \"isArray\": true,\n    \"searchType\": \"Partial\"\n  }, {\n    \"name\": \"billingEmailAddress\",\n    \"displayName\": \"Billing email address\",\n    \"type\": \"String\",\n    \"searchType\": \"Partial\"\n  }]\n};\n\nmodule.exports = definition;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nvar definition = {\n  \"name\": \"T42.Contact\",\n  \"properties\": [{\n    \"name\": \"ids\",\n    \"displayName\": \"IDs\",\n    \"type\": \"Composite\",\n    \"isArray\": true,\n    \"properties\": [{\n      \"name\": \"nativeId\",\n      \"type\": \"String\",\n      \"displayName\": \"Native ID\",\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"systemName\",\n      \"type\": \"String\",\n      \"displayName\": \"System Name\",\n      \"searchType\": \"Exact\"\n    }]\n  }, {\n    \"name\": \"displayName\",\n    \"displayName\": \"Display Name\",\n    \"type\": \"String\",\n    \"searchType\": \"Partial\",\n    \"description\": \"Display Name\"\n  }, {\n    \"name\": \"name\",\n    \"displayName\": \"Name\",\n    \"type\": \"Composite\",\n    \"searchType\": \"Partial\",\n    \"properties\": [{\n      \"name\": \"companyName\",\n      \"type\": \"String\",\n      \"displayName\": \"Company Name\",\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"lastName\",\n      \"type\": \"String\",\n      \"displayName\": \"Last Name\",\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"firstName\",\n      \"type\": \"String\",\n      \"displayName\": \"First Name\",\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"otherNames\",\n      \"type\": \"String\",\n      \"displayName\": \"Other Names\",\n      \"isArray\": true,\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"honorific\",\n      \"type\": \"String\",\n      \"displayName\": \"Honorific\",\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"postNominalLetters\",\n      \"type\": \"String\",\n      \"displayName\": \"Post-nominal Letters\",\n      \"isArray\": true,\n      \"searchType\": \"Exact\"\n    }]\n  }, {\n    \"name\": \"status\",\n    \"displayName\": \"Status\",\n    \"type\": \"String\",\n    \"searchType\": \"Exact\",\n    \"description\": \"Status\"\n  }, {\n    \"name\": \"isPerson\",\n    \"displayName\": \"Is Person\",\n    \"type\": \"Bool\",\n    \"searchType\": \"Exact\",\n    \"description\": \"Is Person\"\n  }, {\n    \"name\": \"account\",\n    \"displayName\": \"Account\",\n    \"type\": \"Composite\",\n    \"properties\": [{\n      \"name\": \"nativeId\",\n      \"type\": \"String\",\n      \"displayName\": \"Native ID\",\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"systemName\",\n      \"type\": \"String\",\n      \"displayName\": \"System Name\",\n      \"searchType\": \"Exact\"\n    }]\n  }, {\n    \"name\": \"addresses\",\n    \"displayName\": \"Addresses\",\n    \"type\": \"Composite\",\n    \"isArray\": true,\n    \"properties\": [{\n      \"name\": \"streetAddress\",\n      \"type\": \"String\",\n      \"displayName\": \"Street Address\",\n      \"searchType\": \"Partial\"\n    }, {\n      \"name\": \"city\",\n      \"type\": \"String\",\n      \"displayName\": \"City\",\n      \"searchType\": \"Partial\"\n    }, {\n      \"name\": \"stateOrRegion\",\n      \"type\": \"String\",\n      \"displayName\": \"State or Region\",\n      \"searchType\": \"Partial\"\n    }, {\n      \"name\": \"postalCode\",\n      \"type\": \"String\",\n      \"displayName\": \"Postal Code\",\n      \"searchType\": \"Partial\"\n    }, {\n      \"name\": \"country\",\n      \"type\": \"String\",\n      \"displayName\": \"Country\",\n      \"searchType\": \"Partial\"\n    }, {\n      \"name\": \"description\",\n      \"type\": \"String\",\n      \"displayName\": \"Description\",\n      \"searchType\": \"Partial\"\n    }]\n  }, {\n    \"name\": \"phones\",\n    \"displayName\": \"Phones\",\n    \"type\": \"Composite\",\n    \"isArray\": true,\n    \"properties\": [{\n      \"name\": \"number\",\n      \"type\": \"String\",\n      \"displayName\": \"Number\",\n      \"searchType\": \"Exact\"\n    }, {\n      \"name\": \"name\",\n      \"type\": \"String\",\n      \"displayName\": \"Name\",\n      \"searchType\": \"Exact\"\n    }]\n  }, {\n    \"name\": \"emails\",\n    \"displayName\": \"Emails\",\n    \"type\": \"String\",\n    \"isArray\": true,\n    \"searchType\": \"Partial\"\n  }]\n};\n\nmodule.exports = definition;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar contact = __webpack_require__(12);\nvar account = __webpack_require__(11);\n\nmodule.exports = {\n  'T42.Contact': contact,\n  'T42.Account': account\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar entitiesDefinitions = __webpack_require__(13);\n\nfunction GSS(agm, options) {\n  var searchProvider = null;\n  var searchProviderReady = null;\n  var allEntityTypes;\n\n  var isGssEnabled = options.searchProviders && options.searchProviders.length > 0 || options.provider;\n\n  if (!isGssEnabled) {\n    return {\n      search: function search() {\n        console.log('GSS isn\\'t enabled.');\n      },\n      addEntityType: function addEntityType() {\n        console.log('GSS isn\\'t enabled.');\n      }\n    };\n  }\n\n  if (options.side === 'helper' && typeof gss !== \"undefined\") {\n    var manager = gss.createDesktopManager(agm, {\n      debug: false\n    });\n    manager.start();\n\n    if (options.searchProviders && options.searchProviders.length > 0) {\n      options.searchProviders.forEach(function (providerName) {\n        manager.add({ name: providerName, type: 'agm', application: providerName });\n      });\n    }\n\n    var searchService = new gss.GlueSearchService(agm, {\n      target: {\n        application: options.target\n      }\n    });\n    var searchReady = searchService.ready();\n\n    searchReady.then(function (api) {\n      api.onEntityTypes(function (err, entityTypes) {\n        if (err) {\n          throw new Error(err);\n        }\n        allEntityTypes = entityTypes;\n      });\n    });\n  }\n\n  function addEntityType(name, handler) {\n    return new Promise(function (resolve, reject) {\n      if (typeof name !== 'string') {\n        throw Error('A entity name is required to register a search provider');\n      }\n\n      if (entitiesDefinitions[name] === undefined) {\n        throw Error('Unsupported entity: \"' + name + '\"');\n      }\n\n      if (typeof handler !== 'function') {\n        throw Error('A search handler is required to register a search provider');\n      }\n\n      if (!searchProvider) {\n        searchProvider = new gss.GlueSearchProvider(agm, {\n          debug: false,\n          measureLatency: false,\n          target: {\n            application: options.target\n          }\n        });\n\n        searchProviderReady = searchProvider.start();\n      }\n\n      searchProviderReady.then(function () {\n        var entity = gss.GssEntityType.fromJS(entitiesDefinitions[name]);\n        searchProvider.addEntityType(entity, handler);\n        resolve();\n      }).catch(reject);\n    });\n  }\n\n  function search(name, query) {\n    return new Promise(function (resolve, reject) {\n      searchReady.then(function (api) {\n        var response = [];\n        var entityType = allEntityTypes && allEntityTypes.get(name);\n        if (!entityType) {\n          return reject('Search provider not found');\n        }\n        var currentQuery = searchService.createQuery(entityType);\n\n        currentQuery.onData(function (result) {\n          response = response.concat(result.entities);\n          if (result.isLast) {\n            resolve(response);\n          }\n        }).search(query);\n      }).catch(reject);\n    });\n  }\n\n  return {\n    addEntityType: addEntityType,\n    search: search\n  };\n}\n\nmodule.exports = GSS;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar constants = __webpack_require__(2);\n\nmodule.exports = [{\n  side: 'crm',\n  name: constants.CRM_PREFIX + 'CreateContact',\n  accepts: constants.SIGNATURES.CONTACT,\n  description: '',\n  displayName: 'Create Contact',\n  objectTypes: []\n}, {\n  side: 'both',\n  name: constants.CRM_PREFIX + 'GetContact',\n  accepts: constants.SIGNATURES.CONTACT,\n  description: '',\n  displayName: 'Get Contact',\n  objectTypes: []\n}, {\n  side: 'helper',\n  name: constants.CRM_PREFIX + 'ResolveContact',\n  accepts: constants.SIGNATURES.CONTACT,\n  description: '',\n  displayName: 'Resolve Contact',\n  objectTypes: []\n}, {\n  side: 'crm',\n  name: constants.CRM_PREFIX + 'UpdateContact',\n  accepts: 'Bool? autoCreate, ' + constants.SIGNATURES.CONTACT,\n  description: '',\n  displayName: 'Update Contact',\n  objectTypes: []\n}, {\n  side: 'crm',\n  name: constants.CRM_PREFIX + 'DeleteContact',\n  accepts: constants.SIGNATURES.CONTACT,\n  description: '',\n  displayName: 'Delete Contact',\n  objectTypes: []\n}, {\n  side: 'both',\n  name: constants.CRM_PREFIX + 'SyncContact',\n  accepts: constants.SIGNATURES.CONTACT,\n  description: '',\n  displayName: 'Sync Contact',\n  objectTypes: []\n}, {\n  side: 'both',\n  name: constants.CRM_PREFIX + 'GetAccount',\n  accepts: constants.SIGNATURES.ACCOUNT,\n  description: '',\n  displayName: 'Get Account',\n  objectTypes: []\n}, {\n  side: 'crm',\n  name: constants.CRM_PREFIX + 'CreateAccount',\n  accepts: constants.SIGNATURES.ACCOUNT,\n  description: '',\n  displayName: 'Create Account',\n  objectTypes: []\n}, {\n  side: 'helper',\n  name: constants.CRM_PREFIX + 'ResolveAccount',\n  accepts: constants.SIGNATURES.ACCOUNT,\n  description: '',\n  displayName: 'Resolve Contact',\n  objectTypes: []\n}, {\n  side: 'crm',\n  name: constants.CRM_PREFIX + 'UpdateAccount',\n  accepts: 'Bool? autoCreate, ' + constants.SIGNATURES.ACCOUNT,\n  description: '',\n  displayName: 'Update Account',\n  objectTypes: []\n}, {\n  side: 'crm',\n  name: constants.CRM_PREFIX + 'DeleteAccount',\n  accepts: constants.SIGNATURES.ACCOUNT,\n  description: '',\n  displayName: 'Delete Account',\n  objectTypes: []\n}, {\n  side: 'both',\n  name: constants.CRM_PREFIX + 'SyncAccount',\n  accepts: constants.SIGNATURES.ACCOUNT,\n  description: '',\n  displayName: 'Sync Account',\n  objectTypes: []\n}, {\n  side: 'helper',\n  name: constants.CRM_PREFIX + 'ResolveAccountContactList',\n  accepts: constants.SIGNATURES.CONTACTS + \", \" + constants.SIGNATURES.ACCOUNT,\n  description: '',\n  displayName: 'Resolve Account Contact List',\n  objectTypes: []\n}, {\n  side: 'crm',\n  name: constants.CRM_PREFIX + 'LogContactCall',\n  accepts: '',\n  description: '',\n  displayName: 'Log contact call',\n  objectTypes: []\n}, {\n  side: 'both',\n  name: constants.CRM_PREFIX + 'SearchContact',\n  accepts: '',\n  description: '',\n  displayName: 'Search a contact',\n  objectTypes: []\n}];\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Model = __webpack_require__(0);\nvar Id = __webpack_require__(4);\nvar Address = __webpack_require__(3);\nvar Phone = __webpack_require__(5);\n\nmodule.exports = Model({\n  ids: Model.Array(Id),\n  displayName: [String],\n  owner: [Id],\n  subsidiaries: [Model.Array(Id)],\n  name: [String],\n  status: [String],\n  contacts: [Model.Array(Id)],\n  addresses: [Model.Array(Address)],\n  phones: [Model.Array(Phone)],\n  websites: [Model.Array(String)],\n  emailDomains: [Model.Array(String)],\n  billingEmailAddress: [String]\n});\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Model = __webpack_require__(0);\n\nmodule.exports = Model({\n  companyName: [String],\n  lastName: [String],\n  firstName: [String],\n  otherNames: [Model.Array(String)],\n  honorific: [String],\n  postNominalLetters: [Model.Array(String)]\n});\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar GlueCore = __webpack_require__(8);\nvar defaultConfig = __webpack_require__(6);\nvar CRMCreator = __webpack_require__(7);\n\nmodule.exports = function Tick42CRM(options) {\n  var crmConfig = {\n    side: options.side || defaultConfig.side,\n    timeout: options.timeout || defaultConfig.timeout,\n    target: options.application || 'GssDesktopManager',\n    searchProviders: options.searchProviders || [],\n    provider: options.provider\n  };\n\n  var glueConfig = Object.assign({}, defaultConfig.glue, options);\n  glueConfig.auth = glueConfig.authentication;\n\n  return new Promise(function (resolve, reject) {\n    var gluePromise = void 0;\n    if (options.glue) {\n      gluePromise = Promise.resolve(options.glue);\n    } else {\n      gluePromise = GlueCore(glueConfig);\n    }\n\n    gluePromise.then(function (glue) {\n      var CRM = CRMCreator(glue.agm, crmConfig);\n      resolve({\n        CRM: CRM, glue: glue\n      });\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n};\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// Tick42CRM.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5c67e397ae424b7b11c7","// ObjectModel v2.6.1 - http://objectmodel.js.org\r\n;(function (globals, factory) {\r\n if (typeof define === 'function' && define.amd) define(factory); // AMD\r\n else if (typeof exports === 'object') module.exports = factory(); // Node\r\n else globals['Model'] = factory(); // globals\r\n}(this, function () {\r\n// string constants\r\nvar\r\nOBJECT                = \"Object\",\r\nARRAY                 = \"Array\",\r\nFUNCTION              = \"Function\",\r\nCONVENTION_CONSTANT   = \"conventionForConstant\",\r\nCONVENTION_PRIVATE    = \"conventionForPrivate\",\r\nDEFINITION            = \"definition\",\r\nASSERTIONS            = \"assertions\",\r\nDESCRIPTION           = \"_description\",\r\nVALIDATE              = \"validate\",\r\nVALIDATOR             = \"_validator\",\r\nTEST                  = \"test\",\r\nEXTEND                = \"extend\",\r\nASSERT                = \"assert\",\r\nEXPECTED              = \"expected\",\r\nRECEIVED              = \"received\",\r\nPATH                  = \"path\",\r\nMESSAGE               = \"message\",\r\nERROR_STACK           = \"errorStack\",\r\nERROR_COLLECTOR       = \"errorCollector\",\r\nUNSTACK               = \"unstack\",\r\nPROTO                 = \"prototype\",\r\nCONSTRUCTOR           = \"constructor\",\t\r\nDEFAULT               = \"default\",\r\nDEFAULT_TO            = \"defaultTo\",\r\nDEFAULTS              = \"defaults\",\r\nRETURN                = \"return\",\r\nARGS                  = \"arguments\",\r\n\r\nARRAY_MUTATOR_METHODS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"],\r\nSTACKTRACE_BLACKBOX_MATCHER = /\\n.*object-model(.|\\n)*object-model.*/\r\n;\r\nvar isProxySupported = typeof Proxy === \"function\";\r\nvar defineProperty = Object.defineProperty;\r\n\r\n// shim for Function.name for browsers that don't support it. IE, I'm looking at you.\r\nif (!(\"name\" in Function.prototype && \"name\" in (function x() {}))) {\r\n\tdefineProperty(Function.prototype, \"name\", {\r\n\t\tget: function() {\r\n\t\t\tvar results = Function.prototype.toString.call(this).match(/\\s*function\\s+([^\\(\\s]*)\\s*/);\r\n\t\t\treturn results && results[1];\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// shim for Object.setPrototypeOf if __proto__ is supported\r\nif(!Object.setPrototypeOf && is(Array, {__proto__:[]})){\r\n\tObject.setPrototypeOf = function (obj, proto) {\r\n\t\tobj.__proto__ = proto\r\n\t\treturn obj\r\n\t}\r\n}\r\n\r\nfunction is(Constructor, obj){\r\n\treturn obj instanceof Constructor;\r\n}\r\n\r\nfunction isFunction(o){\r\n\treturn typeof o === \"function\";\r\n}\r\n\r\nfunction isObject(o){\r\n    return typeof o === \"object\";\r\n}\r\n\r\nfunction isPlainObject(o){\r\n\treturn o && isObject(o) && Object.getPrototypeOf(o) === Object.prototype;\r\n}\r\n\r\nfunction bettertypeof(obj){\r\n\treturn ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1];\r\n}\r\n\r\nfunction cloneArray(arr){\r\n\treturn Array.prototype.slice.call(arr);\r\n}\r\n\r\nfunction defaultTo(defaultVal, val){\r\n\treturn val === undefined ? defaultVal : val;\r\n}\r\n\r\nfunction merge(target, src, deep, includingProto) {\r\n\tfor(var key in (src || {})){\r\n\t\tif(includingProto || src.hasOwnProperty(key)){\r\n\t\t\tif(deep && isPlainObject(src[key])){\r\n\t\t\t\tvar o = {};\r\n\t\t\t\tmerge(o, target[key], deep);\r\n\t\t\t\tmerge(o, src[key], deep);\r\n\t\t\t\ttarget[key] = o;\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction define(obj, key, val, enumerable) {\r\n\tdefineProperty(obj, key, {\r\n\t\tvalue: val,\r\n\t\tenumerable: enumerable,\r\n\t\twritable: true,\r\n\t\tconfigurable: true\r\n\t});\r\n}\r\n\r\nfunction setConstructor(model, constructor){\r\n\tObject.setPrototypeOf(model, constructor[PROTO]);\r\n\tdefine(model, CONSTRUCTOR, constructor);\r\n}\r\n\r\nfunction setConstructorProto(constructor, proto){\r\n\tconstructor[PROTO] = Object.create(proto);\r\n\tconstructor[PROTO][CONSTRUCTOR] = constructor;\r\n}\r\n\r\nfunction toString(obj, stack){\r\n\tstack = stack || [];\r\n\tif(stack.length > 15 || stack.indexOf(obj) >= 0){ return '...'; }\r\n\tif(obj == null){ return String(obj); }\r\n\tif(typeof obj == \"string\"){ return '\"'+obj+'\"'; }\r\n\tif(is(Model, obj)) return obj.toString(stack);\r\n\tstack = [obj].concat(stack);\r\n\tif(isFunction(obj)){\r\n\t\treturn obj.name || obj.toString(stack);\r\n\t}\r\n\tif(is(Array, obj)){\r\n\t\treturn '[' + obj.map(function(item) {\r\n\t\t\t\treturn toString(item, stack);\r\n\t\t\t}).join(', ') + ']';\r\n\t}\r\n\tif(obj.toString !== Object.prototype.toString){\r\n\t\treturn obj.toString();\r\n\t}\r\n\tif(obj && isObject(obj)){\r\n\t\tvar indent = (new Array(stack.length)).join('\\t');\r\n\t\tvar props = Object.keys(obj);\r\n\t\treturn '{' + props.map(function(key){\r\n\t\t\treturn '\\n' + indent + '\\t' + key + ': ' + toString(obj[key], stack);\r\n\t\t}).join(',') + (props.length ? '\\n' + indent : '') + '}';\r\n\t}\r\n\treturn String(obj)\r\n}\r\nfunction Model(def){\r\n\tif(isPlainObject(def)) return Model[OBJECT](def);\r\n\r\n\tvar model = function(obj) {\r\n\t\tobj = defaultTo(model[DEFAULT], obj);\r\n\t\tmodel[VALIDATE](obj);\r\n\t\treturn obj;\r\n\t};\r\n\r\n\tinitModel(model, arguments, Model);\r\n\treturn model;\r\n}\r\n\r\nsetConstructorProto(Model, Function[PROTO]);\r\nvar ModelProto = Model[PROTO];\r\n\r\nModelProto.toString = function(stack){\r\n\treturn parseDefinition(this[DEFINITION]).map(function(d){\r\n\t\treturn toString(d, stack);\r\n\t}).join(\" or \");\r\n};\r\n\r\nModelProto[ASSERTIONS] = [];\r\n\r\nModelProto[VALIDATE] = function(obj, errorCollector){\r\n\tthis[VALIDATOR](obj, null, [], this[ERROR_STACK]);\r\n\tthis[UNSTACK](errorCollector);\r\n};\r\n\r\nModelProto[TEST] = function(obj){\r\n\tvar failed,\r\n\t    initialErrorCollector = this[ERROR_COLLECTOR];\r\n\tthis[ERROR_COLLECTOR] = function(){ failed = true };\r\n\tthis(obj);\r\n\tthis[ERROR_COLLECTOR] = initialErrorCollector;\r\n\treturn !failed;\r\n};\r\n\r\nModelProto[EXTEND] = function(){\r\n\tvar def, proto,\r\n\t\tassertions = cloneArray(this[ASSERTIONS]),\r\n\t\targs = cloneArray(arguments);\r\n\r\n\tif(is(Model[OBJECT], this)){\r\n\t\tdef = {};\r\n\t\tproto = {};\r\n\t\tmerge(def, this[DEFINITION]);\r\n\t\tmerge(proto, this[PROTO], false, true);\r\n\t\targs.forEach(function(arg){\r\n\t\t\tif(is(Model, arg)){\r\n\t\t\t\tmerge(def, arg[DEFINITION], true);\r\n\t\t\t}\r\n\t\t\tif(isFunction(arg)){\r\n\t\t\t\tmerge(proto, arg[PROTO], true, true);\r\n\t\t\t}\r\n\t\t\tif(isObject(arg)) {\r\n\t\t\t\tmerge(def, arg, true, true);\r\n\t\t\t}\r\n\t\t})\r\n\t\tdelete proto.constructor;\r\n\t} else {\r\n\t\tdef = args\r\n\t\t\t.reduce(function(def, ext){\r\n\t\t\t\treturn def.concat(parseDefinition(ext));\r\n\t\t\t}, parseDefinition(this[DEFINITION]))\r\n\t\t\t.filter(function(value, index, self) {\r\n\t\t\t\treturn self.indexOf(value) === index; // remove duplicates\r\n\t\t\t});\r\n\t}\r\n\r\n\targs.forEach(function(arg){\r\n\t\tif(is(Model, arg)){\r\n\t\t\tassertions = assertions.concat(arg[ASSERTIONS]);\r\n\t\t}\r\n\t});\r\n\r\n\tvar submodel = new this[CONSTRUCTOR](def);\r\n\tsetConstructorProto(submodel, this[PROTO]);\r\n\tmerge(submodel[PROTO], proto);\r\n\tsubmodel[ASSERTIONS] = assertions;\r\n\tsubmodel[ERROR_COLLECTOR] = this[ERROR_COLLECTOR];\r\n\treturn submodel;\r\n};\r\n\r\nModelProto[ASSERT] = function(assertion, description){\r\n\tdescription = description || toString(assertion);\r\n\tdefine(assertion, DESCRIPTION, description);\r\n\tthis[ASSERTIONS] = this[ASSERTIONS].concat(assertion);\r\n\treturn this;\r\n};\r\n\r\nModelProto[DEFAULT_TO] = function(val){\r\n\tthis[DEFAULT] = val;\r\n\treturn this;\r\n}\r\n\r\nModelProto[ERROR_COLLECTOR] = function(errors){\r\n\tvar e = new TypeError(errors.map(function(e){ return e[MESSAGE]; }).join('\\n'));\r\n\tif(e.stack){\r\n\t\te.stack = e.stack.replace(STACKTRACE_BLACKBOX_MATCHER, \"\");\r\n\t}\r\n\tthrow e;\r\n};\r\n\r\nModel[CONVENTION_CONSTANT] = function(key){ return key.toUpperCase() === key };\r\nModel[CONVENTION_PRIVATE] = function(key){ return key[0] === \"_\" };\r\n\r\n// private methods\r\ndefine(ModelProto, VALIDATOR, function(obj, path, callStack, errorStack){\r\n\tcheckDefinition(obj, this[DEFINITION], path, callStack, errorStack);\r\n\tcheckAssertions(obj, this, path, errorStack);\r\n});\r\n\r\n// throw all errors collected\r\ndefine(ModelProto, UNSTACK, function(errorCollector){\r\n\tif(!this[ERROR_STACK].length){\r\n\t\treturn;\r\n\t}\r\n\tif(!errorCollector){\r\n\t\terrorCollector = this[ERROR_COLLECTOR];\r\n\t}\r\n\tvar errors = this[ERROR_STACK].map(function(err){\r\n\t\tif(!err[MESSAGE]){\r\n\t\t\tvar def = is(Array, err[EXPECTED]) ? err[EXPECTED] : [err[EXPECTED]];\r\n\t\t\terr[MESSAGE] = (\"expecting \" + (err[PATH] ? err[PATH] + \" to be \" : \"\")\r\n\t\t\t+ def.map(function(d){ return toString(d); }).join(\" or \")\r\n\t\t\t+ \", got \" + (err[RECEIVED] != null ? bettertypeof(err[RECEIVED]) + \" \" : \"\")\r\n\t\t\t+ toString(err[RECEIVED]))\r\n\t\t}\r\n\t\treturn err;\r\n\t});\r\n\tthis[ERROR_STACK] = [];\r\n\terrorCollector.call(this, errors);\r\n})\r\n\r\nfunction initModel(model, args, constructor){\r\n\tif(args.length === 0) throw new Error(\"Model definition is required\");\r\n\tsetConstructor(model, constructor);\r\n\tmodel[DEFINITION] = args[0];\r\n\tmodel[ASSERTIONS] = model[ASSERTIONS].slice(); // clone from Model.prototype\r\n\tdefine(model, ERROR_STACK, []);\r\n}\r\n\r\nfunction parseDefinition(def){\r\n\tif(!isPlainObject(def)){\r\n\t\tif(!is(Array, def)) return [def];\r\n\t\tif(def.length === 1) return def.concat(undefined, null);\r\n\t} else {\r\n\t\tObject.keys(def).forEach(function(key) {\r\n\t\t\tdef[key] = parseDefinition(def[key]);\r\n\t\t});\r\n\t}\r\n\treturn def;\r\n}\r\n\r\nfunction checkDefinition(obj, def, path, callStack, errorStack, shouldCast){\r\n\tvar indexFound = callStack.indexOf(def);\r\n\tif(indexFound !== -1 && callStack.slice(indexFound+1).indexOf(def) !== -1){\r\n\t\treturn obj; //if found twice in call stack, cycle detected, skip validation\r\n\t}\r\n\r\n\tif(shouldCast) {\r\n\t\tobj = cast(obj, def);\r\n\t}\r\n\r\n\tif(is(Model, def)){\r\n\t\tdef[VALIDATOR](obj, path, callStack.concat(def), errorStack);\r\n\t}\r\n\telse if(isPlainObject(def)) {\r\n\t\tObject.keys(def).forEach(function (key) {\r\n\t\t\tvar val = obj != null ? obj[key] : undefined;\r\n\t\t\tcheckDefinition(val, def[key], path ? path + '.' + key : key, callStack, errorStack);\r\n\t\t});\r\n\t} else {\r\n\t\tvar pdef = parseDefinition(def);\r\n\t\tfor(var i=0, l=pdef.length; i<l; i++){\r\n\t\t\tif(checkDefinitionPart(obj, pdef[i], path, callStack)){\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar err = {};\r\n\t\terr[EXPECTED] = def;\r\n\t\terr[RECEIVED] = obj;\r\n\t\terr[PATH] = path;\r\n\t\terrorStack.push(err);\r\n\t}\r\n\treturn obj;\r\n}\r\n\r\nfunction checkDefinitionPart(obj, def, path, callStack){\r\n\tif(obj == null){\r\n\t\treturn obj === def;\r\n\t}\r\n\tif(isPlainObject(def) || is(Model, def)){ // object or model as part of union type\r\n\t\tvar errorStack = [];\r\n\t\tcheckDefinition(obj, def, path, callStack, errorStack);\r\n\t\treturn !errorStack.length;\r\n\t}\r\n\tif(is(RegExp, def)){\r\n\t\treturn def.test(obj);\r\n\t}\r\n\tif(def === Number || def === Date){\r\n\t\treturn obj[CONSTRUCTOR] === def && !isNaN(obj)\r\n\t}\r\n\r\n\treturn obj === def\r\n\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t|| obj[CONSTRUCTOR] === def;\r\n}\r\n\r\nfunction checkAssertions(obj, model, path, errorStack){\r\n\tfor(var i=0, l=model[ASSERTIONS].length; i<l ; i++){\r\n\t\tvar assert = model[ASSERTIONS][i],\r\n\t\t\tassertionResult,\r\n\t\t\tdescription = assert[DESCRIPTION],\r\n\t\t    onFail = isFunction(description) ? description : function (assertionResult, value) {\r\n\t\t\t\treturn 'assertion \"' + description\r\n\t\t\t\t     + '\" returned ' + toString(assertionResult)\r\n\t\t\t\t     + ' for value ' + toString(value);\r\n\t\t\t};\r\n\t\ttry {\r\n\t\t\tassertionResult = assert.call(model, obj);\r\n\t\t} catch(err){\r\n\t\t\tassertionResult = err;\r\n\t\t}\r\n\t\tif(assertionResult !== true){\r\n\t\t\tvar err = {};\r\n\t\t\terr[MESSAGE] = onFail.call(model, assertionResult, obj)\r\n\t\t\terr[EXPECTED] = assert;\r\n\t\t\terr[RECEIVED] = obj;\r\n\t\t\terr[PATH] = path;\r\n\t\t\terrorStack.push(err);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction cast(obj, defNode){\r\n\tif(!obj || is(Model, obj[CONSTRUCTOR])){\r\n\t\treturn obj; // no value or already a model instance\r\n\t}\r\n\r\n\tvar def = parseDefinition(defNode || []),\r\n\t    suitableModels = [];\r\n\r\n\tfor(var i=0, l=def.length; i<l; i++){\r\n\t\tvar defPart = def[i];\r\n\t\tif(is(Model, defPart) && defPart[TEST](obj)){\r\n\t\t\tsuitableModels.push(defPart);\r\n\t\t}\r\n\t}\r\n\r\n\tvar nbSuitableModels = suitableModels.length;\r\n\tif(nbSuitableModels === 1) {\r\n\t\treturn suitableModels[0](obj); // automatically cast to the suitable model when explicit\r\n\t}\r\n\tif(nbSuitableModels > 1){\r\n\t\tconsole.warn(\"Ambiguous model for value \" + toString(obj)\r\n\t\t\t+ \", could be \" + suitableModels.join(\" or \"));\r\n\t}\r\n\r\n\treturn obj;\r\n}\r\nModel[OBJECT] = function ObjectModel(def){\r\n\r\n\tvar model = function(obj) {\r\n\t\tif(is(model, obj)){\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t\tif(!is(model, this)){\r\n\t\t\treturn new model(obj);\r\n\t\t}\r\n\t\tobj = defaultTo(model[DEFAULT], obj);\r\n\t\tmerge(this, obj, true);\r\n\t\tvar proxy = getProxy(model, this, model[DEFINITION]);\r\n\t\tmodel[VALIDATE](proxy);\r\n\t\treturn proxy;\r\n\t};\r\n\r\n\tsetConstructorProto(model, Object[PROTO]);\r\n\tinitModel(model, arguments, Model[OBJECT]);\r\n\treturn model;\r\n};\r\n\r\nsetConstructorProto(Model[OBJECT], ModelProto);\r\nvar ObjectModelProto = Model[OBJECT][PROTO];\r\n\r\nObjectModelProto[DEFAULTS] = function(p){\r\n\tmerge(this[PROTO], p);\r\n\treturn this;\r\n};\r\n\r\nObjectModelProto.toString = function(stack){\r\n\treturn toString(this[DEFINITION], stack);\r\n};\r\n\r\n// private methods\r\ndefine(ObjectModelProto, VALIDATOR, function(obj, path, callStack, errorStack){\r\n\tif(!isObject(obj)){\r\n\t\tvar err = {};\r\n\t\terr[EXPECTED] = this;\r\n\t\terr[RECEIVED] = obj;\r\n\t\terr[PATH] = path;\r\n\t\terrorStack.push(err);\r\n\t} else {\r\n\t\tcheckDefinition(obj, this[DEFINITION], path, callStack, errorStack);\r\n\t}\r\n\tcheckAssertions(obj, this, path, errorStack);\r\n});\r\n\r\nfunction getProxy(model, obj, defNode, path) {\r\n\tif(!isPlainObject(defNode)) {\r\n\t\treturn cast(obj, defNode);\r\n\t}\r\n\r\n\tvar wrapper = is(Object, obj) ? obj : {};\r\n\tvar proxy = Object.create(Object.getPrototypeOf(wrapper));\r\n\r\n\tfor(var key in wrapper){\r\n\t\tif(wrapper.hasOwnProperty(key) && !(key in defNode)){\r\n\t\t\tproxy[key] = wrapper[key]; // properties out of model definition are kept\r\n\t\t}\r\n\t}\r\n\r\n\tObject.keys(defNode).forEach(function(key) {\r\n\t\tvar newPath = (path ? path + '.' + key : key);\r\n\t\tvar isConstant = Model[CONVENTION_CONSTANT](key);\r\n\t\tvar defPart = defNode[key];\r\n\r\n\t\tif(!isPlainObject(defPart) && wrapper[key] && !is(Model, wrapper[key][CONSTRUCTOR])) {\r\n\t\t\t// cast nested models immediately at parent instanciation\r\n\t\t\twrapper[key] = cast(wrapper[key], defPart);\r\n\t\t}\r\n\r\n\t\tdefineProperty(proxy, key, {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn getProxy(model, wrapper[key], defPart, newPath);\r\n\t\t\t},\r\n\t\t\tset: function (val) {\r\n\t\t\t\tif(isConstant && wrapper[key] !== undefined){\r\n\t\t\t\t\tvar err = {};\r\n\t\t\t\t\terr[MESSAGE] = \"cannot redefine constant \" + key;\r\n\t\t\t\t\tmodel[ERROR_STACK].push(err);\r\n\t\t\t\t}\r\n\t\t\t\tvar newProxy = getProxy(model, val, defPart, newPath);\r\n\t\t\t\tcheckDefinition(newProxy, defPart, newPath, [], model[ERROR_STACK]);\r\n\t\t\t\tvar oldValue = wrapper[key];\r\n\t\t\t\twrapper[key] = newProxy;\r\n\t\t\t\tcheckAssertions(obj, model, newPath, model[ERROR_STACK]);\r\n\t\t\t\tif(model[ERROR_STACK].length){\r\n\t\t\t\t\twrapper[key] = oldValue;\r\n\t\t\t\t\tmodel[UNSTACK]();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tenumerable: !Model[CONVENTION_PRIVATE](key)\r\n\t\t});\r\n\t});\r\n\treturn proxy;\r\n}\r\nModel[ARRAY] = function ArrayModel(def){\r\n\r\n\tvar model = function(array) {\r\n\t\tarray = defaultTo(model[DEFAULT], array);\r\n\r\n\t\tvar proxy;\r\n\t\tmodel[VALIDATE](array);\r\n\t\tif(isProxySupported){\r\n\t\t\tproxy = new Proxy(array, {\r\n\t\t\t\tget: function (arr, key) {\r\n\t\t\t\t\tif(key === CONSTRUCTOR){\r\n\t\t\t\t\t\treturn model;\r\n\t\t\t\t\t} else if(ARRAY_MUTATOR_METHODS.indexOf(key) >= 0){\r\n\t\t\t\t\t\treturn proxifyArrayMethod(arr, key, model);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arr[key];\r\n\t\t\t\t},\r\n\t\t\t\tset: function (arr, key, val) {\r\n\t\t\t\t\tsetArrayKey(arr, key, val, model);\r\n\t\t\t\t},\r\n\t\t\t\tgetPrototypeOf: function(){\r\n\t\t\t\t\treturn model[PROTO];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tproxy = Object.create(Array[PROTO]);\r\n\t\t\tfor(var key in array){\r\n\t\t\t\tif(array.hasOwnProperty(key)){\r\n\t\t\t\t\tproxifyArrayKey(proxy, array, key, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdefineProperty(proxy, \"length\", { get: function() { return array.length; } });\r\n\t\t\tdefineProperty(proxy, \"toJSON\", { value: function() { return array; } });\r\n\t\t\tARRAY_MUTATOR_METHODS.forEach(function (method) {\r\n\t\t\t\tdefine(proxy, method, proxifyArrayMethod(array, method, model, proxy));\r\n\t\t\t});\r\n\t\t\tsetConstructor(proxy, model);\r\n\t\t}\r\n\r\n\t\treturn proxy;\r\n\t};\r\n\r\n\tsetConstructorProto(model, Array[PROTO]);\r\n\tinitModel(model, arguments, Model[ARRAY]);\r\n\treturn model;\r\n};\r\n\r\nsetConstructorProto(Model[ARRAY], Model[PROTO]);\r\nvar ArrayModelProto = Model[ARRAY][PROTO];\r\n\r\nArrayModelProto.toString = function(stack){\r\n\treturn ARRAY + ' of ' + toString(this[DEFINITION], stack);\r\n};\r\n\r\n// private methods\r\ndefine(ArrayModelProto, VALIDATOR, function(arr, path, callStack, errorStack){\r\n\tif(!is(Array, arr)){\r\n\t\tvar err = {};\r\n\t\terr[EXPECTED] = this;\r\n\t\terr[RECEIVED] = arr;\r\n\t\terr[PATH] = path;\r\n\t\terrorStack.push(err);\r\n\t} else {\r\n\t\tfor(var i=0, l=arr.length; i<l; i++){\r\n\t\t\tarr[i] = checkDefinition(arr[i], this[DEFINITION], (path||ARRAY)+'['+i+']', callStack, errorStack, true);\r\n\t\t}\r\n\t}\r\n\tcheckAssertions(arr, this, path, errorStack);\r\n});\r\n\r\nfunction proxifyArrayKey(proxy, array, key, model){\r\n\tdefineProperty(proxy, key, {\r\n\t\tenumerable: true,\r\n\t\tget: function () {\r\n\t\t\treturn array[key];\r\n\t\t},\r\n\t\tset: function (val) {\r\n\t\t\tsetArrayKey(array, key, val, model);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction proxifyArrayMethod(array, method, model, proxy){\r\n\treturn function() {\r\n\t\tvar testArray = array.slice();\r\n\t\tArray[PROTO][method].apply(testArray, arguments);\r\n\t\tmodel[VALIDATE](testArray);\r\n\r\n\t\tif(!isProxySupported){\r\n\t\t\tfor(var key in testArray){ // proxify new array keys if any after method call\r\n\t\t\t\tif(testArray.hasOwnProperty(key) && !(key in proxy)){\r\n\t\t\t\t\tproxifyArrayKey(proxy, array, key, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar returnValue = Array[PROTO][method].apply(array, arguments);\r\n\t\tfor(var i=0, l=array.length; i<l; i++) {\r\n\t\t\tarray[i] = cast(array[i], model[DEFINITION]);\r\n\t\t}\r\n\t\treturn returnValue;\r\n\t};\r\n}\r\n\r\nfunction setArrayKey(array, key, value, model){\r\n\tvar path = ARRAY+'['+key+']';\r\n\tif(parseInt(key) === +key && key >= 0){\r\n\t\tvalue = checkDefinition(value, model[DEFINITION], path, [], model[ERROR_STACK], true);\r\n\t}\r\n\tvar testArray = array.slice();\r\n\ttestArray[key] = value;\r\n\tcheckAssertions(testArray, model, path, model[ERROR_STACK]);\r\n\tmodel[UNSTACK]();\r\n\tarray[key] = value;\r\n}\r\nModel[FUNCTION] = function FunctionModel(){\r\n\r\n\tvar model = function(fn) {\r\n\t\tfn = defaultTo(model[DEFAULT], fn);\r\n\r\n\t\tvar def = model[DEFINITION];\r\n\t\tvar proxyFn = function () {\r\n\t\t\tvar args = [], returnValue;\r\n\t\t\tmerge(args, def[DEFAULTS]);\r\n\t\t\tmerge(args, cloneArray(arguments));\r\n\t\t\tif (args.length > def[ARGS].length) {\r\n\t\t\t\tvar err = {};\r\n\t\t\t\terr[EXPECTED] = toString(fn) + \" to be called with \" + def[ARGS].length + \" \"+ARGS;\r\n\t\t\t\terr[RECEIVED] = args.length;\r\n\t\t\t\tmodel[ERROR_STACK].push(err);\r\n\t\t\t}\r\n\t\t\tdef[ARGS].forEach(function (argDef, i) {\r\n\t\t\t\targs[i] = checkDefinition(args[i], argDef, ARGS + '[' + i + ']', [], model[ERROR_STACK], true);\r\n\t\t\t});\r\n\t\t\tcheckAssertions(args, model, ARGS, model[ERROR_STACK]); //TODO: improve path parameter\r\n\r\n\t\t\tif(!model[ERROR_STACK].length){\r\n\t\t\t\treturnValue = fn.apply(this, args);\r\n\t\t\t\tif (RETURN in def) {\r\n\t\t\t\t\treturnValue = checkDefinition(returnValue, def[RETURN], RETURN+' value', [], model[ERROR_STACK], true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmodel[UNSTACK]();\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t\tsetConstructor(proxyFn, model);\r\n\t\treturn proxyFn;\r\n\t};\r\n\r\n\tsetConstructorProto(model, Function[PROTO]);\r\n\r\n\tvar def = {};\r\n\tdef[ARGS] = cloneArray(arguments);\r\n\tinitModel(model, [def], Model[FUNCTION]);\r\n\treturn model;\r\n};\r\n\r\nsetConstructorProto(Model[FUNCTION], Model[PROTO]);\r\n\r\nvar FunctionModelProto = Model[FUNCTION][PROTO];\r\n\r\nFunctionModelProto.toString = function(stack){\r\n\tvar out = FUNCTION + '(' + this[DEFINITION][ARGS].map(function(argDef){\r\n\t\treturn toString(argDef, stack);\r\n\t}).join(\",\") +')';\r\n\tif(RETURN in this[DEFINITION]) {\r\n\t\tout += \" => \" + toString(this[DEFINITION][RETURN]);\r\n\t}\r\n\treturn out;\r\n};\r\n\r\nFunctionModelProto[RETURN] = function(def){\r\n\tthis[DEFINITION][RETURN] = def;\r\n\treturn this;\r\n};\r\n\r\nFunctionModelProto[DEFAULTS] = function(){\r\n\tthis[DEFINITION][DEFAULTS] = cloneArray(arguments);\r\n\treturn this;\r\n};\r\n\r\n// private methods\r\ndefine(FunctionModelProto, VALIDATOR, function(f, path, callStack, errorStack){\r\n\tif(!isFunction(f)){\r\n\t\tvar err = {};\r\n\t\terr[EXPECTED] = FUNCTION;\r\n\t\terr[RECEIVED] = f;\r\n\t\terr[PATH] = path;\r\n\t\terrorStack.push(err);\r\n\t}\r\n});\r\nreturn Model;\r\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/objectmodel/dist/object-model.umd.js\n// module id = 0\n// module chunks = 0","const Model = require('objectmodel');\nconst Id = require('./Id');\nconst Name = require('./Name');\nconst Address = require('./Address');\nconst Phone = require('./Phone');\n\nmodule.exports = Model({\n  ids: Model.Array(Id),\n  displayName: [String],\n  name: [Name],\n  status: [String],\n  isPerson: [Boolean],\n  account: [Id],\n  addresses: [Model.Array(Address)],\n  phones: [Model.Array(Phone)],\n  emails: [Model.Array(String)],\n})\n\n\n// WEBPACK FOOTER //\n// ./src/models/Contact.js","module.exports = {\r\n  CRM_PREFIX: 'T42.CRM.',\r\n  SIGNATURES: {\r\n    CONTACT: 'Composite { Composite { String? city, String? country, String? description, String? postalCode, String? stateOrRegion, String? streetAddress }[]? addresses, String? displayName, String[]? emails, Bool? isPerson, Composite { String? companyName, String? firstName, String? honorific, String? lastName, String[]? otherNames, String[]? postNominalLetters }? name, Composite { String name, String number }[]? phones, String? status } contact',\r\n    ACCOUNT: 'Composite { Composite { String? city, String? country, String? description, String? postalCode, String? stateOrRegion, String? streetAddress }[]? addresses, String? billingEmailAddress, Composite { String nativeId, String systemName }[]? contacts, String? displayName, String[]? emailDomains, Composite { String nativeId, String systemName }[] ids, String? name, Composite { String nativeId, String systemName }? owner, Composite { String name, String number }[]? phones, String? status, Composite { String nativeId, String systemName }[]? subsidiaries, String[]? website } account',\r\n    CONTACTS: 'Composite { Composite { String? city, String? country, String? description, String? postalCode, String? stateOrRegion, String? streetAddress }[]? addresses, String? displayName, String[]? emails, Bool? isPerson, Composite { String? companyName, String? firstName, String? honorific, String? lastName, String[]? otherNames, String[]? postNominalLetters }? name, Composite { String name, String number }[]? phones, String? status }[] contacts'\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","const Model = require('objectmodel');\n\nmodule.exports = Model({\n  streetAddress: [String],\n  city: [String],\n  stateOrRegion: [String],\n  postalCode: [String],\n  country: [String],\n  description: [String],\n});\n\n\n// WEBPACK FOOTER //\n// ./src/models/Address.js","const Model = require('objectmodel');\r\n\r\nmodule.exports = Model({\r\n  nativeId: String,\r\n  systemName: String\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/models/Id.js","const Model = require('objectmodel');\r\n\r\nmodule.exports = Model({\r\n  number: String,\r\n  name: String\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/models/Phone.js","module.exports = {\r\n  side: 'crm',\r\n  glue: {\r\n    gateway: {\r\n      ws: 'wss://demo.tick42.com:50112',\r\n      http: 'https://demo.tick42.com:50112',\r\n      protocolVersion: 2\r\n    }\r\n  },\r\n  timeout: 3000\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/config.js","const methods = require('./methods');\nconst constants = require('./constants');\nconst GSSCreator = require('./GSS');\n\nfunction CRM(agm, config) {  \n  const ContactController = require('./Controllers/ContactController.js')(agm, config);\n  const AccountController = require('./Controllers/AccountController.js')(agm, config);\n  const availableMethods = getMethods(config.side);\n  \n  const GSS = GSSCreator(agm, config);\n\n  return {\n    GetContact: ContactController.get,\n    CreateContact: ContactController.create,\n    ResolveContact: ContactController.resolve,\n    UpdateContact: ContactController.update,\n    DeleteContact: ContactController.delete,\n    SyncContact: ContactController.sync,\n    LogContactCall: ContactController.logCall,\n    CreateAccount: AccountController.create,\n    GetAccount: AccountController.get,\n    ResolveAccount: AccountController.resolve,\n    UpdateAccount: AccountController.update,\n    DeleteAccount: AccountController.delete,\n    SyncAccount: AccountController.sync,\n    QueryAccount: (query) => {\n      return GSS.search('T42.Account', query)\n    },\n    QueryContact: (query) => {\n      return GSS.search('T42.Contact', query)\n    },\n    ResolveAccountContactList: AccountController.resolveContactList,\n    on(name, handler) {\n      const method = availableMethods.find(m => m.name === constants.CRM_PREFIX + name);\n      if (!method) throw new Error(`Unsupported method: ${name}`);\n      agm.registerAsync(method, handler)\n    },\n    onSearch: GSS.addEntityType\n  }\n}\n\nfunction getMethods(side) {\n  return methods.filter(\n    method => (method.side === 'both' || method.side === side)\n  );\n}\n\nmodule.exports = CRM;\n\n\n// WEBPACK FOOTER //\n// ./src/crm.js","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tick42-glue-core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tick42-glue-core\"] = factory();\n\telse\n\t\troot[\"tick42-glue-core\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 43);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction createRegistry() {\r\n    var callbacks = {};\r\n    function add(key, callback) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            allForKey = allForKey.filter(function (item) {\r\n                return item !== callback;\r\n            });\r\n            callbacks[key] = allForKey;\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute\r\n    };\r\n}\r\n;\r\ncreateRegistry.default = createRegistry;\r\nmodule.exports = createRegistry;\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shortid = __webpack_require__(7);\n\nmodule.exports = function () {\n    'use strict';\n    return shortid();\n};\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/*\n* Helper functions used only in this protocol.\n* */\n\nfunction convertInfoToInstance(info) {\n    'use strict';\n\n    if (typeof info !== 'object') {\n        info = {};\n    }\n\n    return {\n        application: info.ApplicationName,\n        environment: info.Environment,\n        machine: info.MachineName,\n        pid: info.ProcessId,\n        region: info.Region,\n        service: info.ServiceName,\n        user: info.UserName,\n        started: info.ProcessStartTime\n    }\n}\n\nfunction isStreamingFlagSet(flags) {\n    'use strict';\n\n    if (typeof flags !== 'number' || isNaN(flags)) {\n        return false;\n    }\n\n    // checking the largest Bit using bitwise ops\n    var mask = 32;\n    var result = flags & mask;\n\n    return result === mask;\n}\n\nmodule.exports =  {\n    isStreamingFlagSet: isStreamingFlagSet,\n    convertInfoToInstance: convertInfoToInstance\n};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar randomFromSeed = __webpack_require__(17);\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (promise, successCallback, errorCallback) {\r\n    'use strict';\r\n    if (typeof successCallback !== 'function' && typeof errorCallback !== 'function') {\r\n        return promise;\r\n    }\r\n\r\n    if (typeof successCallback !== 'function') {\r\n        successCallback = function () { };\r\n    } else if (typeof errorCallback !== 'function') {\r\n        errorCallback = function () { };\r\n    }\r\n\r\n    promise.then(successCallback, errorCallback);\r\n}\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"_from\": \"tick42-agm@3.5.10\",\n\t\"_id\": \"tick42-agm@3.5.10\",\n\t\"_inBundle\": false,\n\t\"_integrity\": \"sha1-oJsRPWiE730kK+SYY8rD1CjjfLs=\",\n\t\"_location\": \"/tick42-agm\",\n\t\"_phantomChildren\": {},\n\t\"_requested\": {\n\t\t\"type\": \"version\",\n\t\t\"registry\": true,\n\t\t\"raw\": \"tick42-agm@3.5.10\",\n\t\t\"name\": \"tick42-agm\",\n\t\t\"escapedName\": \"tick42-agm\",\n\t\t\"rawSpec\": \"3.5.10\",\n\t\t\"saveSpec\": null,\n\t\t\"fetchSpec\": \"3.5.10\"\n\t},\n\t\"_requiredBy\": [\n\t\t\"#USER\",\n\t\t\"/\"\n\t],\n\t\"_resolved\": \"http://repo.tick42.com:8081/artifactory/api/npm/tick42-npm/tick42-agm/-/tick42-agm-3.5.10.tgz\",\n\t\"_shasum\": \"a09b113d6884ef7d242be49863cac3d428e37cbb\",\n\t\"_spec\": \"tick42-agm@3.5.10\",\n\t\"_where\": \"D:\\\\work\\\\stash\\\\GLUE-dev\\\\dev\\\\node_modules\\\\tick42-glue-core\",\n\t\"author\": {\n\t\t\"name\": \"Tick42\",\n\t\t\"url\": \"http://www.tick42.com\"\n\t},\n\t\"bundleDependencies\": false,\n\t\"dependencies\": {\n\t\t\"callback-registry\": \"^2.2.7\",\n\t\t\"shortid\": \"^2.2.6\",\n\t\t\"util-deprecate\": \"^1.0.2\"\n\t},\n\t\"deprecated\": false,\n\t\"description\": \"JavaScript AGM\",\n\t\"devDependencies\": {\n\t\t\"babel-core\": \"^6.25.0\",\n\t\t\"babel-loader\": \"^6.2.5\",\n\t\t\"babel-plugin-add-module-exports\": \"^0.2.1\",\n\t\t\"babel-plugin-es6-promise\": \"^1.0.0\",\n\t\t\"babel-preset-es2015\": \"^6.16.0\",\n\t\t\"babel-preset-stage-2\": \"^6.22.0\",\n\t\t\"blanket\": \"^1.1.6\",\n\t\t\"bluebird\": \"^2.9.30\",\n\t\t\"docdash\": \"^0.4.0\",\n\t\t\"eslint\": \"^3.1.1\",\n\t\t\"eslint-config-standard\": \"^5.3.5\",\n\t\t\"eslint-config-tick42\": \"^1.0.6\",\n\t\t\"eslint-plugin-promise\": \"^2.0.0\",\n\t\t\"eslint-plugin-standard\": \"^2.0.0\",\n\t\t\"http-server\": \"^0.9.0\",\n\t\t\"minifyify\": \"^7.3.2\",\n\t\t\"onchange\": \"^2.1.2\",\n\t\t\"phantomjs\": \"^1.9.12\",\n\t\t\"pre-commit\": \"^1.1.3\",\n\t\t\"qunitjs\": \"^1.15.0\",\n\t\t\"shelljs\": \"^0.6.0\",\n\t\t\"tick42-webpack-config\": \"^1.3.1\",\n\t\t\"webpack\": \"2.3.3\"\n\t},\n\t\"keywords\": [\n\t\t\"agm\",\n\t\t\"javascript\",\n\t\t\"library\"\n\t],\n\t\"main\": \"src/main.js\",\n\t\"name\": \"tick42-agm\",\n\t\"precommit\": \"eslint\",\n\t\"scripts\": {\n\t\t\"build\": \"npm run eslint && webpack\",\n\t\t\"eslint\": \"eslint library\",\n\t\t\"eslint:fix\": \"eslint library --fix\",\n\t\t\"generate-docs\": \"jsdoc -c jsdoc-config.json\",\n\t\t\"prepublish\": \"npm update & npm run build\",\n\t\t\"serve\": \"http-server -p 8000 -a 127.0.0.1\",\n\t\t\"test\": \"npm run eslint && mocha --require ./test/test_helper \\\"test/**/*.js\\\"\",\n\t\t\"watch\": \"onchange \\\"./library/**/*.js\\\" -iv -e \\\"./bin\\\" -- npm run build\",\n\t\t\"watch-docs\": \"onchange \\\"./library/*.js\\\" -iv -e \\\"./bin\\\" -- npm run generate-docs\"\n\t},\n\t\"title\": \"Tick42 AGM\",\n\t\"types\": \"types/index.d.ts\",\n\t\"version\": \"3.5.10\"\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = __webpack_require__(14);\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tick42_metrics_1 = __webpack_require__(40);\r\nvar tick42_gateway_connection_1 = __webpack_require__(38);\r\nvar tick42_logger_1 = __webpack_require__(39);\r\nvar tick42_agm_1 = __webpack_require__(27);\r\nvar config_1 = __webpack_require__(41);\r\nvar dummyConnection_1 = __webpack_require__(42);\r\nvar timer_1 = __webpack_require__(44);\r\nvar es6_promise_1 = __webpack_require__(9);\r\nvar GlueCore = function (userConfig, ext) {\r\n    var glueInitTimer = timer_1.default();\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    var internalConfig = config_1.default(userConfig, ext);\r\n    // Init the GLUE namespace\r\n    var hc = typeof window !== \"undefined\" && window.htmlContainer;\r\n    var _connection;\r\n    var _agm;\r\n    var _logger;\r\n    var _rootMetrics;\r\n    var _metrics;\r\n    var libs = {};\r\n    function registerLib(name, inner, timer) {\r\n        inner.initStartTime = timer.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(function () {\r\n                inner.initTime = timer.stop();\r\n                inner.initEndTime = timer.endTime;\r\n            });\r\n        }\r\n        else {\r\n            inner.initTime = timer.stop();\r\n            inner.initEndTime = timer.endTime;\r\n        }\r\n        libs[name] = inner;\r\n    }\r\n    function setupConnection() {\r\n        var initTimer = timer_1.default();\r\n        internalConfig.connection.logger = _logger.subLogger(\"connection\");\r\n        _connection = tick42_gateway_connection_1.default(internalConfig.connection);\r\n        // gwProtocolVersion 2 requires auth (TODO - we should change 3 to be the same)\r\n        if (internalConfig.connection) {\r\n            if (!internalConfig.auth && internalConfig.connection.protocolVersion > 1) {\r\n                es6_promise_1.Promise.reject(\"You need to provide auth information\");\r\n            }\r\n        }\r\n        if (!internalConfig.auth) {\r\n            registerLib(\"connection\", _connection, initTimer);\r\n            return es6_promise_1.Promise.resolve({});\r\n        }\r\n        // now do the login\r\n        return new es6_promise_1.Promise(function (resolve, reject) {\r\n            var authRequest;\r\n            if (typeof internalConfig.auth === \"string\" || typeof internalConfig.auth === \"number\") {\r\n                authRequest = {\r\n                    token: internalConfig.auth\r\n                };\r\n            }\r\n            else if (Object.prototype.toString.call(internalConfig.auth) === \"[object Object]\") {\r\n                authRequest = internalConfig.auth;\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth object - \" + JSON.stringify(internalConfig.auth));\r\n            }\r\n            _connection.login(authRequest)\r\n                .then(function (identity) {\r\n                if (identity) {\r\n                    if (identity.machine) {\r\n                        internalConfig.agm.instance.machine = identity.machine;\r\n                    }\r\n                    if (identity.username) {\r\n                        internalConfig.agm.instance.user = identity.username;\r\n                    }\r\n                }\r\n                registerLib(\"connection\", _connection, initTimer);\r\n                resolve(internalConfig);\r\n            })\r\n                .catch(function (err) {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function setupLogger() {\r\n        // Logger\r\n        var initTimer = timer_1.default();\r\n        var loggerConfig = {\r\n            identity: internalConfig.metrics.identity,\r\n            getConnection: function () {\r\n                return _connection || dummyConnection_1.default;\r\n            },\r\n            publish: internalConfig.logger.publish || \"off\",\r\n            console: internalConfig.logger.console || \"info\",\r\n            metrics: internalConfig.logger.metrics || \"off\"\r\n        };\r\n        _logger = tick42_logger_1.default(loggerConfig);\r\n        registerLib(\"logger\", _logger, initTimer);\r\n        return es6_promise_1.Promise.resolve(undefined);\r\n    }\r\n    function setupMetrics() {\r\n        var initTimer = timer_1.default();\r\n        _rootMetrics = tick42_metrics_1.default({\r\n            identity: internalConfig.metrics.identity,\r\n            connection: internalConfig.metrics ? _connection : dummyConnection_1.default,\r\n            logger: _logger.subLogger(\"metrics\")\r\n        });\r\n        _metrics = _rootMetrics.subSystem(\"App\");\r\n        _logger.metricsLevel(\"warn\", _metrics.parent.subSystem(\"LogEvents\"));\r\n        registerLib(\"metrics\", _metrics, initTimer);\r\n        return es6_promise_1.Promise.resolve(undefined);\r\n    }\r\n    function setupAGM() {\r\n        var initTimer = timer_1.default();\r\n        // AGM\r\n        var agmConfig = {\r\n            instance: internalConfig.agm.instance,\r\n            connection: _connection,\r\n            metrics: _rootMetrics.subSystem(\"AGM\"),\r\n            logger: _logger.subLogger(\"agm\")\r\n        };\r\n        return new es6_promise_1.Promise(function (resolve, reject) {\r\n            tick42_agm_1.default(agmConfig)\r\n                .then(function (agmLib) {\r\n                _agm = agmLib;\r\n                registerLib(\"agm\", _agm, initTimer);\r\n                resolve(internalConfig);\r\n            })\r\n                .catch(function (err) {\r\n                return reject(err);\r\n            });\r\n        });\r\n    }\r\n    function setupExternalLibs(externalLibs) {\r\n        try {\r\n            externalLibs.forEach(function (lib) {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n            return es6_promise_1.Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return es6_promise_1.Promise.reject(e);\r\n        }\r\n    }\r\n    function setupExternalLib(name, createCallback) {\r\n        var initTimer = timer_1.default();\r\n        var lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n    function waitForLibs() {\r\n        // get all libs that have ready promises and wait for these to be ready\r\n        var libsReadyPromises = Object.keys(libs).map(function (key) {\r\n            var lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : es6_promise_1.Promise.resolve();\r\n        });\r\n        return es6_promise_1.Promise.all(libsReadyPromises);\r\n    }\r\n    function constructGlueObject() {\r\n        var feedbackFunc = function () {\r\n            if (!_agm) {\r\n                return;\r\n            }\r\n            _agm.invoke(\"T42.ACS.Feedback\", {}, \"best\");\r\n        };\r\n        var info = { glueVersion: internalConfig.version };\r\n        glueInitTimer.stop();\r\n        var glue = {\r\n            feedback: feedbackFunc,\r\n            info: info,\r\n            version: internalConfig.version,\r\n            userConfig: userConfig\r\n        };\r\n        // ver performance\r\n        glue.performance = {\r\n            get browser() {\r\n                return window.performance.timing;\r\n            },\r\n            get memory() {\r\n                return window.performance.memory;\r\n            },\r\n            get initTimes() {\r\n                var result = Object.keys(glue)\r\n                    .filter(function (key) {\r\n                    if (key === \"initTimes\") {\r\n                        return false;\r\n                    }\r\n                    return glue[key].initTime;\r\n                })\r\n                    .map(function (key) {\r\n                    return {\r\n                        name: key,\r\n                        time: glue[key].initTime,\r\n                        startTime: glue[key].initStartTime,\r\n                        endTime: glue[key].initEndTime\r\n                    };\r\n                });\r\n                // add glue\r\n                result.push({\r\n                    name: \"glue\",\r\n                    startTime: glueInitTimer.startTime,\r\n                    endTime: glueInitTimer.endTime,\r\n                    time: glueInitTimer.period\r\n                });\r\n                return result;\r\n            }\r\n        };\r\n        // attach each lib to glue && attach versions to info object\r\n        Object.keys(libs).forEach(function (key) {\r\n            var lib = libs[key];\r\n            glue[key] = lib;\r\n            info[key] = lib.version;\r\n        });\r\n        // push perf data to hc if needed\r\n        if (hc && hc.perfDataNeeded && hc.updatePerfData) {\r\n            var delay = hc.perfDataDelay || 100;\r\n            setTimeout(function () {\r\n                hc.updatePerfData(glue.performance);\r\n            }, delay);\r\n        }\r\n        // construct the config object to be exposed to end user\r\n        // transfer config keys from internalConfig and then ext\r\n        glue.config = {};\r\n        if (ext.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n        Object.keys(internalConfig).forEach(function (k) {\r\n            glue.config[k] = internalConfig[k];\r\n        });\r\n        if (ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach(function (k) {\r\n                glue.config[k] = ext.extOptions[k];\r\n            });\r\n        }\r\n        return glue;\r\n    }\r\n    return setupLogger()\r\n        .then(setupConnection)\r\n        .then(setupMetrics)\r\n        .then(setupAGM)\r\n        .then(function () {\r\n        return setupExternalLibs(internalConfig.libs || []);\r\n    })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch(function (err) {\r\n        // if there is some some error include the libs object for debugging purposes\r\n        return es6_promise_1.Promise.reject({\r\n            err: err,\r\n            libs: libs\r\n        });\r\n    });\r\n};\r\nexports.default = GlueCore;\r\n//# sourceMappingURL=glue.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {var require;/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.1.0\n */\n\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = __webpack_require__(45);\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n      GET_THEN_ERROR.error = null;\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n//# sourceMappingURL=es6-promise.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11), __webpack_require__(0)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"tick42-glue-core\",\n\t\"version\": \"3.3.3\",\n\t\"description\": \"Glue42 core library including logger, connection, agm and metrics\",\n\t\"main\": \"./dist/node/tick42-glue-core.js\",\n\t\"types\": \"./glue.d.ts\",\n\t\"browser\": \"./dist/web/tick42-glue-core.js\",\n\t\"scripts\": {\n\t\t\"init-dev-mode\": \"node ./build/scripts/init-dev-mode.js\",\n\t\t\"remove-installed-dependencies\": \"node ./build/scripts/remove-installed-dependencies.js\",\n\t\t\"clean\": \"node ./build/scripts/clean.js\",\n\t\t\"pre:build\": \"npm run tslint && tsc && set NODE_ENV=development && npm run clean\",\n\t\t\"file-versionify\": \"node ./build/scripts/file-versionify.js\",\n\t\t\"tslint\": \"tslint -t codeFrame ./src/main.ts\",\n\t\t\"tslint:fix\": \"tslint -t codeFrame --fix ./src/main.ts\",\n\t\t\"watch\": \"onchange ./src/**/*.ts -- npm run build:dev\",\n\t\t\"build:dev\": \"npm run pre:build && set NODE_ENV=development && webpack && npm run file-versionify && npm run types\",\n\t\t\"build:prod\": \"npm run pre:build && set NODE_ENV=development && webpack && set NODE_ENV=production && webpack && npm run file-versionify\",\n\t\t\"docs\": \"typedoc --options typedoc.json ./src\",\n\t\t\"prepublish\": \"npm run build:prod && npm run test:only\",\n\t\t\"types\": \"node ./build/scripts/copy-types.js\",\n\t\t\"test\": \"npm run build:dev && mocha ./tests\",\n\t\t\"test:only\": \"mocha ./tests\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://stash.tick42.com/scm/tg/js-glue-core.git\"\n\t},\n\t\"author\": {\n\t\t\"name\": \"Tick42\",\n\t\t\"url\": \"http://www.glue42.com\"\n\t},\n\t\"license\": \"ISC\",\n\t\"dependencies\": {\n\t\t\"shortid\": \"2.2.6\",\n\t\t\"tick42-agm\": \"^3.5.10\",\n\t\t\"tick42-gateway-connection\": \"2.2.10\",\n\t\t\"tick42-logger\": \"^3.0.8\",\n\t\t\"tick42-metrics\": \"^2.3.4\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@types/es6-promise\": \"0.0.32\",\n\t\t\"@types/shortid\": \"0.0.29\",\n\t\t\"archiver\": \"^1.3.0\",\n\t\t\"babel-core\": \"^6.25.0\",\n\t\t\"babel-loader\": \"^6.4.1\",\n\t\t\"babel-plugin-add-module-exports\": \"^0.2.1\",\n\t\t\"babel-plugin-es6-promise\": \"^1.0.0\",\n\t\t\"babel-preset-es2015\": \"^6.16.0\",\n\t\t\"babel-preset-stage-2\": \"^6.22.0\",\n\t\t\"chai\": \"^4.0.2\",\n\t\t\"es6-promise\": \"^4.1.0\",\n\t\t\"mocha\": \"^2.5.3\",\n\t\t\"onchange\": \"3.*\",\n\t\t\"pre-commit\": \"^1.1.3\",\n\t\t\"readline-sync\": \"^1.4.5\",\n\t\t\"shelljs\": \"^0.6.0\",\n\t\t\"tick42-gateway\": \"^0.2.28\",\n\t\t\"tick42-webpack-config\": \"4.1.6\",\n\t\t\"tslint\": \"^5.4.3\",\n\t\t\"typedoc\": \"^0.5.10\",\n\t\t\"typescript\": \"2.3.0\",\n\t\t\"webpack\": \"2.3.3\"\n\t}\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar alphabet = __webpack_require__(4);\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar randomByte = __webpack_require__(16);\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar alphabet = __webpack_require__(4);\nvar encode = __webpack_require__(13);\nvar decode = __webpack_require__(12);\nvar isValid = __webpack_require__(15);\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = __webpack_require__(18) || 0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar alphabet = __webpack_require__(4);\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 0;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// This module handles AGM method invocations - validating inputs and delegating to protocol\nvar random = __webpack_require__(2);\n\nmodule.exports = function (protocol) {\n    'use strict';\n\n    /** Store pending callback **/\n    var pendingCallbacks = {};\n\n    /**\n     * Invokes an AGM method to a single AGM server, given valid input.\n     * @param method\n     * @param argumentsObj\n     * @param target\n     * @param stuff\n     * @param success\n     * @param error\n     */\n    function invoke(method, argumentsObj, target, stuff, success, error) {\n        // Generate a unique invocation ID, for this invocation\n        var invocationId = random();\n\n        // Register the user's callbacks\n        registerInvocation(invocationId, {\n            method: method,\n            calledWith: argumentsObj\n        }, success, error, stuff.method_response_timeout);\n\n        protocol.invoke(invocationId, method, argumentsObj, target, stuff);\n    }\n\n    /**\n     * Register invocation so we can find it later when invocation result is received\n     * @param invocationId\n     * @param response\n     * @param success\n     * @param error\n     * @param timeout\n     */\n    function registerInvocation(invocationId, response, success, error, timeout) {\n        // Adds the callbacks\n        pendingCallbacks[invocationId] = { response: response, success: success, error: error };\n        // Schedules to throw a timeout if nobody answers\n        setTimeout(function () {\n            if (pendingCallbacks[invocationId] === undefined) {\n                return;\n            }\n            error({\n                method: response.method,\n                called_with: response.calledWith,\n                message: 'Timeout reached'\n            });\n            delete pendingCallbacks[invocationId];\n        }, timeout);\n    }\n\n    /**\n     * Process invocation result received from protocl\n     * @param invocationId\n     * @param executedBy\n     * @param status\n     * @param result\n     * @param resultMessage\n     */\n    function processInvocationResult(invocationId, executedBy, status, result, resultMessage) {\n        // Finds the appropriate callback\n        var callback = pendingCallbacks[invocationId];\n        if (callback === undefined) {\n            return;\n        }\n        // If the server returned success, execute the success callback\n        if (status === 0 && typeof callback.success === 'function') {\n\n            // Execute the success callback\n            callback.success({\n                method: callback.response.method.info,\n                called_with: callback.response.calledWith,\n                executed_by: executedBy,\n                returned: result,\n                message: resultMessage\n                // log_details: message.ResultLogDetails\n            });\n            // Else, return an error\n        } else if (typeof callback.error === 'function') {\n\n            callback.error({\n                method: callback.response.method.info,\n                called_with: callback.response.calledWith,\n                executed_by: executedBy,\n                message: resultMessage,\n                // log_details: message.ResultLogDetails,\n                status: status,\n                returned: result\n            });\n        }\n        // Finally, remove the callbacks\n        delete pendingCallbacks[invocationId];\n    }\n\n    // subscribe for invocation results\n    protocol.onInvocationResult(processInvocationResult);\n\n    return { invoke: invoke };\n};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/*\n  The AGM Client analyses server presences, collects information about their methods and allows users to invoke these methods.\n */\n\nvar ClientInvocationsState = __webpack_require__(19);\nvar promisify = __webpack_require__(5);\n\n/**\n * @module agm\n */\nmodule.exports = function (protocol, repo, instance, configuration) {\n    'use strict';\n\n    // Instantiate the module that handles method execution and responses\n    var clientInvocations = new ClientInvocationsState(protocol);\n\n    function getMethods(methodFilter) {\n        if (methodFilter === undefined) {\n            return repo.getMethods();\n        }\n        if (typeof methodFilter === 'string') {\n            methodFilter = { name: methodFilter };\n        }\n        return repo.getMethods().filter(function (method) {\n            return methodMatch(methodFilter, method.info);\n        });\n    }\n\n    function getMethodsForInstance(instanceFilter) {\n        var allServers = repo.getServers();\n\n        var matchingServers = allServers.filter(function (server) {\n            return instanceMatch(instanceFilter, server.info);\n        });\n\n        if (matchingServers.length === 0) {\n            return [];\n        }\n\n        var resultMethodsObject = {};\n\n        if (matchingServers.length === 1) {\n            resultMethodsObject = matchingServers[0].methods;\n        } else {\n            // we have more than one server matching, join all methods\n            matchingServers.forEach(function (server) {\n                Object.keys(server.methods).forEach(function (methodKey) {\n                    var method = server.methods[methodKey];\n                    resultMethodsObject[method.id] = method.getInfoForUser();\n                })\n            });\n        }\n\n        // transform the object to array\n        return Object.keys(resultMethodsObject)\n            .map(function (key) {\n                return resultMethodsObject[key]\n            });\n    }\n\n    function getServers(methodFilter) {\n        var servers = repo.getServers();\n\n        // No method - get all getServers\n        if (methodFilter === undefined) {\n            return servers.map(function (server) {\n                return { server: server };\n            });\n        }\n        // Non-existing method - return an empty array\n        var methods = getMethods(methodFilter);\n        if (methods === undefined) {\n            return [];\n        }\n\n        return servers.reduce(function (prev, current) {\n\n            var methods = repo.getServerMethodsById(current.id);\n\n            var matchingMethods = methods.filter(function (method) {\n                return methodMatch(methodFilter, method.info);\n            });\n\n            if (matchingMethods.length > 0) {\n                prev.push({ server: current, methods: matchingMethods });\n            }\n\n            return prev;\n        }, []);\n    }\n\n    /**\n     * Returns an array of server-methods pairs for all servers that match the target and have at lease one method matching the method filter\n     * @private\n     * @param methodFilter\n     * @param target\n     * @returns {*}\n     */\n    function getServerMethodsByFilterAndTarget(methodFilter, target) {\n        // get all servers that have method(s) matching the filter\n        var serversMethodMap = getServers(methodFilter);\n        // filter the server-method map by target\n        return filterByTarget(target, serversMethodMap);\n    }\n\n    /**\n     * Invokes an AGM method\n     * @param {MethodDefinition} methodFilter Method to invoke\n     * @param {Object} argumentObj Arguments for the invocation\n     * @param {Instance|Instance[]|string} [target] Defines which server(s) to target with the invocation - can be one of:\n     * * ’best' - executes the method on the best (or first) server\n     * * 'all' - executes the method on all servers offering it\n     * * AGM instance (or a subset, used for filtering), e.g. { application: 'appName' }\n     * * an array of AGM instances/filters\n     * @param {InvocationOptions} [additionalOptions] Additional options for the invocation\n     * @param {function} [success] - (use this if you prefer callback style instead of promises)\n     * Callback that will be called with {@link InvocationResult} object when the invocation is successful\n     * @param {function} [error] -  (use this if you prefer callback style instead of promises)\n     * Callback that will be called with {@link InvocationError} object when the invocation is not successful\n     * @returns {Promise<InvocationResult>}\n     * @example\n     * glue.agm.invoke(\n     *   'Sum',\n     *   { a: 37, b: 5 }) // everything else is optional\n     *   .then(\n     *      function(result) {\n     *      console.log('37 + 5 = ' + result.returned.answer)\n     *   })\n     *   .catch(\n     *      function(err) {\n     *      console.error('Failed to execute Sum' + err.message)\n     *   })\n     **/\n    function invoke(methodFilter, argumentObj, target, additionalOptions, success, error) {\n        var promise = new Promise(function (resolve, reject) {\n            var successProxy, errorProxy;\n\n            successProxy = function (args) {\n                // var parsed = JSON.parse(args);\n                resolve(args);\n            };\n            errorProxy = function (args) {\n                // var parsed = JSON.parse(args);\n                reject(args);\n            };\n            // Add default params\n            if (!argumentObj) {\n                argumentObj = {};\n            }\n            if (!target) {\n                target = 'best';\n            }\n            if (typeof target === 'string' && target !== 'all' && target !== 'best') {\n                reject({ message: '\"' + target + '\" is not a valid target. Valid targets are \"all\" and \"best\".' });\n            }\n            if (!additionalOptions) {\n                additionalOptions = {};\n            }\n\n            if (additionalOptions.method_response_timeout === undefined) {\n                additionalOptions.method_response_timeout = configuration.method_response_timeout;\n            }\n\n            if (additionalOptions.waitTimeoutMs === undefined && additionalOptions.wait_for_method_timeout !== undefined ) {\n                additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;\n            }\n\n            if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== 'number') {\n                reject({ message: '\"' + additionalOptions.waitTimeoutMs + '\" is not a valid number for \\'waitTimeoutMs\\''});\n            }\n\n            if (additionalOptions.waitTimeoutMs === undefined) {\n                additionalOptions.waitTimeoutMs = configuration.wait_for_method_timeout;\n            }\n\n            // Check if the arguments are an object\n            if (typeof argumentObj !== 'object') {\n                reject({ message: 'The method arguments must be an object.' });\n            }\n\n            if (typeof methodFilter === 'string') {\n                methodFilter = { name: methodFilter };\n            }\n\n            var serversMethodMap = getServerMethodsByFilterAndTarget(methodFilter, target);\n\n            if (serversMethodMap.length === 0) {\n\n                invokeUnexisting(methodFilter, argumentObj, target, additionalOptions, successProxy, errorProxy);\n\n            } else if (serversMethodMap.length === 1) {\n\n                var serverMethodPair = serversMethodMap[0];\n                clientInvocations.invoke(serverMethodPair.methods[0], argumentObj, serverMethodPair.server, additionalOptions, successProxy, errorProxy);\n\n            } else {\n\n                invokeOnAll(serversMethodMap, argumentObj, additionalOptions, successProxy, errorProxy);\n\n            }\n        });\n\n        return promisify(promise, success, error);\n    }\n\n    /**\n     * Called when the user tries to invoke a method which does not exist\n     * @private\n     * @param methodFilter\n     * @param argumentObj\n     * @param target\n     * @param additionalOptions\n     * @param success\n     * @param error\n     */\n    function invokeUnexisting(methodFilter, argumentObj, target, additionalOptions, success, error) {\n        if (additionalOptions.waitTimeoutMs === 0) {\n            callError();\n        } else {\n            var delayStep = 500;\n            var delayTillNow = 0;\n\n            setTimeout(function retry() {\n                delayTillNow += delayStep;\n\n                // get all servers that have method(s) matching the filter\n                var serversMethodMap = getServerMethodsByFilterAndTarget(methodFilter, target);\n                if (serversMethodMap.length > 0) {\n                    invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\n                } else if (delayTillNow >= additionalOptions.waitTimeoutMs) {\n                    callError();\n                } else {\n                    setTimeout(retry, delayStep);\n                }\n            }, delayStep);\n        }\n\n        function callError() {\n            error({\n                method: methodFilter,\n                called_with: argumentObj,\n                message: 'Can not find a method matching ' + JSON.stringify(methodFilter) + ' with server filter ' + JSON.stringify(target)\n            });\n        }\n    }\n\n    /**\n     * Calls a method for all servers and unifies the results they return into one:\n     * @private\n     * @param serverMethodsMap\n     * @param argumentObj\n     * @param additionalOptions\n     * @param success\n     * @param error\n     */\n    function invokeOnAll(serverMethodsMap, argumentObj, additionalOptions, success, error) {\n        // Here we will store the results that the getServers return\n        var successes = [];\n        var errors = [];\n        // These are the callbacks\n        var successCallback = function (result) {\n            successes.push(result);\n            sendResponse(successes, errors);\n        };\n        var errorCallback = function (result) {\n            errors.push(result);\n            sendResponse(successes, errors);\n        };\n        // Call the method for all targets\n        serverMethodsMap.forEach(function (serverMethodsPair) {\n            clientInvocations.invoke(serverMethodsPair.methods[0],\n                argumentObj,\n                serverMethodsPair.server,\n                additionalOptions,\n                successCallback,\n                errorCallback);\n        });\n\n        // Calls the main success and error callbacks with the aggregated results\n        function sendResponse() {\n            // wait till everybody is finished\n            if (successes.length + errors.length < serverMethodsMap.length) {\n                return;\n            }\n            // Execute the \"success\" callback\n            if (successes.length !== 0) {\n                var result = successes.reduce(function (obj, success) {\n                    obj.method = success.method;\n                    obj.called_with = success.called_with;\n                    obj.returned = success.returned;\n                    obj.all_return_values.push({\n                        executed_by: success.executed_by,\n                        returned: success.returned\n                    });\n                    obj.executed_by = success.executed_by;\n                    return obj;\n                }, { all_return_values: [] });\n\n                // If we get errors from one of the getServers add them to the success object that will be resolved.\n                if (errors.length !== 0) {\n                    result.all_errors = [];\n                    errors.forEach(function (obj) {\n                        result.all_errors.push({\n                            // executed_by : obj.executed_by, // we don't get executed_by object from the error clientInvocations\n                            name: obj.method.name,\n                            message: obj.message\n                        });\n                    });\n                }\n\n                success(result);\n\n            } else if (errors.length !== 0) { // Execute the \"error\" callback\n                error(errors.reduce(function (obj, error) {\n                    obj.method = error.method;\n                    obj.called_with = error.called_with;\n                    obj.message = error.message;\n                    obj.all_errors.push({\n                        executed_by: error.executed_by,\n                        message: error.message\n                    });\n                    // obj.executed_by = success.executed_by;\n                    return obj;\n                }, { all_errors: [] }));\n            }\n        }\n    }\n\n    /**\n     * Filters an array of servers and returns the ones which match the target criteria\n     * @private\n     * @param target\n     * @param serverMethodMap\n     * @returns {*}\n     * */\n    function filterByTarget(target, serverMethodMap) {\n        // If the user specified target as string:\n        if (typeof target === 'string') {\n            if (target === 'all') {\n                target = serverMethodMap;\n            } else if (target === 'best') {\n                target = serverMethodMap[0] !== undefined ? [serverMethodMap[0]] : [];  // If the user specified the target as server filter\n            }\n        } else {\n            if (!Array.isArray(target)) {\n                target = [target];\n            }\n            // Retrieve all getServers that match the filters\n            target = target.reduce(function (matches, filter) {\n                // Add matches for each filter\n                var myMatches = serverMethodMap.filter(function (serverMethodPair) {\n                    return instanceMatch(filter, serverMethodPair.server.info);\n                });\n                return matches.concat(myMatches);\n            }, []);\n        }\n        return target;\n    }\n\n    /**\n     * Matches a server definition against a server filter\n     * @private\n     * @param instanceFilter\n     * @param instanceDefinition\n     */\n    function instanceMatch(instanceFilter, instanceDefinition) {\n        return containsProps(instanceFilter, instanceDefinition);\n    }\n\n    /**\n     * Matches a method definition against a method filter\n     * @private\n     * @param methodFilter\n     * @param methodDefinition\n     */\n    function methodMatch(methodFilter, methodDefinition) {\n        return containsProps(methodFilter, methodDefinition);\n    }\n\n    /**\n     * Checks if all properties of filter match properties in object\n     * @private\n     * @param filter\n     * @param object\n     * @returns {*}\n     */\n    function containsProps(filter, object) {\n        return Object.keys(filter).reduce(function (match, prop) {\n            // ignore undefined properties\n            if (!filter[prop]) {\n                return match;\n            }\n\n            if (filter[prop].constructor === RegExp) {\n                if (!filter[prop].test(object[prop])) {\n                    return false;\n                } else {\n                    return match;\n                }\n            } else {\n                if (String(filter[prop]).toLowerCase() !== String(object[prop]).toLowerCase()) {\n                    return false;\n                } else {\n                    return match;\n                }\n            }\n        }, true);\n    }\n\n    /**\n     * Subscribes to an AGM streaming method\n     * @param name\n     * @param options\n     * @param successCallback\n     * @param errorCallback\n     * @returns {*}\n     */\n    function subscribe(name, options, successCallback, errorCallback) {\n        // options can have arguments:{}, target: 'best'/'all'/{server_instance}, waitTimeoutMs:3000\n\n        function callProtocolSubscribe(targetServers, stream, options, successProxy, errorProxy) {\n            if (global.console !== undefined && configuration.debug === true) {\n                console.log('>>> Subscribing to \"' + name + '\" on ' + targetServers.length + ' servers');\n            }\n\n            protocol.subscribe(\n                stream,\n                options.arguments,\n                targetServers,\n                { method_response_timeout: options.waitTimeoutMs },\n                successProxy,\n                errorProxy\n            );\n        }\n\n        var promise = new Promise(function (resolve, reject) {\n\n            var successProxy = function (args) {\n                resolve(args);\n            };\n            var errorProxy = function (args) {\n                reject(args);\n            };\n\n            if (options === undefined) {\n                options = {};\n            }\n            var target = options.target;\n            if (target === undefined) {\n                target = 'best';\n            }\n            if (typeof target === 'string' && target !== 'all' && target !== 'best') {\n                reject({ message: '\"' + target + '\" is not a valid target. Valid targets are \"all\", \"best\", or an instance.' });\n            }\n            if (typeof options.waitTimeoutMs !== 'number' || options.waitTimeoutMs !== options.waitTimeoutMs /* NaN */) {\n                options.waitTimeoutMs = configuration.wait_for_method_timeout;\n            }\n\n            var delayStep = 500;\n            var delayTillNow = 0;\n\n            // don't check if the method is streaming or not, subscribing to non-streaming method has to invoke it\n\n            // get all servers that have method(s) matching the filter\n            var currentServers = getServerMethodsByFilterAndTarget({ name: name }, target);\n            if (currentServers.length > 0) {\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], options, successProxy, errorProxy)\n            }else {\n                setTimeout(function retry() {\n                    delayTillNow += delayStep;\n                    // get all servers that have method(s) matching the filter\n                    var currentServers = getServerMethodsByFilterAndTarget({ name: name }, target);\n                    if (currentServers.length > 0) {\n                        var streamInfo = currentServers[0].methods[0];\n                        callProtocolSubscribe(currentServers, streamInfo, options, successProxy, errorProxy)\n                    } else if (delayTillNow >= options.waitTimeoutMs) {\n                        callProtocolSubscribe(currentServers, { name: name }, options, successProxy, errorProxy)\n                    } else {\n                        setTimeout(retry, delayStep);\n                    }\n                }, delayStep);\n            }\n        });\n\n        return promisify(promise, successCallback, errorCallback);\n    }\n\n    return {\n        subscribe: subscribe,\n\n        invoke: invoke,\n\n        /**\n         * Returns all servers. If methodFilter is specified will return a list of servers\n         * having a method matching the filter.\n         * @function servers\n         * @param {MethodDefinition} [methodFilter]\n         * @returns {Instance[]}\n         */\n        servers: function (methodFilter) {\n            return getServers(methodFilter).map(function (serverMethodMap) {\n                return serverMethodMap.server.getInfoForUser();\n            })\n        },\n\n        /**\n         * Returns all methods that match the given filter. If no filter specified returns all methods.\n         *\n         * @function methods\n         * @param {MethodDefinition} [methodFilter] Partial  method definition\n         * @return {ServerMethods[]}- methods for each server that match the filter\n         **/\n        methods: function (methodFilter) {\n            return getMethods(methodFilter).map(function (m) {\n                return m.getInfoForUser()\n            })\n        },\n\n        /**\n         * Returns all agm method registered by some server\n         * @function methodsForInstance\n         * @param {Instance} instance\n         * @returns {ServerMethod[]}\n         */\n        methodsForInstance: function (instance) {\n            return getMethodsForInstance(instance).map(function (m) {\n                return m.getInfoForUser()\n            })\n        },\n\n        /**\n         * Called when a method is added for the first time by any application\n         * @function methodAdded\n         * @param {MethodCallback} callback\n         */\n        methodAdded: function (callback) {\n            repo.onMethodAdded(function (method) {\n                callback(method.getInfoForUser())\n            })\n        },\n\n        /**\n         * Called when a method is removed from the last application offering it\n         * @function methodRemoved\n         * @param {MethodCallback} callback\n         */\n        methodRemoved: function (callback) {\n            repo.onMethodRemoved(function (method) {\n                callback(method.getInfoForUser())\n            })\n        },\n\n        /**\n         * Called when an application offering methods (server) is discovered\n         * @param {InstanceCallback} callback Callback that will be invoked with the {@link Instance} of the new sever\n         */\n        serverAdded: function (callback) {\n            repo.onServerAdded(function (server) {\n                callback(server.getInfoForUser())\n            })\n        },\n\n        /**\n         * Called when an app offering methods stops offering them or exits\n         * @param {InstanceCallback} callback Callback that will be invoked with the {@link Instance} of the removed server\n         */\n        serverRemoved: function (callback) {\n            repo.onServerRemoved(function (server, reason) {\n                callback(server.getInfoForUser(), reason)\n            })\n        },\n\n\n        /**\n         * Called when a method is offered by an application. This will be called for each server offering the method\n         * where {@link methodAdded} will be called only for the first time the method is registered.\n         *\n         * @param {ServerMethodCallback} callback\n         */\n        serverMethodAdded: function (callback) {\n            repo.onServerMethodAdded(function (server, method) {\n                callback({ server: server.getInfoForUser(), method: method.getInfoForUser() })\n            })\n        },\n\n        /**\n         * Called when a server stops offering a method\n         * @param {ServerMethodCallback} callback\n         */\n        serverMethodRemoved: function (callback) {\n            repo.onServerMethodRemoved(function (server, method) {\n                callback({ server: server.getInfoForUser(), method: method.getInfoForUser() })\n            })\n        }\n    };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/*\n The AGM instance collects information about the machine we are in,\n and interacts with the .NET gateway in other ways,\n to deliver full AGM compatibility to AGM.JS.\n\n To do so, it relies on the default AGM client.\n */\n\nvar document = global.document || global.process;\nvar random = __webpack_require__(2);\n\nmodule.exports = function (userSubmittedProperties) {\n    'use strict';\n\n    var instance = {};\n    // Generate default instance properties\n    instance.ApplicationName = document.title + random();\n    instance.ProcessId = Math.floor(Math.random() * 10000000000); // PID should be integer for protocolVersion 1\n    instance.ProcessStartTime = new Date().getTime();\n\n    // Apply user-submitted instance properties\n    if (typeof userSubmittedProperties === 'object') {\n        if (userSubmittedProperties.application !== undefined) {\n            instance.ApplicationName = userSubmittedProperties.application;\n        }\n        instance.MachineName = userSubmittedProperties.machine;\n        instance.UserName = userSubmittedProperties.user;\n        instance.Environment = userSubmittedProperties.environment;\n        instance.Region = userSubmittedProperties.region;\n        instance.State = 1;\n    }\n    var identityUpdated = false;\n\n    function updateIdentity(newInstance) {\n        if (identityUpdated) {\n            return;\n        }\n        if (instance.MachineName === undefined) {\n            instance.MachineName = newInstance.MachineName;\n        }\n        if (instance.UserName === undefined) {\n            instance.UserName = newInstance.UserName;\n        }\n        if (instance.Environment === undefined) {\n            instance.Environment = newInstance.Environment;\n        }\n        if (instance.Region === undefined) {\n            instance.Region = newInstance.Region;\n        }\n        if (instance.State === undefined) {\n            instance.State = newInstance.State;\n        }\n        identityUpdated = true;\n    }\n\n    // Create a method for accessing a property\n    function createGetter(property) {\n        return instance[property];\n    }\n\n    // Returns all instance properties\n    function info() {\n        return instance;\n    }\n\n    return {\n        _updateIdentity: updateIdentity,\n        info: info,\n        get application() {\n            return createGetter('ApplicationName');\n        },\n        get pid() {\n            return createGetter('ProcessId');\n        },\n        get user() {\n            return createGetter('UserName');\n        },\n        get machine() {\n            return createGetter('MachineName');\n        }\n    };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var promisify = __webpack_require__(5);\nvar pjson = __webpack_require__(6);\n\nmodule.exports = function (configuration) {\n    'use strict';\n\n    // date parsing\n    var facade = global.htmlContainer.jsAgmFacade;\n    var dateTimeIdentifier = facade.jsonValueDatePrefix;\n    var lenOfIdentifier = dateTimeIdentifier.length;\n\n    function stringToObject(param, stringPropName) {\n        if (typeof param === 'string') {\n            var obj = {};\n            obj[stringPropName] = param;\n            return obj;\n        }\n\n        return param;\n    }\n\n    // helper function for parsing dates properly\n    function agmParse(str) {\n        return JSON.parse(str, function (k, v) {\n            if (typeof v !== 'string') {\n                return v;\n            }\n\n            // pre-seed - this should be a bit faster than indexOf\n            if (v[0] !== dateTimeIdentifier[0]) {\n                return v;\n            }\n\n            if (v.indexOf(dateTimeIdentifier) !== 0) {\n                return v;\n            }\n\n            var unixTimestampMs = v.substr(lenOfIdentifier);\n            return new Date(parseFloat(unixTimestampMs));\n        });\n    }\n\n    /**\n     * Converts a target argument to object ready to be passed to Agm facade\n     * @param target\n     */\n    function targetArgToObject(target) {\n\n        target = target || 'best';\n\n        if (typeof target === 'string') {\n            if (target !== 'all' && target !== 'best') {\n                throw new Error('\"' + target + '\" is not a valid target. Valid targets are \"all\" and \"best\".');\n            }\n            return { target: target };\n        } else {\n            if (!Array.isArray(target)) {\n                target = [target];\n            }\n\n            target = target.map(function (e) {\n                return convertInstanceToRegex(e);\n            });\n\n            return { serverFilter: target };\n        }\n    }\n\n    function convertInstanceToRegex(instance) {\n        var instanceConverted = {};\n\n        Object.keys(instance).forEach(function (key) {\n            var propValue = instance[key];\n            instanceConverted[key] = propValue;\n\n            if (typeof propValue === 'undefined' || propValue === null) {\n                return;\n            }\n\n            if (typeof propValue === 'string' && propValue !== '') {\n                // do exact matching if user passed a string\n                instanceConverted[key] = '^' + instance[key] + '$';\n            } else if (instance[key].constructor === RegExp) {\n                instanceConverted[key] = instance[key].source;\n            } else {\n                instanceConverted[key] = instance[key];\n            }\n        });\n        return instanceConverted;\n    }\n\n    function validateMethodInfo(methodInfo) {\n        if (typeof methodInfo === 'undefined') {\n            throw Error('methodInfo is required argument');\n        }\n\n        if (!methodInfo.name) {\n            throw Error('methodInfo object must contain name property');\n        }\n\n        if (methodInfo.objectTypes) {\n            methodInfo.object_types = methodInfo.objectTypes;\n        }\n\n        if (methodInfo.displayName) {\n            methodInfo.display_name = methodInfo.displayName;\n        }\n    }\n\n    return new Promise(function (resolve, reject) {\n        var result = {\n\n            version: pjson.version,\n\n            // Registers a JavaScript function as an AGM method, thus making it available other AGM instances on the same transport.\n            register: function (methodInfo, callback) {\n                var methodInfoAsObject = stringToObject(methodInfo, 'name');\n                validateMethodInfo(methodInfoAsObject);\n\n                var pv = this.agmFacade.protocolVersion;\n                if (pv && pv >= 3) {\n                    // for newer HC use the version where we don't pass arguments as JSON (because of different issues)\n                    this.agmFacade.register(JSON.stringify(methodInfoAsObject),\n                        callback,\n                        true); // return as objects\n                } else {\n                    this.agmFacade.register(JSON.stringify(methodInfoAsObject),\n                        function (arg) {\n                            var result = callback(JSON.parse(arg), arguments[1]);\n                            return JSON.stringify(result);\n                        });\n                }\n            },\n\n            registerAsync: function (methodInfo, callback) {\n                if (!this.agmFacade.registerAsync) {\n                    throw new Error('not supported in that version of HtmlContainer');\n                }\n\n                var methodInfoAsObject = stringToObject(methodInfo, 'name');\n                validateMethodInfo(methodInfoAsObject);\n\n                this.agmFacade.registerAsync(methodInfoAsObject,\n                    function (args, instance, tracker) {\n                        // execute the user callback\n                        callback(args,\n                            instance,\n                            function (successArgs) {\n                                tracker.success(successArgs);\n                            },\n                            function (error) {\n                                tracker.error(error)\n                            });\n                    });\n            },\n\n            unregister: function (methodFilter) {\n                this.agmFacade.unregister(JSON.stringify(stringToObject(methodFilter, 'name')));\n            },\n\n            // Invokes an AGM method asynchronously.\n            invoke: function (methodFilter, args, target, options, successCallback, errorCallback) {\n\n                var promise = new Promise(function (resolve, reject) {\n\n                    if (args === undefined) {\n                        args = {};\n                    }\n\n                    if (typeof args !== 'object') {\n                        reject({ message: 'The method arguments must be an object.' });\n                    }\n\n                    if (options === undefined) {\n                        options = {};\n                    }\n\n                    target = targetArgToObject(target);\n\n                    if (this.agmFacade.invoke2) {\n                        // invoke ver2 - do not stringify arguments and result values\n                        this.agmFacade.invoke2(\n                            JSON.stringify(stringToObject(methodFilter, 'name')),\n                            args,\n                            JSON.stringify(target),\n                            JSON.stringify(options),\n                            function (args) {\n                                resolve(args)\n                            },\n                            function (err) {\n                                reject(err)\n                            }\n                        );\n                    } else {\n                        var successProxy, errorProxy;\n\n                        successProxy = function (args) {\n                            var parsed = JSON.parse(args);\n                            resolve(parsed);\n                        };\n                        errorProxy = function (args) {\n                            var parsed = JSON.parse(args);\n                            reject(parsed);\n                        };\n                        this.agmFacade.invoke(\n                            JSON.stringify(stringToObject(methodFilter, 'name')),\n                            JSON.stringify(args),\n                            JSON.stringify(target),\n                            JSON.stringify(options),\n                            successProxy,\n                            errorProxy\n                        );\n                    }\n\n                }.bind(this));\n\n                return promisify(promise, successCallback, errorCallback);\n            },\n\n            // Registers a handler which notifies you when a new AGM method is available.\n            methodAdded: function (callback) {\n                this.agmFacade.methodAdded(callback);\n            },\n\n            // Registers a handler which notifies you when an AGM method stops being available.\n            methodRemoved: function (callback) {\n                this.agmFacade.methodRemoved(callback);\n            },\n\n            serverAdded: function (callback) {\n                this.agmFacade.serverAdded(callback);\n            },\n\n            serverRemoved: function (callback) {\n                this.agmFacade.serverRemoved(callback);\n            },\n\n            serverMethodAdded: function (callback) {\n                this.agmFacade.serverMethodAdded(callback);\n            },\n\n            serverMethodRemoved: function (callback) {\n                this.agmFacade.serverMethodRemoved(callback);\n            },\n\n            // Retrieves a list of AGM servers (instances) optionally filtered by method.\n            servers: function (methodFilter) {\n                var jsonResult = this.agmFacade.servers(JSON.stringify(stringToObject(methodFilter, 'name')));\n                var parsedResult = agmParse(jsonResult);\n                parsedResult.forEach(function(server) {\n                    server.getMethods = function() {\n                        return this.methodsForInstance(server);\n                    }.bind(this);\n                    server.getStreams = function() {\n                        return this.methodsForInstance(server).filter(function (method) {\n                            return method.supportsStreaming;\n                        });\n                    }.bind(this);\n                }, this);\n                return parsedResult;\n            },\n\n            // Retrieves a list of methods that matches a given filter. You can use this to check if a given method exists.\n            methods: function (methodFilter) {\n                var jsonResult = this.agmFacade.methods(JSON.stringify(stringToObject(methodFilter, 'name')));\n                var parsedResult = agmParse(jsonResult);\n                parsedResult.forEach(function (method) {\n                    method.displayName = method.display_name;\n                    method.objectTypes = method.object_types;\n                    method.getServers = function () {\n                        return this.servers(method.name);\n                    }.bind(this);\n                }, this);\n                return parsedResult;\n            },\n\n            methodsForInstance: function (instanceFilter) {\n                var jsonResult = this.agmFacade.methodsForInstance(JSON.stringify(instanceFilter));\n                return agmParse(jsonResult);\n            },\n\n            // streaming support\n            subscribe: function (name, options, successCallback, errorCallback) {\n                var promise = new Promise(function (resolve, reject) {\n                    if (options === undefined) {\n                        options = {};\n                    }\n                    options.args = JSON.stringify(options.arguments || {});\n                    options.target = targetArgToObject(options.target);\n\n                    this.agmFacade.subscribe2(name,\n                        JSON.stringify(options),\n                        function (stream) {\n                            resolve(stream);\n                        },\n                        function (error) {\n                            reject(error);\n                        }\n                    );\n                }.bind(this));\n\n                return promisify(promise, successCallback, errorCallback);\n            },\n\n            createStream: function (streamDef, callbacks, successCallback, errorCallback) {\n                var promise = new Promise(function (resolve, reject) {\n                    if (typeof streamDef === 'string') {\n                        streamDef = { name: streamDef };\n                    }\n\n                    if (!callbacks) {\n                        callbacks = {};\n                    }\n\n                    this.agmFacade.createStream2(\n                        JSON.stringify(streamDef),\n                        // TODO - wrap to transform params\n                        callbacks.subscriptionRequestHandler,\n                        // TODO - wrap to transform params\n                        callbacks.subscriptionAddedHandler,\n                        // TODO - wrap to transform params\n                        callbacks.subscriptionRemovedHandler,\n                        // success handler\n                        function (stream) {\n                            resolve(stream);\n                        },\n                        // error handler\n                        function (error) {\n                            reject(error);\n                        }\n                    );\n                }.bind(this));\n\n                return promisify(promise, successCallback, errorCallback);\n            }\n        };\n\n        // add metrics\n        if (configuration !== undefined && configuration.metrics !== undefined) {\n            configuration.metrics.metricsIdentity = configuration.metrics.identity;\n\n            // quick and dirty - we need to stringify the configuration so we need to replace the metrics object (which has circular references)\n            // with an object that holds only the properties needed\n            var metricsConfig = {\n                metricsIdentity: configuration.metrics.metricsIdentity,\n                path: configuration.metrics.path\n            };\n            configuration.metrics = metricsConfig;\n        }\n        // remove the logger - we don't need it in HC and has circular references\n        delete configuration.logger;\n\n        // create new AGM façade for this instance\n        var successInit = function(instance) {\n\n            result.instance = instance;\n            result.agmFacade = facade;\n\n            // deprecated API\n            result.create_stream = result.createStream;\n            result.methods_for_instance = result.methodsForInstance;\n            result.method_added = result.methodAdded;\n            result.method_removed = result.methodRemoved;\n            result.server_added = result.serverAdded;\n            result.server_removed = result.serverRemoved;\n            result.server_method_added = result.serverMethodAdded;\n            result.server_method_removed = result.serverMethodRemoved;\n\n            resolve(result);\n        };\n\n        var cfgAsString = JSON.stringify(configuration);\n        var pv = facade.protocolVersion;\n\n        if (pv && pv >= 5 && facade.initAsync) {\n            facade.initAsync(cfgAsString,\n                successInit,\n                function (err) {\n                    reject(err);\n                });\n        } else {\n            var instance = facade.init(cfgAsString);\n            successInit(instance);\n        }\n    });\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Repository holding servers and methods visible by this peer including those created by the peer itself.\n */\n\nvar Callbacks = __webpack_require__(1);\n\nmodule.exports = function () {\n    'use strict';\n\n    // each server has format {id:'', info:{}, methods:{}}\n    // where methods has format {id:'', info:{}}\n    var servers = {};\n\n    // object keyed by method id - value is number of servers that offer that method\n    var methodsCount = {};\n\n    // store for callbacks\n    var callbacks = new Callbacks();\n\n    // add a new server to internal collection\n    function addServer(info, serverId) {\n        var current = servers[serverId];\n        if (current) {\n            return current.id;\n        }\n\n        var serverEntry = { id: serverId, info: info, methods: {} };\n        serverEntry.getInfoForUser = function () {\n            var serverInfo = createUserServerInfo(serverEntry.info);\n            serverInfo.getMethods = function () {\n                var methods = getServerMethodById(serverEntry.id);\n                return methods.map(function (m) {\n                    return m.getInfoForUser()\n                });\n            };\n            serverInfo.getStreams = function () {\n                var methods = getServerMethodById(serverEntry.id);\n                methods = methods.filter(function (method) {\n                    return method.supportsStreaming;\n                });\n                return methods.map(function (m) {\n                    return m.getInfoForUser()\n                });\n\n            };\n            return serverInfo;\n        };\n\n        servers[serverId] = serverEntry;\n        callbacks.execute('onServerAdded', serverEntry);\n        return serverId;\n    }\n\n    function removeServerById(id, reason) {\n        var server = servers[id];\n\n        Object.keys(server.methods).forEach(function (methodId) {\n            removeServerMethod(id, methodId);\n        });\n\n        delete servers[id];\n        callbacks.execute('onServerRemoved', server, reason);\n    }\n\n    function addServerMethod(serverId, method) {\n        var server = servers[serverId];\n        if (!server) {\n            throw new Error('server does not exists');\n        }\n\n        var methodId = createMethodId(method);\n\n        // server already has that method\n        if (server.methods[methodId]) {\n            return;\n        }\n\n        var methodEntity = { id: methodId, info: method };\n        methodEntity.getInfoForUser = function () {\n            var result = createUserMethodInfo(methodEntity.info);\n            result.getServers = function () {\n                return getServersByMethod(this.id);\n            }.bind(this);\n            return result;\n        };\n        server.methods[methodId] = methodEntity;\n\n        // increase the ref and notify listeners\n        if (!methodsCount[methodId]) {\n            methodsCount[methodId] = 0;\n            callbacks.execute('onMethodAdded', methodEntity);\n        }\n        methodsCount[methodId] = methodsCount[methodId] + 1;\n        callbacks.execute('onServerMethodAdded', server, methodEntity);\n    }\n\n    function createMethodId(methodInfo) {\n        // Setting properties to defaults:\n        var accepts = methodInfo.accepts !== undefined ? methodInfo.accepts : '';\n        var returns = methodInfo.returns !== undefined ? methodInfo.returns : '';\n        var version = methodInfo.version !== undefined ? methodInfo.version : 0;\n        return (methodInfo.name + accepts + returns + version).toLowerCase();\n    }\n\n    function removeServerMethod(serverId, methodId) {\n        var server = servers[serverId];\n        if (!server) {\n            throw new Error('server does not exists');\n        }\n\n        var method = server.methods[methodId];\n        delete server.methods[methodId];\n\n        // update ref counting\n        methodsCount[methodId] = methodsCount[methodId] - 1;\n        if (methodsCount[methodId] === 0) {\n            callbacks.execute('onMethodRemoved', method);\n        }\n\n        callbacks.execute('onServerMethodRemoved', server, method);\n    }\n\n    function getServersByMethod(id) {\n        var allServers = [];\n        Object.keys(servers).forEach(function (serverId) {\n            var server = servers[serverId];\n            Object.keys(server.methods).forEach(function (methodId) {\n                if (methodId === id) {\n                    allServers.push(server.getInfoForUser());\n                }\n            })\n        });\n        return allServers;\n    }\n\n    function getMethods() {\n        var allMethods = {};\n        Object.keys(servers).forEach(function (serverId) {\n            var server = servers[serverId];\n            Object.keys(server.methods).forEach(function (methodId) {\n                var method = server.methods[methodId];\n                allMethods[method.id] = method;\n            })\n        });\n\n        var methodsAsArray = Object.keys(allMethods).map(function (id) {\n            return allMethods[id];\n        });\n\n        return methodsAsArray;\n    }\n\n    function getServers() {\n        var allServers = [];\n        Object.keys(servers).forEach(function (serverId) {\n            var server = servers[serverId];\n            allServers.push(server)\n        });\n\n        return allServers;\n    }\n\n    function getServerMethodById(serverId) {\n        var server = servers[serverId];\n\n        return Object.keys(server.methods).map(function (id) {\n            return server.methods[id];\n        });\n    }\n\n    function onServerAdded(callback) {\n        callbacks.add('onServerAdded', callback);\n\n        // replay all servers\n        getServers().forEach(function (server) {\n            callback(server);\n        });\n    }\n\n    function onMethodAdded(callback) {\n        callbacks.add('onMethodAdded', callback);\n\n        // reply all existing methods\n        getMethods().forEach(function (method) {\n            callback(method);\n        })\n    }\n\n    function onServerMethodAdded(callback) {\n        callbacks.add('onServerMethodAdded', callback);\n\n        // replay all existing server methods\n        getServers().forEach(function (server) {\n            var methods = server.methods;\n            Object.keys(methods).forEach(function (methodId) {\n                callback(server, methods[methodId]);\n            });\n        });\n    }\n\n    function getServerById(id) {\n        return servers[id];\n    }\n\n    /**\n     * Transforms internal server object to user object\n     * @param server\n     * @returns {{machine: *, pid: *, started: *, user: *, application: *, environment: *, region: *, service_name: *, state: *}}\n     */\n    function createUserServerInfo(serverInfo) {\n        return {\n            machine: serverInfo.machine,\n            pid: serverInfo.pid,\n            user: serverInfo.user,\n            application: serverInfo.application,\n            environment: serverInfo.environment,\n            region: serverInfo.region,\n            instance: serverInfo.instance\n        };\n    }\n\n    /**\n     * Transforms internal method object to user object\n     * @param method\n     * @returns {{name: *, accepts: *, returns: *, description: *, display_name: *, version: *, object_types: (*|Array)}}\n     */\n    function createUserMethodInfo(methodInfo) {\n        return {\n            name: methodInfo.name,\n            accepts: methodInfo.accepts,\n            returns: methodInfo.returns,\n            description: methodInfo.description,\n            displayName: methodInfo.displayName,\n            display_name: methodInfo.displayName,\n            version: methodInfo.version,\n            objectTypes: methodInfo.objectTypes,\n            object_types: methodInfo.objectTypes,\n            supportsStreaming: methodInfo.supportsStreaming\n        };\n    }\n\n    function reset() {\n        servers = {};\n        methodsCount = {};\n    }\n\n    return {\n        getServerById: getServerById,\n        getServers: getServers,\n        getMethods: getMethods,\n        getServerMethodsById: getServerMethodById,\n        getMethodId: createMethodId,\n        addServer: addServer,\n        addServerMethod: addServerMethod,\n        removeServerById: removeServerById,\n        removeServerMethod: removeServerMethod,\n\n        onServerAdded: onServerAdded,\n        onServerRemoved: function (callback) {\n            callbacks.add('onServerRemoved', callback);\n        },\n        onMethodAdded: onMethodAdded,\n        onMethodRemoved: function (callback) {\n            callbacks.add('onMethodRemoved', callback);\n        },\n        onServerMethodAdded: onServerMethodAdded,\n        onServerMethodRemoved: function (callback) {\n            callbacks.add('onServerMethodRemoved', callback);\n        },\n\n        reset: reset\n    }\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n/*\n The streaming module defines the user objects relevant to the streaming api, and\n attaches to relevant events exposed by the protocol.\n */\n\nmodule.exports = function (protocol, unregister) {\n    'use strict';\n\n    function streamFrontObj(repoMethod) {\n        var def = repoMethod.definition;\n\n        return {\n            branches: function () {\n                var bList = protocol.getBranchList(repoMethod);\n                return bList.map(function (branchKey) {\n                    return branchFrontObj(repoMethod, branchKey)\n                });\n            },\n            close: function () {\n                protocol.closeAllSubscriptions(repoMethod);\n                unregister(repoMethod.definition);\n            },\n            definition: {\n                accepts: def.accepts,\n                description: def.description,\n                displayName: def.displayName,\n                name: def.name,\n                objectTypes: def.objectTypes,\n                returns: def.returns,\n                supportsStreaming: def.supportsStreaming\n            },\n            name: def.name,\n            push: function (data, branches) {\n                if (typeof branches !== 'string' && !Array.isArray(branches) && branches !== undefined) {\n                    throw new Error('invalid branches should be string or string array');\n                }\n                // TODO validate if is plain object\n                if (typeof data !== 'object') {\n                    throw new Error('Invalid arguments. Data must be an object.')\n                }\n                protocol.pushData(repoMethod, data, branches)\n            },\n            subscriptions: function () {\n                var subList = protocol.getSubscriptionList(repoMethod);\n                return subList.map(function (sub) {\n                    return subscriptionFrontObj(repoMethod, sub)\n                });\n            }\n        }\n    }\n\n    function subscriptionFrontObj(repoMethod, subscription) {\n        return {\n            arguments: subscription.arguments || {},\n            branchKey: subscription.branchKey,\n            close: function () {\n                protocol.closeSingleSubscription(repoMethod, subscription)\n            },\n            instance: subscription.instance,\n            push: function (data) {\n                protocol.pushDataToSingle(repoMethod, subscription, data);\n            },\n            stream: repoMethod.definition\n        };\n    }\n\n    function branchFrontObj(repoMethod, branchKey) {\n        return {\n            key: branchKey,\n            subscriptions: function () {\n                var subList = protocol.getSubscriptionList(repoMethod, branchKey);\n                return subList.map(function (sub) {\n                    return subscriptionFrontObj(repoMethod, sub)\n                });\n            },\n            close: function () {\n                protocol.closeAllSubscriptions(repoMethod, branchKey);\n            },\n            push: function (data) {\n                protocol.pushToBranch(repoMethod, data, branchKey)\n            }\n        };\n    }\n\n    /** Attach to stream 'events' */\n    protocol.onSubRequest(function (requestContext, repoMethod) {\n\n        if (!(\n            repoMethod &&\n            repoMethod.streamCallbacks &&\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === 'function')\n        ) {\n            return;\n        }\n\n        repoMethod.streamCallbacks.subscriptionRequestHandler({\n            accept: function () {\n                protocol.acceptRequestOnBranch(requestContext, repoMethod, '');\n            },\n            acceptOnBranch: function (branch) {\n                protocol.acceptRequestOnBranch(requestContext, repoMethod, branch)\n            },\n            arguments: requestContext.arguments,\n            instance: requestContext.instance,\n            reject: function (reason) {\n                protocol.rejectRequest(requestContext, repoMethod, reason)\n            }\n        });\n    });\n\n    protocol.onSubAdded(function (subscription, repoMethod) {\n\n        if (!(\n            repoMethod &&\n            repoMethod.streamCallbacks &&\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === 'function')\n        ) {\n            return;\n        }\n\n        repoMethod.streamCallbacks.subscriptionAddedHandler(subscriptionFrontObj(repoMethod, subscription))\n\n    });\n\n    protocol.onSubRemoved(function (subscriber, repoMethod) {\n\n        if (!(\n            repoMethod &&\n            repoMethod.streamCallbacks &&\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === 'function')\n        ) {\n            return;\n        }\n\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(subscriber)\n\n    });\n\n    return { streamFrontObj: streamFrontObj };\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n/*\n * A store for holding method back-objects registered by this instance's server\n */\nmodule.exports = function () {\n    'use strict';\n\n    var nextId = 0;\n    var _methods = [];\n\n    function add(method) {\n        if (typeof method !== 'object') {\n            return;\n        }\n\n        if (method._repoId !== undefined) {\n            return;\n        }\n\n        // id should be a string\n        method._repoId = String(nextId);\n        nextId += 1;\n\n        _methods.push(method);\n\n        return method;\n    }\n\n    function remove(repoId) {\n        if (typeof repoId !== 'string') {\n            return new TypeError('Expecting a string');\n        }\n\n        _methods = _methods.filter(function (m) {\n            return m._repoId !== repoId;\n        });\n    }\n\n    function getById(id) {\n        if (typeof id !== 'string') {\n            return new TypeError('Expecting a string');\n        }\n\n        return _methods.filter(function (m) {\n            return m._repoId === id\n        })[0];\n    }\n\n    function getList() {\n        return _methods.map(function (m) {\n            return m;\n        });\n    }\n\n    function length() {\n        return _methods.length;\n    }\n\n    function reset() {\n        _methods = [];\n    }\n\n    return {\n        add: add,\n        remove: remove,\n        getById: getById,\n        getList: getList,\n        length: length,\n        reset: reset\n    };\n};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n The AGM Server allows users register AGM methods.\n It exposes these methods to AGM clients (using presence messages) and listens for their invocation\n */\n\nvar Promisify = __webpack_require__(5);\nvar Streaming = __webpack_require__(24);\n\n/**\n * @module agm\n */\nmodule.exports = function (protocol, vault, instance, configuration) {\n    'use strict';\n\n    // Save the reference to the metric function if it exists\n    var metric = (configuration.metrics !== undefined) ? configuration.metrics.numberMetric.bind(configuration.metrics) : function () {\n    };\n\n    // An array of the server's methods\n    var streaming = new Streaming(protocol, unregister);\n\n    protocol.onInvoked(onMethodInvoked);\n\n    var invocations = 0;\n\n    function onMethodInvoked(methodToExecute, invocationId, invocationArgs) {\n        metric('Invocations count', invocations++);\n\n        if (!methodToExecute) {\n            return;\n        }\n\n        // Execute it and save the result\n        methodToExecute.theFunction(invocationArgs, function (err, result) {\n            if (err) {\n                // handle error case\n                if (typeof err.message === 'string') {\n                    err = err.message;\n                } else if (typeof err !== 'string') {\n                    err = '';\n                }\n            }\n\n            // The AGM library only transfers objects. If the result is not an object, put it in one\n            if (!result || typeof result !== 'object' || result.constructor === Array) {\n                result = { _result: result };\n            }\n\n            protocol.methodInvocationResult(methodToExecute, invocationId, err, result)\n        });\n    }\n\n    /**\n     * Registers a new agm method\n     * @param {MethodDefinition} methodDefinition\n     * @param {MethodHandler} callback Callback that will be called when the AGM server is invoked\n     */\n    function register(methodDefinition, callback) {\n\n        var wrappedCallbackFunction = function (context, resultCallback) {\n            // get the result as direct invocation of the callback and return it using resultCallback\n            try {\n                var result = callback(context.args, context.instance);\n                resultCallback(null, result);\n            } catch (e) {\n                resultCallback(e, e);\n            }\n        };\n\n        wrappedCallbackFunction.userCallback = callback;\n\n        registerCore(methodDefinition, wrappedCallbackFunction);\n    }\n\n    // registers a new async agm method (the result can be returned in async way)\n    function registerAsync(methodDefinition, callback) {\n\n        var wrappedCallback = function (context, resultCallback) {\n            // invoke the callback passing success and error callbacks\n            try {\n                callback(context.args, context.instance,\n                    // success callback\n                    function (result) {\n                        resultCallback(null, result);\n                    },\n                    // error callback\n                    function (e) {\n                        resultCallback(e, e);\n                    });\n            } catch (e) {\n                resultCallback(e, null);\n            }\n        };\n        wrappedCallback.userCallback = callback;\n        wrappedCallback.isAsync = true;\n\n        registerCore(methodDefinition, wrappedCallback);\n    }\n\n    // Registers a new streaming agm method\n    function createStream(streamDef, callbacks, successCallback, errorCallback) {\n        // in callbacks we have subscriptionRequestHandler, subscriptionAddedHandler, subscriptionRemovedHandler\n\n        var promise = new Promise(function (resolve, reject) {\n            if (typeof streamDef === 'string') {\n\n                if (streamDef === '') {\n                    reject('Invalid stream name.');\n                }\n\n                streamDef = { name: streamDef };\n            }\n\n            streamDef.supportsStreaming = true;\n\n            // User-supplied subscription callbacks\n            if (!callbacks) {\n                callbacks = {};\n            }\n\n            if (typeof callbacks.subscriptionRequestHandler !== 'function') {\n                callbacks.subscriptionRequestHandler = function (request) {\n                    request.accept();\n                }\n            }\n\n            var repoMethod = {\n                method: undefined, // to be initialized by protocol\n                definition: streamDef, // store un-formatted definition for checkups in un-register method\n                streamCallbacks: callbacks\n            };\n\n            // Add the method\n            vault.add(repoMethod);\n\n            protocol.createStream(repoMethod, streamDef,\n                function protocolSuccess() {\n                    metric('Registered methods', vault.length());\n\n                    var streamFrobject = streaming.streamFrontObj(repoMethod);\n\n                    resolve(streamFrobject);\n                },\n                function protocolFail(err) {\n                    vault.remove(repoMethod._repoId);\n\n                    reject(err);\n                });\n        });\n\n        return new Promisify(promise, successCallback, errorCallback);\n    }\n\n    // Core method for registering agm method\n    function registerCore(methodDefinition, theFunction) {\n        // transform the definition\n        if (typeof methodDefinition === 'string') {\n            methodDefinition = { name: methodDefinition };\n        }\n\n        // Add the method ()\n        var repoMethod = vault.add({\n            definition: methodDefinition, // store un-formatted definition for checkups in un-register method\n            theFunction: theFunction\n        });\n\n        protocol.register(repoMethod,\n            function protocolSuccess() {\n                metric('Registered methods', vault.length());\n            },\n            function protocolFail() {\n                vault.remove(repoMethod._repoId);\n            });\n    }\n\n    // Converts the method definition from camel case to snake case\n    function containsProps(filter, object) {\n        var match = true;\n        Object.keys(filter).forEach(function (prop) {\n            if (filter[prop] !== object[prop]) {\n                match = false;\n            }\n        });\n        return match;\n    }\n\n\n    // TODO add success/fail here and at gw1+2 implementations?\n    // Unregisters a previously registered AGM method\n    function unregister(methodFilter) {\n        if (typeof methodFilter === 'string') {\n            methodFilter = { name: methodFilter };\n        }\n\n        var methodsToBeRemoved = vault.getList().filter(function (method) {\n            return containsProps(methodFilter, method.definition);\n        });\n\n        // update repository\n        methodsToBeRemoved.forEach(function (method) {\n            vault.remove(method._repoId);\n            protocol.unregister(method);\n        });\n\n        metric('Registered methods', vault.length());\n    }\n\n    return {\n        register: register,\n        registerAsync: registerAsync,\n        unregister: unregister,\n        createStream: createStream\n    };\n};\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var instance = __webpack_require__(21);\nvar nativeAgm = __webpack_require__(22);\nvar pjson = __webpack_require__(6);\nvar client = __webpack_require__(20);\nvar server = __webpack_require__(26);\nvar gW1Protocol = __webpack_require__(30);\nvar gW3Protocol = __webpack_require__(35);\nvar repository = __webpack_require__(23);\nvar vault = __webpack_require__(25);\n\n\n/**\n * Callback that is invoked with server and method\n * @callback ServerMethodCallback\n * @param {Instance} server\n * @param {MethodDefinition[]} methods\n * */\n\n/**\n * Callback that is invoked with server and method\n * @callback ServerMethodCallback\n * @param {Instance} server\n * @param {MethodDefinition[]} methods\n * */\n\n\n/**\n * Callback that is invoked with server argument\n * @callback InstanceCallback\n * @param {Instance} server\n * */\n\n/**\n * User provided callback that will be called when the AGM is invoked\n * @callback MethodHandler\n */\n\n/**\n *\n * @callback MethodCallback\n * @param {MethodDefinition} method\n */\n\n/**\n * Each AGM application is identified by its AGM instance, which is a set of known key/value pairs.\n *\n * @typedef Instance\n * @property application\n * @property environment\n * @property machine\n * @property pid\n * @property region\n * @property service\n * @property user\n *\n */\n\n/**\n * Object describing an AGM method registered by some application\n *\n * @typedef MethodDefinition\n * @property name The name of the methods\n * @property {string} [accepts] AGM signature, describing what are the parameters the method expects\n * @property {string} [returns] AGM signature, describing what are the properties of the result object the method returns\n * @property {string} [displayName] The human-readable name of the method, which should be used in UI applications, e.g. ‘Open Client Performance’\n * @property {string} [description] Description of what the method does, useful for documentation purposes, and for UI clients, e.g. 'Launches or activates the Client Performance application’\n * @property {string[]} [objectTypes] The entities this method is meant to work on, e.g. a party (client, prospect, lead), instrument, order, etc. More on this later.\n * @property {boolean} [supportsStreaming] If true the method is a strea\n */\n\n/**\n *\n * @typedef InvocationResult\n * @property {MethodDefinition} method - The invoked method definition\n * @property {Object} called_with - The arguments used for the invocation\n * @property {Object} returned - The data returned from the server\n * @property {InvocationResult[]} all_return_values  - Invoking a method on multiple AGM instances produces multiple results. Use all_return_values to obtain all inner results.\n * all_return_values is an array with the same structure as returned for single app invokes.\n * @property {Instance} executed_by - The server that executed the method. If executed on more than one target check all_return_values\n * @property {InvocationError} all_errors\n */\n\n/**\n * @typedef InvocationError\n * @property {Instance} executed_by The server that returns the error\n * @property {string} message Error message returned from the server\n */\n\n/**\n * Invocation options\n * @typedef InvocationOptions\n * @property {number} wait_for_method_timeout Timeout to discover the method if not immediately available (in ms, default 30 secs)\n * @property {number} method_response_timeout Timeout to wait for a method reply (when using the default async value for call_type (in ms, default 30 secs)\n */\n\n/**\n * Object describing methods registered by some AGM server\n *\n * @typedef ServerMethods\n * @property {Instance} server\n * @property {Method[]} methods\n */\n\n/**\n * @module agm\n */\nvar agm = function (configuration) {\n    'use strict';\n    // We will store the library here\n    var agm = {};\n    agm.version = pjson.version;\n\n\n    // Init configuration\n    if (typeof configuration !== 'object') {\n        configuration = {};\n    }\n\n    // Validate configuration\n\n    // Init child configuration if it is not already passed by user\n    var childConfigurations = ['connection', 'client', 'server'];\n    childConfigurations.forEach(function (conf) {\n        if (typeof configuration[conf] !== 'object') {\n            configuration[conf] = {};\n        }\n        // Set debug if global debug is not set:\n        if (configuration.debug) {\n            configuration[conf].debug = true;\n        }\n    });\n\n    if (typeof configuration.client.remove_server_on_n_missing_heartbeats !== 'number') {\n        configuration.client.remove_server_on_n_missing_heartbeats = 3;\n    }\n    if (typeof configuration.client.method_response_timeout !== 'number') {\n        configuration.client.method_response_timeout = 3000;\n    }\n    if (typeof configuration.client.wait_for_method_timeout !== 'number') {\n        configuration.client.wait_for_method_timeout = 3000;\n    }\n\n    if (typeof configuration.server.heartbeat_interval !== 'number') {\n        configuration.server.heartbeat_interval = 5000;\n    }\n    if (typeof configuration.server.presence_interval !== 'number') {\n        configuration.server.presence_interval = 10000;\n    }\n\n    // Determine if we are given a connection object. If not, create it ourselves:\n    var c = configuration.connection;\n    if (!c) {\n        throw new Error('configuration.connection is required');\n    }\n    agm.connection = c;\n\n    // Create a connection proxy which sets the product name automatically\n    var productName = 'agm';\n    agm.connection.sendAGM = function (type, message) {\n        agm.connection.send(productName, type, message);\n    };\n    agm.connection.onAGM = function (type, handler) {\n        agm.connection.on(productName, type, handler);\n    };\n    // Save a reference to the root system object that we are given\n    var metricsRoot = configuration.metrics;\n    // Create subsystems for our modules and save them in their configuration.\n    if (metricsRoot !== undefined) {\n        configuration.client.metrics = metricsRoot.subSystem('Client');\n        configuration.server.metrics = metricsRoot.subSystem('Server');\n    }\n\n    // Initialize our modules\n    agm.instance = instance(configuration.instance);\n    var clientRepository = repository();\n    var serverRepository = vault();\n    var protocolPromise;\n    var protocolVersion = c.protocolVersion;\n    if (protocolVersion === 3) {\n        var serverGetter = function () {\n            return agm.server;\n        };\n        var clientGetter = function () {\n            return agm.client;\n        };\n        protocolPromise = gW3Protocol(agm.instance, agm.connection, clientRepository, serverRepository, configuration, serverGetter, clientGetter);\n    } else {\n        protocolPromise = gW1Protocol(agm.instance, agm.connection, clientRepository, serverRepository, configuration);\n    }\n\n    return new Promise(function(resolve, reject) {\n        // wait for protocol to resolve\n        protocolPromise.then(function (protocol) {\n            agm.client = client(protocol, clientRepository, agm.instance, configuration.client);\n            agm.server = server(protocol, serverRepository, agm.instance, configuration.server);\n\n            // Add method aliases\n            agm.invoke = agm.client.invoke;\n            agm.register = agm.server.register;\n            agm.registerAsync = agm.server.registerAsync;\n            agm.unregister = agm.server.unregister;\n            agm.createStream = agm.server.createStream;\n            agm.subscribe = agm.client.subscribe;\n            agm.servers = agm.client.servers;\n            agm.methods = agm.client.methods;\n\n            agm.methodsForInstance = agm.client.methodsForInstance;\n            agm.method = agm.client.method;\n            agm.methodAdded = agm.client.methodAdded;\n            agm.methodRemoved = agm.client.methodRemoved;\n\n            agm.serverMethodAdded = agm.client.serverMethodAdded;\n            agm.serverMethodRemoved = agm.client.serverMethodRemoved;\n\n            agm.serverAdded = agm.client.serverAdded;\n            agm.serverRemoved = agm.client.serverRemoved;\n\n            resolve(agm);\n\n        }).catch(function (err) {\n            reject(err);\n        });\n    });\n\n};\nagm = global.htmlContainer !== undefined ? nativeAgm : agm;\n// support for es6 imports\nagm.default = agm;\nmodule.exports = agm;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var random = __webpack_require__(2);\nvar helpers = __webpack_require__(3);\n\nmodule.exports = function (configuration, instance, sendRequest, nextResponseSubject) {\n    'use strict';\n\n    var STATUS_AWAITING_ACCEPT = 'awaitingAccept'; // not even one server has accepted yet\n    var STATUS_SUBSCRIBED = 'subscribed'; // at least one server has responded as 'Accepting'\n    var ERR_MSG_SUB_FAILED = 'Subscription failed.';\n    var ERR_MSG_SUB_REJECTED = 'Subscription rejected.';\n    var ON_CLOSE_MSG_SERVER_INIT = 'ServerInitiated';\n    var ON_CLOSE_MSG_CLIENT_INIT = 'ClientInitiated';\n\n    var subscriptionsList = {};\n\n    function subscribe(streamingMethod, argumentObj, targetServers, stuff, success, error) {\n        if (targetServers.length === 0) {\n            error(ERR_MSG_SUB_FAILED + ' No available servers matched the target params.');\n            return;\n        }\n\n        // This same Id will be passed to all the servers (as 'InvocationId')\n        // so they can respond back with it during the initial handshake\n        var subscriptionId = 'subscriptionId_' + random();\n\n        // Register the user's callbacks\n        var pendingSub = registerSubscription(\n            subscriptionId,\n            streamingMethod,\n            argumentObj,\n            success,\n            error,\n            stuff.method_response_timeout\n        );\n\n        if (typeof pendingSub !== 'object') {\n            error(ERR_MSG_SUB_FAILED + ' Unable to register the user callbacks.');\n            return;\n        }\n\n        // Send a subscription request to each server\n        targetServers.forEach(function (target) {\n\n            // Get a response subject for this invocation\n            var responseSubject = nextResponseSubject();\n\n            // Add server to the list of ones the client is expecting a response from\n            pendingSub.trackedServers.push({\n                server: undefined,\n                streamId: undefined,\n                streamSubjects: {\n                    global: undefined,\n                    private: undefined\n                },\n                methodRequestSubject: streamingMethod.info.requestSubject,\n                methodResponseSubject: responseSubject\n            });\n\n            // Construct a message\n            var message = {\n                EventStreamAction: 1, // \"Subscribe\" = client wishes to subscribe\n                MethodRequestSubject: streamingMethod.info.requestSubject,\n                MethodResponseSubject: responseSubject,\n                Client: instance.info(),\n                Context: {\n                    ArgumentsJson: argumentObj,\n                    InvocationId: subscriptionId,\n                    ObjectType: stuff.object_type,\n                    DisplayContext: stuff.display_context,\n                    MethodName: streamingMethod.info.name,\n                    ExecutionServer: target.server.info,\n                    Timeout: stuff.method_response_timeout\n                }\n            };\n\n            // Send it\n            sendRequest(message);\n\n            if (global.console !== undefined && configuration.debug === true) {\n                console.debug('%c>>> sending MethodInvocationRequestMessage', 'background-color:hsla(198, 51%, 79%, 0.5)');\n                console.debug('%c' + JSON.stringify(message), 'background-color:hsla(198, 51%, 79%, 0.5)');\n            }\n        });\n    }\n\n    function registerSubscription(subscriptionId, method, args, success, error, timeout) {\n\n        subscriptionsList[subscriptionId] = {\n            status: STATUS_AWAITING_ACCEPT,\n            method: method,\n            arguments: args,\n            success: success,\n            error: error,\n            trackedServers: [],\n            handlers: {\n                onData: [],\n                onClosed: []\n                // onFailed: []\n            },\n            queued: {\n                data: [],\n                closers: []\n            },\n            timeoutId: undefined\n        };\n\n\n        subscriptionsList[subscriptionId].timeoutId = setTimeout(function () {\n            if (subscriptionsList[subscriptionId] === undefined) {\n                return; // no such subscription\n            }\n\n            var subscription = subscriptionsList[subscriptionId];\n\n\n            if (subscription.status === STATUS_AWAITING_ACCEPT) {\n                error({\n                    method: method,\n                    called_with: args,\n                    message: ERR_MSG_SUB_FAILED + ' Subscription attempt timed out after ' + timeout + 'ms.'\n                });\n\n                // None of the target servers has answered the subscription attempt\n                delete subscriptionsList[subscriptionId];\n\n            } else if (subscription.status === STATUS_SUBSCRIBED &&\n                subscription.trackedServers.length > 0) {\n                // Clean the trackedServers, removing those without valid streamId\n                subscription.trackedServers = subscription.trackedServers.filter(function (server) {\n                    return (typeof server.streamId === 'string' && server.streamId !== '')\n                });\n\n                subscription.timeoutId = undefined;\n\n                if (subscription.trackedServers.length === 0) {\n                    // TODO this might be dead-code, where is closers.push?\n                    // There are no open streams, some servers accepted then closed very quickly\n                    //\t(that's why the status changed but there's no good server with a StreamId)\n\n                    // call the onClosed handlers\n                    var closersCount = subscription.queued.closers.length;\n                    var closingServer = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\n\n                    subscription.handlers.onClosed.forEach(function (callback) {\n                        if (typeof callback === 'function') {\n                            callback({\n                                message: ON_CLOSE_MSG_SERVER_INIT,\n                                requestArguments: subscription.arguments,\n                                server: closingServer,\n                                stream: subscription.method\n                            })\n                        }\n                    });\n\n                    delete subscriptionsList[subscriptionId];\n                }\n            }\n        }, timeout);\n\n        return subscriptionsList[subscriptionId]\n    }\n\n    function processPublisherMsg(msg) {\n        if (!(msg && msg.EventStreamAction && msg.EventStreamAction !== 0)) {\n            return;\n        }\n\n        if (msg.EventStreamAction === 2) {\n\n            serverIsKickingASubscriber(msg);\n\n        } else if (msg.EventStreamAction === 3) {\n\n            serverAcknowledgesGoodSubscription(msg);\n\n        } else if (msg.EventStreamAction === 5) {\n\n            serverHasPushedSomeDataIntoTheStream(msg);\n        }\n\n    }\n\n    /** msg 'Response' Actions */\n    // action 2\n    function serverIsKickingASubscriber(msg) {\n        // Note: this might be either the server rejecting a subscription request OR closing an existing subscription\n\n        // Get ALL subscriptions\n        var keys = Object.keys(subscriptionsList);\n\n        // If it is a rejection there may be an InvocationId, it can narrow the search\n        if (typeof msg.InvocationId === 'string' && msg.InvocationId !== '') {\n            keys = keys.filter(function (k) {\n                return k === msg.InvocationId;\n            })\n        }\n\n        var deletionsList = [];\n\n        // Find the kicking/rejecting server and remove it from the subscription.trackedServers[]\n        keys.forEach(function (key) {\n            if (typeof subscriptionsList[key] !== 'object') {\n                return;\n            }\n\n            subscriptionsList[key].trackedServers = subscriptionsList[key].trackedServers.filter(function (server) {\n                var isRejecting = (\n                    server.methodRequestSubject === msg.MethodRequestSubject && server.methodResponseSubject === msg.MethodResponseSubject\n                );\n\n                var isKicking = (\n                    server.streamId === msg.StreamId &&\n                    (server.streamSubjects.global === msg.EventStreamSubject || server.streamSubjects.private === msg.EventStreamSubject)\n                );\n\n                var isRejectingOrKicking = isRejecting || isKicking;\n\n                return !isRejectingOrKicking;\n            });\n\n            if (subscriptionsList[key].trackedServers.length === 0) {\n                deletionsList.push(key);\n            }\n        });\n\n        // Call onClosed OR error()\n        // and remove the subscription\n        deletionsList.forEach(function (key) {\n            if (typeof subscriptionsList[key] !== 'object') {\n                return;\n            }\n\n            if (\n                subscriptionsList[key].status === STATUS_AWAITING_ACCEPT &&\n                typeof subscriptionsList[key].timeoutId === 'number'\n            ) {\n\n                var reason = (typeof msg.ResultMessage === 'string' && msg.ResultMessage !== '') ?\n                    ' Publisher said \"' + msg.ResultMessage + '\".' :\n                    ' No reason given.';\n\n                var callArgs = typeof subscriptionsList[key].arguments === 'object' ?\n                    JSON.stringify(subscriptionsList[key].arguments) :\n                    '{}';\n\n                subscriptionsList[key].error(ERR_MSG_SUB_REJECTED + reason + ' Called with:' + callArgs);\n                clearTimeout(subscriptionsList[key].timeoutId);\n\n            } else {\n\n                // The timeout may or may not have expired yet,\n                // but the status is 'subscribed' and trackedServers is now empty\n\n                subscriptionsList[key].handlers.onClosed.forEach(function (callback) {\n                    if (typeof callback !== 'function') {\n                        return;\n                    }\n\n                    callback({\n                        message: ON_CLOSE_MSG_SERVER_INIT,\n                        requestArguments: subscriptionsList[key].arguments,\n                        server: helpers.convertInfoToInstance(msg.Server),\n                        stream: subscriptionsList[key].method\n                    });\n                });\n\n            }\n\n            delete subscriptionsList[key];\n\n        });\n    }\n\n    // action 3\n    function serverAcknowledgesGoodSubscription(msg) {\n\n        var subscriptionId = msg.InvocationId;\n\n        var subscription = subscriptionsList[subscriptionId];\n\n        if (typeof subscription !== 'object') {\n            return;\n        }\n\n        var acceptingServer = subscription.trackedServers.filter(function (server) {\n            return (\n                server.methodRequestSubject === msg.MethodRequestSubject &&\n                server.methodResponseSubject === msg.MethodResponseSubject\n            )\n        })[0];\n\n        if (typeof acceptingServer !== 'object') {\n            return;\n        }\n\n        var isFirstResponse = (subscription.status === STATUS_AWAITING_ACCEPT);\n\n        subscription.status = STATUS_SUBSCRIBED;\n\n        var privateStreamSubject = generatePrivateStreamSubject(subscription.method.name);\n\n        if (typeof acceptingServer.streamId === 'string' && acceptingServer.streamId !== '') {\n            return; // already accepted previously\n        }\n\n        acceptingServer.server = helpers.convertInfoToInstance(msg.Server);\n        acceptingServer.streamId = msg.StreamId;\n        acceptingServer.streamSubjects.global = msg.EventStreamSubject;\n        acceptingServer.streamSubjects.private = privateStreamSubject;\n        // acceptingServer.methodResponseSubject stays the same\n\n        var confirmatoryRequest = {\n            EventStreamAction: 3, // \"Subscribed\" = client confirms intention to subscribe\n            EventStreamSubject: privateStreamSubject,\n            StreamId: msg.StreamId,\n            MethodRequestSubject: msg.MethodRequestSubject,\n            MethodResponseSubject: acceptingServer.methodResponseSubject,\n            Client: instance.info(),\n            Context: {\n                ArgumentsJson: subscription.arguments,\n                MethodName: subscription.method.name\n            }\n        };\n\n        sendRequest(confirmatoryRequest);\n\n        if (isFirstResponse) {\n            // Pass in the subscription object\n            subscription.success({\n                onData: function (dataCallback) {\n                    if (typeof dataCallback !== 'function') {\n                        throw new TypeError('The data callback must be a function.')\n                    }\n\n                    this.handlers.onData.push(dataCallback)\n                    if (this.handlers.onData.length === 1 && this.queued.data.length > 0) {\n                        this.queued.data.forEach(function (dataItem) {\n                            dataCallback(dataItem)\n                        })\n                    }\n                }.bind(subscription),\n                onClosed: function (closedCallback) {\n                    if (typeof closedCallback !== 'function') {\n                        throw new TypeError('The callback must be a function.')\n                    }\n                    this.handlers.onClosed.push(closedCallback)\n                }.bind(subscription),\n                onFailed: function () { /* Will not be implemented for browser. */\n                },\n                close: closeSubscription.bind(subscription, subscriptionId),\n                requestArguments: subscription.arguments,\n                serverInstance: helpers.convertInfoToInstance(msg.Server),\n                stream: subscription.method\n            });\n        }\n    }\n\n    // action 5\n    function serverHasPushedSomeDataIntoTheStream(msg) {\n\n        // Find the subscription of interest by trawling the dictionary\n        for (var key in subscriptionsList) {\n            if (subscriptionsList.hasOwnProperty(key) && typeof subscriptionsList[key] === 'object') {\n\n                var isPrivateData;\n\n                var trackedServersFound = subscriptionsList[key].trackedServers.filter(function (ls) {\n                    return (\n                        ls.streamId === msg.StreamId &&\n                        (ls.streamSubjects.global === msg.EventStreamSubject ||\n                        ls.streamSubjects.private === msg.EventStreamSubject)\n                    );\n                });\n\n                if (trackedServersFound.length === 0) {\n                    isPrivateData = undefined;\n                } else if (trackedServersFound[0].streamSubjects.global === msg.EventStreamSubject) {\n                    isPrivateData = false;\n                } else if (trackedServersFound[0].streamSubjects.private === msg.EventStreamSubject) {\n                    isPrivateData = true;\n                }\n\n                if (isPrivateData !== undefined) {\n                    // create the arrivedData object\n                    var receivedStreamData = {\n                        data: msg.ResultContextJson,\n                        server: helpers.convertInfoToInstance(msg.Server),\n                        requestArguments: subscriptionsList[key].arguments || {},\n                        message: msg.ResultMessage,\n                        private: isPrivateData\n                    };\n\n                    var onDataHandlers = subscriptionsList[key].handlers.onData;\n                    var queuedData = subscriptionsList[key].queued.data;\n\n                    if (Array.isArray(onDataHandlers)) {\n                        if (onDataHandlers.length > 0) {\n                            onDataHandlers.forEach(function (callback) {\n                                if (typeof callback === 'function') {\n                                    callback(receivedStreamData)\n                                }\n                            })\n                        } else {\n                            queuedData.push(receivedStreamData)\n                        }\n                    }\n                }\n            }\n        }// end for-in\n    }\n\n    /** (subscription) Methods */\n    function closeSubscription(subId) {\n\n        var responseSubject = nextResponseSubject();\n\n        this.trackedServers.forEach(function (server) {\n            sendRequest({\n                EventStreamAction: 2,\n                Client: instance.info(),\n                MethodRequestSubject: server.methodRequestSubject,\n                MethodResponseSubject: responseSubject,\n                StreamId: server.streamId,\n                EventStreamSubject: server.streamSubjects.private\n            });\n        });\n\n        var sub = this;\n\n        // Call the onClosed handlers\n        this.handlers.onClosed.forEach(function (callback) {\n            if (typeof callback === 'function') {\n                callback({\n                    message: ON_CLOSE_MSG_CLIENT_INIT,\n                    requestArguments: sub.arguments || {},\n                    server: sub.trackedServers[sub.trackedServers.length - 1].server, // the last one of multi-server subscription\n                    stream: sub.method\n                })\n            }\n        });\n\n        delete subscriptionsList[subId];\n    }\n\n    function generatePrivateStreamSubject(methodName) {\n\n        var appInfo = instance.info();\n\n        var privateStreamSubject = 'ESSpriv-jsb_' +\n            appInfo.ApplicationName +\n            '_on_' +\n            methodName +\n            '_' +\n            random();\n\n        return privateStreamSubject;\n    }\n\n    return { // an instance of the streaming module\n        subscribe: subscribe,\n        processPublisherMsg: processPublisherMsg\n    };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar random = __webpack_require__(2);\nvar callbackRegistry = __webpack_require__(1);\nvar Streaming = __webpack_require__(28);\nvar helpers = __webpack_require__(3);\n\nmodule.exports = function (connection, instance, configuration, repository) {\n    'use strict';\n    var timers = {};\n    var respCounter = 0;\n    var callbacks = callbackRegistry();\n\n    var streaming = new Streaming(\n        configuration,\n        instance,\n        function (m) {\n            connection.sendAGM('MethodInvocationRequestMessage', m)\n        },\n        nextResponseSubject\n    );\n\n    function nextResponseSubject() {\n        return 'resp_' + (respCounter++) + '_' + random();\n    }\n\n    function createServerInfo(instance) {\n        return {\n            machine: instance.MachineName,\n            pid: instance.ProcessId,\n            started: instance.ProcessStartTime,\n            user: instance.UserName,\n            application: instance.ApplicationName,\n            environment: instance.Environment,\n            region: instance.Region,\n            service_name: instance.ServiceName,\n            metrics_repository_id: instance.MetricsRepositoryId,\n            state: instance.State\n        };\n    }\n\n    function createMethod(methodInfo) {\n        var method = methodInfo.Method;\n        return {\n            name: method.Name,\n            accepts: method.InputSignature,\n            returns: method.ResultSignature,\n            requestSubject: methodInfo.MethodRequestSubject,\n            description: method.Description,\n            displayName: method.DisplayName,\n            version: method.Version,\n            objectTypes: method.ObjectTypeRestrictions,\n            supportsStreaming: helpers.isStreamingFlagSet(method.Flags)\n        };\n    }\n\n    // Generates a unique ID for a server\n    function createServerId(serverInfo) {\n        if (serverInfo === undefined) {\n            return undefined;\n        }\n\n        return [serverInfo.application,\n            serverInfo.user,\n            serverInfo.machine,\n            serverInfo.started,\n            serverInfo.pid].join('/').toLowerCase();\n    }\n\n    function processServerPresence(presence, isPresence) {\n\n        var instance = presence.Instance;\n        var serverInfo = createServerInfo(instance);\n        var serverId = createServerId(serverInfo);\n\n        if (isPresence) {\n            // test\n            // console.debug(new Date(), '  heard presence');\n            // if (instance.ApplicationName === 'Dummy server') {\n            //     console.debug(new Date(), '  got Dummy server presence', presence);\n            // }\n\n            serverId = repository.addServer(serverInfo, serverId);\n\n            if (presence.PublishingInterval) {\n                scheduleTimeout(serverId, presence.PublishingInterval);\n            }\n        } else if (presence.PublishingInterval === 0) {\n            // Good bye message from Gateway\n            var server = repository.getServerById(serverId);\n            if (typeof server !== 'undefined') {\n                repository.removeServerById(serverId);\n            }\n        }\n\n        // Finally, update the methods\n        if (presence.MethodDefinitions !== undefined) {\n            updateServerMethods(serverId, presence.MethodDefinitions);\n        }\n    }\n\n    // This function sets a timeout which removes the server unless - the function is called again before the timeout is over\n    function scheduleTimeout(serverId, duration) {\n\n        if (duration === -1) {\n            return;\n        }\n        // Stop the previous timeout\n        var timer = timers[serverId];\n        if (timer !== undefined) {\n            clearTimeout(timer);\n        }\n\n        // Set a new one\n        timers[serverId] = setTimeout(function () {\n            repository.removeServerById(serverId);\n        }, duration * (configuration.client.remove_server_on_n_missing_heartbeats + 1));\n    }\n\n    // Updates the methods of a server\n    function updateServerMethods(serverId, newMethods) {\n\n        // Get an array of the methods the server had before we started this\n        var oldMethods = repository.getServerMethodsById(serverId);\n\n        // Get an array of the methods that the server has now\n        newMethods = newMethods.map(createMethod).reduce(function (obj, method) {\n            var methodId = repository.getMethodId(method);\n            obj[methodId] = method;\n            return obj;\n        }, {});\n\n        // For each of the old methods\n        Object.keys(oldMethods).forEach(function (methodId) {\n            var method = oldMethods[methodId];\n            // Check if it is still there\n            if (newMethods[method.id] === undefined) {\n                // If it isn't, remove it\n                repository.removeServerMethod(serverId, method.id);\n            } else {\n                // If it is there in both the old array and the new one, we don't need to add it again\n                delete newMethods[method.id];\n            }\n        });\n        // Now add the new methods\n        Object.keys(newMethods).forEach(function (key) {\n            var method = newMethods[key];\n            repository.addServerMethod(serverId, method);\n        });\n    }\n\n    function invoke(id, method, args, target, stuff) {\n\n        var methodInfo = method.info;\n        // Construct a message\n        var message = {\n            MethodRequestSubject: methodInfo.requestSubject,\n            MethodResponseSubject: nextResponseSubject(),\n            Client: instance.info(),\n            Context: {\n                ArgumentsJson: args,\n                InvocationId: id,\n                ObjectType: stuff.object_type,\n                DisplayContext: stuff.display_context,\n                MethodName: methodInfo.name,\n                ExecutionServer: target.info,\n                Timeout: stuff.method_response_timeout\n            }\n        };\n\n        connection.sendAGM('MethodInvocationRequestMessage', message);\n    }\n\n    function handleInvokeResultMessage(message) {\n\n        // Delegate streaming-related messages to streaming\n        if (message && message.EventStreamAction && message.EventStreamAction !== 0) {\n            streaming.processPublisherMsg(message);\n            return;\n        }\n\n        var server = message.Server ? createServerInfo(message.Server) : undefined;\n\n        // parse the result\n        var result = message.ResultContextJson;\n        // If the result is an empty object, there is no result\n        if (result && Object.keys(result).length === 0) {\n            result = undefined;\n        }\n\n        callbacks.execute('onResult', message.InvocationId, server, message.Status, result, message.ResultMessage);\n    }\n\n    function onInvocationResult(callback) {\n        callbacks.add('onResult', callback);\n    }\n\n    function listenForEvents() {\n        connection.onAGM('ServerPresenceMessage', function (msg) {\n            processServerPresence(msg, true);\n        });\n        connection.onAGM('ServerHeartbeatMessage', function (msg) {\n            processServerPresence(msg, false);\n        });\n        connection.onAGM('MethodInvocationResultMessage', handleInvokeResultMessage);\n    }\n\n    listenForEvents();\n\n    return {\n        invoke: invoke,\n        onInvocationResult: onInvocationResult,\n        subscribe: streaming.subscribe\n    }\n};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ServerProtocol = __webpack_require__(32);\nvar ClientProtocol = __webpack_require__(29);\n\nmodule.exports = function (instance, connection, repository, vault, configuration) {\n    'use strict';\n    connection.onAGM('Instance', instance._updateIdentity);\n\n    var serverProtocol = new ServerProtocol(connection, instance, configuration, vault);\n    var clientProtocol = new ClientProtocol(connection, instance, configuration, repository);\n\n    return new Promise(function (resolve) {\n\n        resolve({\n            // method-related\n            invoke: clientProtocol.invoke,\n            onInvocationResult: clientProtocol.onInvocationResult,\n            register: serverProtocol.register,\n            unregister: serverProtocol.unregister,\n            onInvoked: serverProtocol.onInvoked,\n            methodInvocationResult: serverProtocol.methodInvocationResult,\n\n            // stream-related\n            subscribe: clientProtocol.subscribe,\n            createStream: serverProtocol.createStream,\n            getBranchList: serverProtocol.getBranchList,\n            getSubscriptionList: serverProtocol.getSubscriptionList,\n            closeAllSubscriptions: serverProtocol.closeAllSubscriptions,\n            closeSingleSubscription: serverProtocol.closeSingleSubscription,\n            pushData: serverProtocol.pushData,\n            pushDataToSingle: serverProtocol.pushDataToSingle,\n            onSubRequest: serverProtocol.onSubRequest,\n            acceptRequestOnBranch: serverProtocol.acceptRequestOnBranch,\n            rejectRequest: serverProtocol.rejectRequest,\n            onSubAdded: serverProtocol.onSubAdded,\n            onSubRemoved: serverProtocol.onSubRemoved\n        });\n    });\n};\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar random = __webpack_require__(2);\n// TODO use Callbacks = require(~)\nvar helpers = __webpack_require__(3);\n\nmodule.exports = function (connection, instance) {\n    'use strict';\n    // TODO extract these into Callbacks\n    var requestHandler = null;\n    var subAddedHandler = null;\n    var subRemovedHandler = null;\n\n    function sendResult(message) {\n        if (typeof message !== 'object') {\n            throw new Error('Invalid message.');\n        }\n\n        if (typeof message.Status !== 'number') {\n            message.Status = 0;\n        }\n\n        connection.sendAGM('MethodInvocationResultMessage', message);\n    }\n\n    function isStreamMsgForStreamingMethod(msg, method) {\n        return (\n            msg &&\n            msg.EventStreamAction &&\n            msg.EventStreamAction !== 0 &&\n            typeof method === 'object' &&\n            method.definition.supportsStreaming === true\n        );\n    }\n\n    function processSubscriberMsg(msg, streamingMethod) {\n        if (!(msg && msg.EventStreamAction && msg.EventStreamAction !== 0)) {\n            return;\n        }\n\n        if (msg.EventStreamAction === 1) {\n            clientWishesToSubscribe(msg, streamingMethod);\n\n        } else if (msg.EventStreamAction === 2) {\n            clientWishesToUnsubscribe(msg, streamingMethod);\n\n        } else if (msg.EventStreamAction === 3) {\n            clientAcknowledgesItDidSubscribe(msg, streamingMethod);\n\n        } else if (msg.EventStreamAction === 4) {\n            clientPerSubHeartbeat(msg);\n        }\n    }\n\n    /** msg 'Request' Actions */\n    // action 1\n    function clientWishesToSubscribe(msg, streamingMethod) {\n\n        var requestContext = {\n            msg: msg,\n            arguments: msg.Context.ArgumentsJson || {},\n            instance: helpers.convertInfoToInstance(msg.Client)\n        };\n\n        if (typeof requestHandler === 'function') {\n            requestHandler(requestContext, streamingMethod);\n        }\n    }\n\n    // action 2\n    function clientWishesToUnsubscribe(msg, streamingMethod) {\n\n        if (!(\n            streamingMethod &&\n            Array.isArray(streamingMethod.subscriptions) &&\n            streamingMethod.subscriptions.length > 0)\n        ) {\n            return;\n        }\n\n        closeIndividualSubscription(streamingMethod, msg.StreamId, msg.EventStreamSubject, false)\n    }\n\n    // action 3\n    function clientAcknowledgesItDidSubscribe(msg, streamingMethod) {\n        // Client indicates it is listening to a specific StreamId\n\n        if (typeof msg.StreamId !== 'string' || msg.StreamId === '') {\n            return;\n        }\n\n        var branchKey = getBranchKey(streamingMethod, msg.StreamId);\n\n        if (typeof branchKey !== 'string') {\n            return;\n        }\n\n        if (!Array.isArray(streamingMethod.subscriptions)) {\n            return;\n        }\n\n        var subscription = {\n            branchKey: branchKey,\n            instance: helpers.convertInfoToInstance(msg.Client),\n            arguments: msg.Context.ArgumentsJson,\n            streamId: msg.StreamId,\n            privateEventStreamSubject: msg.EventStreamSubject,\n            methodResponseSubject: msg.MethodResponseSubject\n        };\n\n        // Subscription back-obj is stored\n        streamingMethod.subscriptions.push(subscription);\n\n        if (typeof subAddedHandler === 'function') {\n            subAddedHandler(subscription, streamingMethod);\n        }\n    }\n\n    // action 4\n    function clientPerSubHeartbeat() {\n        // A client may have multiple subscriptions, each one having its own heartbeat\n        // Currently not implemented by the GW or the client\n    }\n\n\n    /** (request) Methods */\n    function acceptRequestOnBranch(requestContext, streamingMethod, branch) {\n        if (typeof branch !== 'string') {\n            branch = '';\n        }\n\n        var streamId = getStreamId(streamingMethod, branch);\n\n        var msg = requestContext.msg;\n\n        sendResult({\n            EventStreamAction: 3,\n            EventStreamSubject: streamingMethod.globalEventStreamSubject,\n            InvocationId: msg.Context.InvocationId,\n            MethodName: streamingMethod.method.Method.Name,\n            MethodRequestSubject: streamingMethod.method.MethodRequestSubject,\n            MethodResponseSubject: msg.MethodResponseSubject,\n            MethodVersion: streamingMethod.method.Method.Version,\n            ResultMessage: 'Accepted',\n            Server: instance.info(),\n            StreamId: streamId\n        });\n    }\n\n    function getBranchKey(streamingMethod, streamId) {\n        if (typeof streamId !== 'string' || typeof streamingMethod !== 'object') {\n            return;\n        }\n\n        var needle = streamingMethod.branchKeyToStreamIdMap.filter(function (branch) {\n            return branch.streamId === streamId;\n        })[0];\n\n        if (typeof needle !== 'object' || typeof needle.key !== 'string') {\n            return;\n        }\n\n        return needle.key;\n    }\n\n    function getStreamId(streamingMethod, branchKey) {\n        if (typeof branchKey !== 'string') {\n            branchKey = '';\n        }\n\n        var needleBranch = streamingMethod.branchKeyToStreamIdMap.filter(function (branch) {\n            return branch.key === branchKey;\n        })[0];\n\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\n\n        if (typeof    streamId !== 'string' || streamId === '') {\n            streamId = generateNewStreamId(streamingMethod.method.Method.Name);\n            streamingMethod.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\n        }\n\n        return streamId;\n    }\n\n    function generateNewStreamId(streamingMethodName) {\n        var appInfo = instance.info();\n\n        var newStreamId = 'streamId-jsb_of_' +\n            streamingMethodName +\n            '__by_' +\n            appInfo.ApplicationName +\n            '_' +\n            random();\n\n        return newStreamId;\n    }\n\n    function rejectRequest(requestContext, streamingMethod, reason) {\n        if (typeof reason !== 'string') {\n            reason = '';\n        }\n\n        var msg = requestContext.msg;\n\n        sendResult({\n            EventStreamAction: 2,\n            EventStreamSubject: streamingMethod.globalEventStreamSubject,\n            // InvocationId: msg.Context.InvocationId,\n            MethodName: streamingMethod.method.Method.Name,\n            MethodRequestSubject: streamingMethod.method.MethodRequestSubject,\n            MethodResponseSubject: msg.MethodResponseSubject,\n            MethodVersion: streamingMethod.method.Method.Version,\n            ResultMessage: reason,\n            Server: instance.info(),\n            StreamId: 'default_rejection_streamId'\n        });\n    }\n\n    /** (subscription) Methods */\n    function closeIndividualSubscription(streamingMethod, streamId, privateEventStreamSubject, sendKickMessage) {\n\n        var subscription = streamingMethod.subscriptions.filter(function (subItem) {\n            return (\n                subItem.privateEventStreamSubject === privateEventStreamSubject &&\n                subItem.streamId === streamId\n            );\n        })[0];\n\n        if (typeof subscription !== 'object') {\n            return; // unrecognised subscription\n        }\n\n        var initialLength = streamingMethod.subscriptions.length;\n\n        streamingMethod.subscriptions = streamingMethod.subscriptions.filter(function (subItem) {\n            return !(\n                subItem.privateEventStreamSubject === subscription.privateEventStreamSubject &&\n                subItem.streamId === subscription.streamId\n            );\n        });\n\n        var filteredLength = streamingMethod.subscriptions.length;\n\n        if (filteredLength !== (initialLength - 1)) {\n            return; // the subscription wasn't removed\n        }\n\n        if (sendKickMessage === true) {\n            sendResult({\n                EventStreamAction: 2,\n                EventStreamSubject: privateEventStreamSubject,\n                MethodName: streamingMethod.method.Method.Name,\n                MethodRequestSubject: streamingMethod.method.MethodRequestSubject,\n                MethodResponseSubject: subscription.methodResponseSubject,\n                MethodVersion: streamingMethod.method.Method.Version,\n                ResponseContextJson: {},\n                Server: instance.info(),\n                StreamId: subscription.streamId,\n                Status: 0\n            });\n        }\n\n        if (typeof subRemovedHandler === 'function') {\n            subRemovedHandler(subscription, streamingMethod)\n        }\n    }\n\n    function closeMultipleSubscriptions(streamingMethod, branchKey) {\n        if (typeof streamingMethod !== 'object' || !Array.isArray(streamingMethod.branchKeyToStreamIdMap)) {\n            return;\n        }\n\n        var streamList = streamingMethod.branchKeyToStreamIdMap;\n\n        if (typeof branchKey === 'string') {\n            streamList = streamingMethod.branchKeyToStreamIdMap.filter(function (br) {\n                return (typeof br === 'object' && br.key === branchKey);\n            });\n        }\n\n        // TODO: consider getting the unique branch keys from 'live subscribers'\n\n        streamList.forEach(function (br) {\n            var streamId = br.streamId;\n\n            sendResult({\n                EventStreamAction: 2,\n                EventStreamSubject: streamingMethod.globalEventStreamSubject,\n                MethodName: streamingMethod.method.Method.Name,\n                MethodRequestSubject: streamingMethod.method.MethodRequestSubject,\n                Server: instance.info(),\n                StreamId: streamId,\n                Status: 0\n            });\n        });\n    }\n\n    function closeSingleSubscription(streamingMethod, subscription) {\n        closeIndividualSubscription(\n            streamingMethod,\n            subscription.streamId,\n            subscription.privateEventStreamSubject,\n            true\n        );\n    }\n\n    function pushDataToSingle(streamingMethod, subscription, data) {\n\n        // TODO validate data is a plain object\n        if (typeof data !== 'object') {\n            throw new Error('Invalid arguments. Data must be an object.');\n        }\n\n        sendResult({\n            EventStreamAction: 5,\n            EventStreamSubject: subscription.privateEventStreamSubject,\n            MethodName: streamingMethod.method.Method.Name,\n            MethodRequestSubject: streamingMethod.method.MethodRequestSubject,\n            ResultContextJson: data,\n            Server: instance.info(),\n            StreamId: subscription.streamId\n        });\n    }\n\n    function pushToBranch(streamingMethod, data, branches) {\n        if (typeof streamingMethod !== 'object' || !Array.isArray(streamingMethod.branchKeyToStreamIdMap)) {\n            return;\n        }\n\n        // TODO validate data is a plain object\n        if (typeof data !== 'object') {\n            throw new Error('Invalid arguments. Data must be an object.');\n        }\n\n        if (typeof branches === 'string') {\n            branches = [branches]; // user wants to push to single branch\n        } else if (!Array.isArray(branches) || branches.length <= 0) {\n            branches = null;\n        }\n\n        // get the StreamId's from the method's branch map\n        var streamIdList = streamingMethod.branchKeyToStreamIdMap\n            .filter(function (br) {\n                return (\n                    branches === null || (Boolean(br) && typeof br.key === 'string' && branches.indexOf(br.key) >= 0)\n                );\n            }).map(function (br) {\n                return br.streamId;\n            });\n\n        streamIdList.forEach(function (streamId) {\n\n            sendResult({\n                EventStreamAction: 5,\n                EventStreamSubject: streamingMethod.globalEventStreamSubject,\n                MethodName: streamingMethod.method.Method.Name,\n                MethodRequestSubject: streamingMethod.method.MethodRequestSubject,\n                ResultContextJson: data,\n                Server: instance.info(),\n                StreamId: streamId\n            });\n\n        });\n    }\n\n    function getSubscriptionList(streamingMethod, branchKey) {\n        if (typeof streamingMethod !== 'object') {\n            return [];\n        }\n\n        var subscriptions = [];\n\n        if (typeof branchKey !== 'string') {\n            subscriptions = streamingMethod.subscriptions;\n        } else {\n            subscriptions = streamingMethod.subscriptions.filter(function (sub) {\n                return sub.branchKey === branchKey;\n            });\n        }\n\n        return subscriptions;\n    }\n\n    function getBranchList(streamingMethod) {\n        if (typeof streamingMethod !== 'object') {\n            return [];\n        }\n\n        return getUniqueBranchNames(streamingMethod);\n\n        // TODO the agm-api passes each sub to protocol methods for creating the sub front obj\n    }\n\n    // Returns the names of branches for which there are live subscriptions\n    function getUniqueBranchNames(streamingMethod) {\n        var keysWithDuplicates = streamingMethod.subscriptions.map(function (sub) {\n            var result = null;\n            if (typeof sub === 'object' && typeof sub.branchKey === 'string') {\n                result = sub.branchKey;\n            }\n            return result;\n        });\n\n        var seen = [];\n\n        var branchArray = keysWithDuplicates.filter(function (bKey) {\n            if (bKey === null || seen.indexOf(bKey) >= 0) {\n                return false;\n            }\n            seen.push(bKey);\n            return true;\n        });\n\n        return branchArray;\n    }\n\n    /** setting user-provided handlers */ // TODO replace innerds with callback.js\n    function addRequestHandler(handlerFunc) {\n        if (typeof handlerFunc !== 'function') {\n            return;\n        }\n\n        requestHandler = handlerFunc;\n    }\n\n    function addSubAddedHandler(handlerFunc) {\n        if (typeof handlerFunc !== 'function') {\n            return;\n        }\n\n        subAddedHandler = handlerFunc;\n    }\n\n    function addSubRemovedHandler(handlerFunc) {\n        if (typeof handlerFunc !== 'function') {\n            return;\n        }\n\n        subRemovedHandler = handlerFunc;\n    }\n\n    return { // an instance of the publisher\n        isStreamMsg: isStreamMsgForStreamingMethod,\n        processSubscriberMsg: processSubscriberMsg,\n        pushData: pushToBranch,\n        pushDataToSingle: pushDataToSingle,\n        closeAllSubscriptions: closeMultipleSubscriptions,\n        closeSingleSubscription: closeSingleSubscription,\n        getSubscriptionList: getSubscriptionList,\n        getBranchList: getBranchList,\n        onSubRequest: addRequestHandler,\n        acceptRequestOnBranch: acceptRequestOnBranch,\n        rejectRequest: rejectRequest,\n        onSubAdded: addSubAddedHandler,\n        onSubRemoved: addSubRemovedHandler,\n        generateNewStreamId: generateNewStreamId\n\n    };\n};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar random = __webpack_require__(2);\nvar callbackRegistry = __webpack_require__(1);\nvar Streaming = __webpack_require__(31);\nvar helpers = __webpack_require__(3);\n\nmodule.exports = function (connection, instance, configuration, vault) {\n    'use strict';\n    var invocationMessagesMap = {};  // {invocationId: Invocation_RequestMessage}\n\n    var reqCounter = 0;\n    var presenceTimer;\n    var heartbeatTimer;\n    var callbacks = callbackRegistry();\n    var streaming = new Streaming(connection, instance);\n\n    connection.onAGM('MethodInvocationRequestMessage', handleMethodInvocationMessage);\n    sendHeartbeat();\n    if (heartbeatTimer === undefined) {\n        heartbeatTimer = setInterval(sendHeartbeat, configuration.server.heartbeat_interval);\n    }\n\n    function nextRequestSubject() {\n        return 'req_' + (reqCounter++) + '_' + random();\n    }\n\n    // Constructs a heartbeat message\n    function constructHeartbeat() {\n        return {\n            PublishingInterval: configuration.server.heartbeat_interval,\n            Instance: instance.info()\n        };\n    }\n\n    // Constructs a presence message\n    function constructPresence() {\n        var methods = vault.getList();\n\n        return {\n            PublishingInterval: configuration.server.presence_interval,\n            Instance: instance.info(),\n            MethodDefinitions: methods.map(function (m) {\n                return m.method\n            })\n        };\n    }\n\n    // Sends a presence\n    function sendPresence() {\n        connection.sendAGM('ServerPresenceMessage', constructPresence());\n    }\n\n    // Sends a heartbeat\n    function sendHeartbeat() {\n        connection.sendAGM('ServerHeartbeatMessage', constructHeartbeat());\n    }\n\n    function createNewMethodMessage(methodIdentifier, subject) {\n        // If we are given a string instead of an object, we presume that is the method's name:\n        if (typeof methodIdentifier === 'string') {\n            methodIdentifier = { name: methodIdentifier };\n        }\n\n        // Set default values\n        if (typeof methodIdentifier.version !== 'number') {\n            methodIdentifier.version = 0;\n        }\n\n        // Convert the method definition to the format that AGM requires\n        return {\n            Method: {\n                Name: methodIdentifier.name,\n                InputSignature: methodIdentifier.accepts,\n                ResultSignature: methodIdentifier.returns,\n                Description: methodIdentifier.description,\n                DisplayName: methodIdentifier.displayName,\n                Version: methodIdentifier.version,\n                ObjectTypeRestrictions: methodIdentifier.objectTypes\n            },\n            MethodRequestSubject: subject\n        };\n    }\n\n    function register(repoMethod, success) {\n\n        // Get a request subject for this method\n        var reqSubj = nextRequestSubject();\n\n        repoMethod.method = createNewMethodMessage(repoMethod.definition, reqSubj);\n\n        announceNewMethod();\n\n        success();\n    }\n\n    /** Create a streaming method */\n    function createStream(repoMethod, streamDef, success) {\n\n        var reqSubj = nextRequestSubject();\n\n        var streamConverted = createNewMethodMessage(streamDef, reqSubj);\n        streamConverted.Method.Flags = 32; // 100000 bitmask with the largest flag (streaming: true)\n\n        // Used for presences\n        repoMethod.method = streamConverted;\n\n        // Utility things for this protocol\n        repoMethod.globalEventStreamSubject = streamDef.name + '.jsStream.' + random();\n        repoMethod.subscriptions = [];\n        repoMethod.branchKeyToStreamIdMap = []; // [ {branchKey: '', streamId: 'strj_nds7`8`6y2378yb'}, {...}, ...]\n\n        announceNewMethod();\n\n        success();\n    }\n\n    function announceNewMethod() {\n\n        // Send presence so the clients know we have it\n        sendPresence();\n\n        // Start sending presence regularly (if we aren't already doing it)\n        if (presenceTimer === undefined) {\n            presenceTimer = setInterval(sendPresence, configuration.server.presence_interval);\n        }\n    }\n\n    // Listens for method invocations\n    function handleMethodInvocationMessage(message) {\n        var subject = message.MethodRequestSubject;\n        var methodList = vault.getList();\n\n        var method = methodList.filter(function (m) {\n            return m.method.MethodRequestSubject === subject;\n        })[0];\n\n        // Stop if the message isn't for us\n        if (method === undefined) {\n            return;\n        }\n\n        // TODO see if have to move this earlier - i.e. if some messages from Client don't have MethodRequestSubject\n        // Check if message is stream-related : defer to streaming module\n        if (streaming.isStreamMsg(message, method)) {\n            streaming.processSubscriberMsg(message, method);\n            return;\n        }\n\n        var invocationId = message.Context.InvocationId;\n        invocationMessagesMap[invocationId] = message;\n\n        var invocationArgs = {\n            args: message.Context.ArgumentsJson,\n            instance: helpers.convertInfoToInstance(message.Client)\n        };\n        callbacks.execute('onInvoked', method, invocationId, invocationArgs);\n    }\n\n    function onInvoked(callback) {\n        callbacks.add('onInvoked', callback);\n    }\n\n    function methodInvocationResult(executedMethod, invocationId, err, result) {\n\n        var message = invocationMessagesMap[invocationId];\n        if (!message) {\n            return;\n        }\n\n        // Don't send result if the client does not require it\n        if (message.MethodResponseSubject === 'null') {\n            return;\n        }\n\n        if (executedMethod === undefined) {\n            return;\n        }\n\n        var resultMessage = {\n            MethodRequestSubject: message.MethodRequestSubject,\n            MethodResponseSubject: message.MethodResponseSubject,\n            MethodName: executedMethod.method.Method.Name,\n            InvocationId: invocationId,\n            ResultContextJson: result,\n            Server: instance.info(),\n            ResultMessage: err,\n            Status: err ? 1 : 0\n        };\n        // Send result\n        connection.sendAGM('MethodInvocationResultMessage', resultMessage);\n\n        delete invocationMessagesMap[invocationId];\n    }\n\n    function unregister() {\n        sendPresence();\n    }\n\n    return {\n        register: register,\n        onInvoked: onInvoked,\n        methodInvocationResult: methodInvocationResult,\n        unregister: unregister,\n\n        // stream-related\n        createStream: createStream,\n        getBranchList: streaming.getBranchList,\n        getSubscriptionList: streaming.getSubscriptionList,\n        closeAllSubscriptions: streaming.closeAllSubscriptions,\n        closeSingleSubscription: streaming.closeSingleSubscription,\n        pushDataToSingle: streaming.pushDataToSingle,\n        pushData: streaming.pushData,\n        onSubRequest: streaming.onSubRequest,\n        acceptRequestOnBranch: streaming.acceptRequestOnBranch,\n        rejectRequest: streaming.rejectRequest,\n        onSubAdded: streaming.onSubAdded,\n        onSubRemoved: streaming.onSubRemoved\n    }\n};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n/**\n * Handles registering methods and sending data to clients\n */\n\n\nmodule.exports = function (instance, session, repository, logger) {\n    'use strict';\n    session.on('subscribed', handleSubscribed);\n    session.on('event', handleEventData);\n    session.on('subscription-cancelled', handleSubscriptionCancelled);\n\n    var MSG_TYPE_SUBSCRIBE = 'subscribe';\n    var STATUS_AWAITING_ACCEPT = 'awaitingAccept'; // not even one server has accepted yet\n    var STATUS_SUBSCRIBED = 'subscribed'; // at least one server has responded as 'Accepting'\n    var ERR_MSG_SUB_FAILED = 'Subscription failed.';\n    var ERR_MSG_SUB_REJECTED = 'Subscription rejected.';\n    var ON_CLOSE_MSG_SERVER_INIT = 'ServerInitiated';\n    var ON_CLOSE_MSG_CLIENT_INIT = 'ClientInitiated';\n\n    var subscriptionsList = {};\n    var subscriptionIdToLocalKeyMap = {};\n    var nextSubLocalKey = 0;\n\n    function getNextSubscriptionLocalKey() {\n        var current = nextSubLocalKey;\n        nextSubLocalKey += 1;\n\n        return current;\n    }\n\n    function subscribe(streamingMethod, argumentObj, targetServers, stuff, success, error) {\n        if (targetServers.length === 0) {\n            error(ERR_MSG_SUB_FAILED + ' No available servers matched the target params.');\n            return;\n        }\n\n        logger.debug('subscribe to target servers: ', targetServers);\n\n        // Note: used to find the subscription in subList. Do not confuse it with the gw-generated subscription_id\n        var subLocalKey = getNextSubscriptionLocalKey();\n\n        var pendingSub = registerSubscription(\n            subLocalKey,\n            streamingMethod,\n            argumentObj,\n            success,\n            error,\n            stuff.method_response_timeout\n        );\n\n        if (typeof pendingSub !== 'object') {\n            error(ERR_MSG_SUB_FAILED + ' Unable to register the user callbacks.');\n            return;\n        }\n\n        targetServers.forEach(function(target) {\n\n            var serverId = target.server.id;\n\n            pendingSub.trackedServers.push({\n                serverId: serverId,\n                subscriptionId: undefined // is assigned by gw3\n            });\n\n            var msg = {\n                type: MSG_TYPE_SUBSCRIBE,\n                server_id: serverId,\n                method_id: streamingMethod.info.id,\n                arguments_kv: argumentObj\n            };\n\n            session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })\n                .then(handleSubscribed)\n                .catch(handleErrorSubscribing);\n\n        });\n    }\n\n    function registerSubscription(subLocalKey, method, args, success, error, timeout) {\n        subscriptionsList[subLocalKey] = {\n            status: STATUS_AWAITING_ACCEPT,\n            method: method,\n            arguments: args,\n            success: success,\n            error: error,\n            trackedServers: [],\n            handlers: {\n                onData: [],\n                onClosed: []\n                // onFailed: []\n            },\n            queued: {\n                data: [],\n                closers: []\n            },\n            timeoutId: undefined\n        };\n\n        subscriptionsList[subLocalKey].timeoutId = setTimeout(function () {\n            if (subscriptionsList[subLocalKey] === undefined) {\n                return; // no such subscription\n            }\n\n            var pendingSub = subscriptionsList[subLocalKey];\n\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\n                error({\n                    method: method,\n                    called_with: args,\n                    message: ERR_MSG_SUB_FAILED + ' Subscription attempt timed out after ' + timeout + 'ms.'\n                });\n\n                // None of the target servers has answered the subscription attempt\n                delete subscriptionsList[subLocalKey];\n\n            } else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\n                // Clean the trackedServers, removing those without valid streamId\n                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\n                    return (typeof server.subscriptionId !== 'undefined')\n                });\n\n                delete pendingSub.timeoutId;\n\n                if (pendingSub.trackedServers.length <= 0) {\n                    // There are no open streams, some servers accepted then closed very quickly\n                    //  (that's why the status changed but there's no good server with a StreamId)\n\n                    // call the onClosed handlers\n                    callOnClosedHandlers(pendingSub);\n\n                    delete subscriptionsList[subLocalKey];\n                }\n            }\n        }, timeout);\n\n        return subscriptionsList[subLocalKey]\n    }\n\n    function handleErrorSubscribing(errorResponse) {\n        // A target server is rejecting\n        logger.debug('Subscription attempt failed', errorResponse);\n\n        var tag = errorResponse._tag;\n        var subLocalKey = tag.subLocalKey;\n\n        var pendingSub = subscriptionsList[subLocalKey];\n\n        if (typeof pendingSub !== 'object') {\n            return;\n        }\n\n        pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\n            return server.serverId !== tag.serverId;\n        });\n\n        if (pendingSub.trackedServers.length <= 0) {\n            clearTimeout(pendingSub.timeoutId);\n\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\n                // Reject with reason\n                var reason = (typeof errorResponse.reason === 'string' && errorResponse.reason !== '') ?\n                    ' Publisher said \"' + errorResponse.reason + '\".' :\n                    ' No reason given.';\n\n                var callArgs = typeof pendingSub.arguments === 'object' ?\n                    JSON.stringify(pendingSub.arguments) :\n                    '{}';\n\n                pendingSub.error(ERR_MSG_SUB_REJECTED + reason + ' Called with:' + callArgs);\n\n\n            } else if (pendingSub.status === STATUS_SUBSCRIBED) {\n                // The timeout may or may not have expired yet,\n                // but the status is 'subscribed' and trackedServers is now empty\n\n                callOnClosedHandlers(pendingSub);\n            }\n\n\n            delete subscriptionsList[subLocalKey];\n        }\n    }\n\n    function handleSubscribed(msg) {\n        logger.debug('handleSubscribed', msg);\n\n        var subLocalKey = msg._tag.subLocalKey;\n        var pendingSub = subscriptionsList[subLocalKey];\n\n        if (typeof pendingSub !== 'object') {\n            return;\n        }\n\n        var serverId = msg._tag.serverId;\n\n        // Add a subscription_id to this trackedServer\n\n        var acceptingServer = pendingSub.trackedServers\n            .filter(function(server) {\n                return server.serverId === serverId;\n            })[0];\n\n        if (typeof acceptingServer !== 'object') {\n            return;\n        }\n\n        acceptingServer.subscriptionId = msg.subscription_id;\n        subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\n\n        var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\n\n        pendingSub.status = STATUS_SUBSCRIBED;\n\n        if (isFirstResponse) {\n            // Pass in the subscription object\n            pendingSub.success({\n                onData: function (dataCallback) {\n                    if (typeof dataCallback !== 'function') {\n                        throw new TypeError('The data callback must be a function.')\n                    }\n\n                    this.handlers.onData.push(dataCallback);\n                    if (this.handlers.onData.length === 1 && this.queued.data.length > 0) {\n                        this.queued.data.forEach(function (dataItem) {\n                            dataCallback(dataItem)\n                        })\n                    }\n                }.bind(pendingSub),\n                onClosed: function (closedCallback) {\n                    if (typeof closedCallback !== 'function') {\n                        throw new TypeError('The callback must be a function.')\n                    }\n                    this.handlers.onClosed.push(closedCallback)\n                }.bind(pendingSub),\n                onFailed: function () { /* Will not be implemented for browser. */\n                },\n                close: closeSubscription.bind(null, subLocalKey),\n                requestArguments: pendingSub.arguments,\n                serverInstance: repository.getServerById(serverId).getInfoForUser(),\n                stream: pendingSub.method\n            });\n        }\n    }\n\n    function handleEventData(msg) {\n        logger.debug('handleEventData', msg);\n\n        var subLocalKey = subscriptionIdToLocalKeyMap[msg.subscription_id];\n\n        if (typeof subLocalKey === 'undefined') {\n            return;\n        }\n\n        var subscription = subscriptionsList[subLocalKey];\n\n        if (typeof subscription !== 'object') {\n            return;\n        }\n\n        var trackedServersFound = subscription.trackedServers.filter(function (server) {\n            return server.subscriptionId === msg.subscription_id;\n        });\n\n        if (trackedServersFound.length !== 1) {\n            return;\n        }\n\n        var isPrivateData = msg.oob && msg.snapshot;\n\n        var sendingServerId = trackedServersFound[0].serverId;\n\n        // Create the arrivedData object, new object for each handler call\n        function receivedStreamData() {\n            return {\n                data: msg.data,\n                server: repository.getServerById(sendingServerId).getInfoForUser(),\n                requestArguments: subscription.arguments || {},\n                message: null,\n                private: isPrivateData\n            };\n        }\n\n        var onDataHandlers = subscription.handlers.onData;\n        var queuedData = subscription.queued.data;\n\n        if (onDataHandlers.length > 0) {\n            onDataHandlers.forEach(function (callback) {\n                if (typeof callback === 'function') {\n                    callback(receivedStreamData())\n                }\n            })\n        } else {\n            queuedData.push(receivedStreamData())\n        }\n    }\n\n    function handleSubscriptionCancelled(msg) {\n        logger.debug('handleSubscriptionCancelled', msg);\n\n        var subLocalKey = subscriptionIdToLocalKeyMap[msg.subscription_id];\n\n        if (typeof subLocalKey === 'undefined') {\n            return;\n        }\n\n        var subscription = subscriptionsList[subLocalKey];\n\n        if (typeof subscription !== 'object') {\n            return;\n        }\n\n        // Filter tracked servers\n        var expectedNewLength = subscription.trackedServers.length - 1;\n\n        subscription.trackedServers = subscription.trackedServers.filter(function(server) {\n            if (server.subscriptionId === msg.subscription_id) {\n                subscription.queued.closers.push(server.serverId);\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        // Check if a server was actually removed\n        if (subscription.trackedServers.length !== expectedNewLength) {\n            return;\n        }\n\n        // Check if this was the last remaining server\n        if (subscription.trackedServers.length <= 0) {\n            clearTimeout(subscription.timeoutId);\n            callOnClosedHandlers(subscription);\n            delete subscriptionsList[subLocalKey];\n        }\n\n        delete subscriptionIdToLocalKeyMap[msg.subscription_id]\n    }\n\n    function callOnClosedHandlers(subscription, reason) {\n\n        var closersCount = subscription.queued.closers.length;\n        var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\n\n        var closingServer = null;\n        if (typeof closingServerId === 'number') {\n            closingServer = repository.getServerById(closingServerId).getInfoForUser();\n        }\n\n        subscription.handlers.onClosed.forEach(function (callback) {\n            if (typeof callback !== 'function') {\n                return;\n            }\n\n            callback({\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\n                requestArguments: subscription.arguments,\n                server: closingServer,\n                stream: subscription.method\n            });\n        });\n    }\n\n    function closeSubscription(subLocalKey) {\n        logger.debug('closeSubscription', subLocalKey);\n\n        var subscription = subscriptionsList[subLocalKey];\n\n        if (typeof subscription !== 'object') {\n            return;\n        }\n\n        // Tell each server that we're unsubscribing\n        subscription.trackedServers.forEach(function (server) {\n            if (typeof server.subscriptionId === 'undefined') {\n                return;\n            }\n\n            session.sendFireAndForget({\n                type: 'unsubscribe',\n                subscription_id: server.subscriptionId,\n                reason_uri: '',\n                reason: ON_CLOSE_MSG_CLIENT_INIT\n            });\n\n            delete subscriptionIdToLocalKeyMap[server.subscriptionId];\n        });\n\n        subscription.trackedServers = [];\n\n        callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\n\n        delete subscriptionsList[subLocalKey];\n\n\n    }\n\n    return { subscribe: subscribe };\n};\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar callbackRegistry = __webpack_require__(1);\nvar Streaming = __webpack_require__(33);\n\n/**\n * Handles session lifetime and events\n */\nmodule.exports = function (instance, session, repository, logger) {\n    'use strict';\n    session.on('peer-added', handlePeerAdded);\n    session.on('peer-removed', handlePeerRemoved);\n    session.on('methods-added', handleMethodsAddedMessage);\n    session.on('methods-removed', handleMethodsRemovedMessage);\n\n    var callbacks = callbackRegistry();\n    var streaming = new Streaming(instance, session, repository, logger);\n\n    function handlePeerAdded(msg) {\n        var newPeerId = msg.new_peer_id;\n        var remoteId = msg.identity;\n\n        var serverInfo = {\n            machine: remoteId.machine,\n            pid: remoteId.process,\n            instance: remoteId.instance,\n            application: remoteId.application,\n            environment: remoteId.environment,\n            region: remoteId.region,\n            user: remoteId.user\n        };\n\n        repository.addServer(serverInfo, newPeerId);\n    }\n\n    function handlePeerRemoved(msg) {\n        var removedPeerId = msg.removed_id;\n        var reason = msg.reason;\n\n        repository.removeServerById(removedPeerId, reason);\n    }\n\n    function handleMethodsAddedMessage(msg) {\n        var serverId = msg.server_id;\n        var methods = msg.methods;\n\n        methods.forEach(function (method) {\n            var methodInfo = {\n                id: method.id,\n                name: method.name,\n                displayName: method.display_name,\n                description: method.description,\n                version: method.version,\n                objectTypes: method.object_types,\n                accepts: method.input_signature,\n                returns: method.result_signature,\n                supportsStreaming:  typeof method.flags !== 'undefined' ? method.flags.supportsStreaming : false\n            };\n\n            repository.addServerMethod(serverId, methodInfo);\n        });\n    }\n\n    function handleMethodsRemovedMessage(msg) {\n        var serverId = msg.server_id;\n        var methodIdList = msg.methods;\n\n        var server = repository.getServerById(serverId);\n\n        var serverMethodKeys = Object.keys(server.methods);\n\n        serverMethodKeys.forEach(function (methodKey) {\n\n            var method = server.methods[methodKey];\n\n            if (methodIdList.indexOf(method.info.id) > -1) {\n\n                repository.removeServerMethod(serverId, methodKey)\n            }\n\n        });\n    }\n\n    function invoke(id, method, args, target) {\n\n        var serverId = target.id;\n        var methodId = method.info.id;\n\n        logger.debug('sending call (' + id + ') for method id ' + methodId + ' to server ' + serverId);\n        var msg = {\n            type: 'call',\n            server_id: serverId,\n            method_id: methodId,\n            arguments_kv: args\n        };\n\n        // we transfer the invocation id as tag\n        session.send(msg, { invocationId: id, serverId: serverId })\n            .then(handleResultMessage)\n            .catch(handleInvocationError);\n    }\n\n    function onInvocationResult(callback) {\n        callbacks.add('onResult', callback);\n    }\n\n    function handleResultMessage(msg) {\n        logger.debug('handle result message ' + msg);\n\n        var invocationId = msg._tag.invocationId;\n        var result = msg.result;\n        var serverId = msg._tag.serverId;\n        var server = repository.getServerById(serverId);\n\n        callbacks.execute('onResult', invocationId, server.getInfoForUser(), 0, result, '');\n    }\n\n    function handleInvocationError(msg) {\n        logger.debug('handle invocation error ' + msg);\n\n        var invocationId = msg._tag.invocationId;\n        var serverId = msg._tag.serverId;\n        var server = repository.getServerById(serverId);\n        var message = msg.reason;\n        var context = msg.context;\n        callbacks.execute('onResult', invocationId, server.getInfoForUser(), 1, context, message);\n    }\n\n    return {\n        invoke: invoke,\n        onInvocationResult: onInvocationResult,\n        subscribe: streaming.subscribe\n    };\n};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\nvar serverFactory = __webpack_require__(37);\nvar clientFactory = __webpack_require__(34);\n\nmodule.exports = function (instance, connection, clientRepository, serverRepository, libConfig, serverGetter) {\n    'use strict';\n\n    var logger = libConfig.logger.subLogger('gw3-protocol');\n    var resolveReadyPromise;\n\n    var readyPromise = new Promise(function (resolve) {\n        resolveReadyPromise = resolve;\n    });\n\n    // start domain join handshake\n    var session = connection.domain('agm', logger.subLogger('domain'));\n    var server = serverFactory(instance, session, clientRepository, serverRepository, logger.subLogger('server'));\n    var client = clientFactory(instance, session, clientRepository, logger.subLogger('client'));\n\n    function handleReconnect() {\n        // we're reconnecting\n        logger.info('reconnected - will replay registered methods and subscriptions');\n\n        // Client side\n        clientRepository.reset();\n        // add our server\n        clientRepository.addServer(instance, connection.peerId);\n        // TODO - re-subscribe for streams\n\n        // server side\n        var registeredMethods = serverRepository.getList();\n        serverRepository.reset();\n\n        // replay server methods\n        registeredMethods.forEach(function (method) {\n            var def = method.definition;\n            var userCallback = method.theFunction.userCallback;\n\n            var functionToUse = serverGetter().register;\n            if (method.theFunction.isAsync) {\n                functionToUse = serverGetter().registerAsync;\n            }\n\n            functionToUse(def, userCallback);\n        });\n    }\n\n    function handleInitialJoin() {\n        clientRepository.addServer(instance, connection.peerId);\n\n        resolveReadyPromise({\n            invoke: client.invoke,\n            onInvocationResult: client.onInvocationResult,\n            register: server.register,\n\n            // TODO change params\n            unregister: server.unregister,\n            onInvoked: server.onInvoked,\n            methodInvocationResult: server.methodInvocationResult,\n\n            // stream-related\n            subscribe: client.subscribe,\n            createStream: server.createStream,\n            getBranchList: server.getBranchList,\n            getSubscriptionList: server.getSubscriptionList,\n            closeAllSubscriptions: server.closeAllSubscriptions,\n            closeSingleSubscription: server.closeSingleSubscription,\n            pushData: server.pushData,\n            pushDataToSingle: server.pushDataToSingle,\n            onSubRequest: server.onSubRequest,\n            acceptRequestOnBranch: server.acceptRequestOnBranch,\n            rejectRequest: server.rejectRequest,\n            onSubAdded: server.onSubAdded,\n            onSubRemoved: server.onSubRemoved\n        });\n\n        resolveReadyPromise = undefined;\n    }\n\n    session.onJoined(function (reconnect) {\n        if (reconnect) {\n            handleReconnect();\n        } else {\n            handleInitialJoin();\n        }\n    });\n\n    session.join();\n\n    return readyPromise;\n};\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar callbackRegistry = __webpack_require__(1);\n\n/**\n * Handles registering methods and sending data to clients\n */\nmodule.exports = function (instance, session, repository, vault, logger) {\n    'use strict';\n    session.on('add-interest', handleAddInterest);\n    session.on('remove-interest', handleRemoveInterest);\n\n    var SUBSCRIPTION_REQUEST = 'onSubscriptionRequest';\n    var SUBSCRIPTION_ADDED = 'onSubscriptionAdded';\n    var SUBSCRIPTION_REMOVED = 'onSubscriptionRemoved';\n    var ERR_URI_SUBSCRIPTION_FAILED = 'com.tick42.agm.errors.subscription.failure';\n    var callbacks = callbackRegistry();\n    var nextStreamId = 0;\n\n    // TODO there are many of these incrementing integer id's -> make a helper module\n    function getNextStreamId() {\n        var current = nextStreamId;\n        nextStreamId += 1;\n        return current;\n    }\n\n    /**\n     * Processes a subscription request\n     */\n    function handleAddInterest(msg) {\n\n        logger.debug('server_AddInterest ', msg);\n\n        var caller = repository.getServerById(msg.caller_id);\n        var instance = (typeof caller.getInfoForUser === 'function') ? caller.getInfoForUser() : null;\n\n        // call subscriptionRequestHandler\n        var requestContext = {\n            msg: msg,\n            arguments: msg.arguments_kv || {},\n            instance: instance\n        };\n\n        var streamingMethod = vault.getById(msg.method_id);\n\n        if (streamingMethod === undefined) {\n            sendSubscriptionFailed(\n                'No method with id ' + msg.method_id + ' on this server.',\n                msg.subscription_id\n            );\n            return;\n        }\n\n        if (streamingMethod.subscriptionsMap && streamingMethod.subscriptionsMap[msg.subscription_id]) {\n            sendSubscriptionFailed(\n                'A subscription with id ' + msg.subscription_id + ' already exists.',\n                msg.subscription_id\n            );\n            return;\n        }\n\n        callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\n    }\n\n    function sendSubscriptionFailed(reason, subscriptionId) {\n        var errorMessage = {\n            type: 'error',\n            reason_uri: ERR_URI_SUBSCRIPTION_FAILED,\n            reason: reason,\n            request_id: subscriptionId // this overrides connection wrapper\n        };\n\n        session.sendFireAndForget(errorMessage);\n    }\n\n    function acceptRequestOnBranch (requestContext, streamingMethod, branch) {\n        console.log('requestContext', requestContext);\n\n        if (typeof branch !== 'string') {\n            branch = '';\n            console.log('empty branch', branch)\n        }\n\n        if (typeof streamingMethod.subscriptionsMap !== 'object') {\n            throw new TypeError('The streaming method is missing its subscriptions.');\n        }\n\n        if (!Array.isArray(streamingMethod.branchKeyToStreamIdMap)) {\n            throw new TypeError('The streaming method is missing its branches.');\n        }\n\n        var streamId = getStreamId(streamingMethod, branch);\n\n        // Add a new subscription to the method\n        var key = requestContext.msg.subscription_id;\n\n        var subscription = {\n            id: key,\n            arguments: requestContext.arguments,\n            instance: requestContext.instance,\n            branchKey: branch,\n            streamId: streamId,\n            subscribeMsg: requestContext.msg\n        };\n\n        streamingMethod.subscriptionsMap[key] = subscription;\n\n        // Inform the gw\n        session.sendFireAndForget({\n            type: 'accepted',\n            subscription_id: key,\n            stream_id: streamId\n        });\n\n        // Pass state above-protocol for user objects\n        callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod)\n    }\n\n    function getStreamId(streamingMethod, branchKey) {\n        if (typeof branchKey !== 'string') {\n            branchKey = '';\n        }\n\n        var needleBranch = streamingMethod.branchKeyToStreamIdMap.filter(function (branch) {\n            return branch.key === branchKey;\n        })[0];\n\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\n\n        if (typeof    streamId !== 'string' || streamId === '') {\n            streamId = getNextStreamId();\n            streamingMethod.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\n        }\n\n        return streamId;\n    }\n\n    function rejectRequest(requestContext, streamingMethod, reason) {\n        if (typeof reason !== 'string') {\n            reason = '';\n        }\n\n        sendSubscriptionFailed(\n            'Subscription rejected by user. ' + reason,\n            requestContext.msg.subscription_id\n        )\n    }\n\n    function onSubscriptionLifetimeEvent(eventName, handlerFunc) {\n        callbacks.add(eventName, handlerFunc)\n    }\n\n    function pushToBranch(streamingMethod, data, branches) {\n        if (typeof streamingMethod !== 'object' || !Array.isArray(streamingMethod.branchKeyToStreamIdMap)) {\n            return;\n        }\n\n        // TODO validate data is a plain object\n        if (typeof data !== 'object') {\n            throw new Error('Invalid arguments. Data must be an object.');\n        }\n\n        if (typeof branches === 'string') {\n            branches = [branches]; // user wants to push to single branch\n        } else if (!Array.isArray(branches) || branches.length <= 0) {\n            branches = null;\n        }\n\n        // get the StreamId's from the method's branch map\n        var streamIdList = streamingMethod.branchKeyToStreamIdMap\n            .filter(function (br) {\n                return (\n                    branches === null || (Boolean(br) && typeof br.key === 'string' && branches.indexOf(br.key) >= 0)\n                );\n            }).map(function (br) {\n                return br.streamId;\n            });\n\n        streamIdList.forEach(function (streamId) {\n            session.sendFireAndForget({\n                type: 'publish',\n                stream_id: streamId,\n                // sequence: null,  // the streamingMethod might be used for this\n                // snapshot: false, // ...and this\n                data: data\n            })\n        });\n    }\n\n    function pushDataToSingle(streamingMethod, subscription, data) {\n        // TODO validate data is a plain object\n        if (typeof data !== 'object') {\n            throw new Error('Invalid arguments. Data must be an object.');\n        }\n\n        session.sendFireAndForget({\n            type: 'post',\n            subscription_id: subscription.id,\n            // sequence: null,  // the streamingMethod might be used for this\n            // snapshot: false, // ...and this\n            data: data\n        })\n    }\n\n    function closeSingleSubscription(streamingMethod, subscription) {\n\n        delete streamingMethod.subscriptionsMap[subscription.id];\n\n        session.sendFireAndForget({\n            type: 'drop-subscription',\n            subscription_id: subscription.id,\n            reason: 'Server dropping a single subscription'\n        });\n\n        var subscriber = subscription.instance;\n\n        callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\n    }\n\n    function closeMultipleSubscriptions(streamingMethod, branchKey) {\n        if (typeof streamingMethod !== 'object' || typeof streamingMethod.subscriptionsMap !== 'object') {\n            return;\n        }\n\n        var subscriptionsToClose = Object.keys(streamingMethod.subscriptionsMap)\n            .map(function(key) {\n                return streamingMethod.subscriptionsMap[key];\n            });\n\n        if (typeof branchKey === 'string') {\n            subscriptionsToClose = subscriptionsToClose.filter(function(sub) {\n                return sub.branchKey === branchKey;\n            });\n        }\n\n        subscriptionsToClose.forEach(function (subscription) {\n            delete streamingMethod.subscriptionsMap[subscription.id];\n\n            session.sendFireAndForget({\n                type: 'drop-subscription',\n                subscription_id: subscription.id,\n                reason: 'Server dropping all subscriptions on stream_id: ' + subscription.streamId\n            });\n        });\n    }\n\n    function getSubscriptionList(streamingMethod, branchKey) {\n        if (typeof streamingMethod !== 'object') {\n            return [];\n        }\n\n        var subscriptions = [];\n\n        var allSubscriptions = Object.keys(streamingMethod.subscriptionsMap).map(function(key) {\n            return streamingMethod.subscriptionsMap[key];\n        });\n\n        if (typeof branchKey !== 'string') {\n            subscriptions = allSubscriptions;\n        } else {\n            subscriptions = allSubscriptions.filter(function (sub) {\n                return sub.branchKey === branchKey;\n            });\n        }\n\n        return subscriptions;\n    }\n\n    function getBranchList(streamingMethod) {\n        if (typeof streamingMethod !== 'object') {\n            return [];\n        }\n\n        var allSubscriptions = Object.keys(streamingMethod.subscriptionsMap).map(function(key) {\n            return streamingMethod.subscriptionsMap[key];\n        });\n\n        var keysWithDuplicates = allSubscriptions.map(function (sub) {\n            var result = null;\n            if (typeof sub === 'object' && typeof sub.branchKey === 'string') {\n                result = sub.branchKey;\n            }\n            return result;\n        });\n\n        var seen = [];\n\n        var branchArray = keysWithDuplicates.filter(function (bKey) {\n            if (bKey === null || seen.indexOf(bKey) >= 0) {\n                return false;\n            }\n            seen.push(bKey);\n            return true;\n        });\n\n        return branchArray;\n    }\n\n    function handleRemoveInterest(msg) {\n        logger.debug('handleRemoveInterest', msg);\n\n        var streamingMethod = vault.getById(msg.method_id)\n\n        if (typeof msg.subscription_id !== 'string' ||\n            typeof streamingMethod !== 'object' ||\n            typeof streamingMethod.subscriptionsMap[msg.subscription_id] !== 'object'\n        ) {\n            return;\n        }\n\n        var subscription = streamingMethod.subscriptionsMap[msg.subscription_id];\n\n        delete streamingMethod.subscriptionsMap[msg.subscription_id];\n\n        callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\n    }\n\n    return {\n        pushData: pushToBranch,\n        pushDataToSingle: pushDataToSingle,\n        onSubRequest: onSubscriptionLifetimeEvent.bind(null, SUBSCRIPTION_REQUEST),\n        onSubAdded: onSubscriptionLifetimeEvent.bind(null, SUBSCRIPTION_ADDED),\n        onSubRemoved: onSubscriptionLifetimeEvent.bind(null, SUBSCRIPTION_REMOVED),\n        acceptRequestOnBranch: acceptRequestOnBranch,\n        rejectRequest: rejectRequest,\n        getSubscriptionList: getSubscriptionList,\n        getBranchList: getBranchList,\n        closeSingleSubscription: closeSingleSubscription,\n        closeMultipleSubscriptions: closeMultipleSubscriptions\n    };\n};\n\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar callbackRegistry = __webpack_require__(1);\nvar Streaming = __webpack_require__(36);\n\n/**\n * Handles registering methods and sending data to clients\n */\nmodule.exports = function (instance, session, repository, vault, logger) {\n    'use strict';\n    var callbacks = callbackRegistry();\n    var streaming = new Streaming(instance, session, repository, vault, logger);\n\n    session.on('invoke', handleInvokeMessage);\n\n    function handleRegisteredMessage(msg) {\n        var methodId = msg._tag.methodId;\n        var repoMethod = vault.getById(methodId);\n\n        if (repoMethod && repoMethod.registrationCallbacks) {\n            logger.debug('registered method ' + repoMethod.definition.name + ' with id ' + methodId);\n            repoMethod.registrationCallbacks.success();\n        }\n    }\n\n    function handleErrorRegister(msg) {\n        logger.warn(msg);\n\n        var methodId = msg._tag.methodId;\n        var repoMethod = vault.getById(methodId);\n\n        if (repoMethod && repoMethod.registrationCallbacks) {\n            logger.debug('failed to register method ' + repoMethod.definition.name + ' with id ' + methodId);\n            repoMethod.registrationCallbacks.fail();\n        }\n    }\n\n    function handleInvokeMessage(msg) {\n        var invocationId = msg.invocation_id;\n        var callerId = msg.caller_id;\n        var methodId = msg.method_id;\n        var args = msg.arguments_kv;\n\n        logger.debug('received invocation for method id \"' + methodId + '\" from peer '+ callerId);\n\n        var methodList = vault.getList();\n\n        var method = methodList.filter(function (m) {\n            return m._repoId === methodId;\n        })[0];\n\n        // Stop if the message isn't for us\n        if (method === undefined) {\n            return;\n        }\n\n        var client = repository.getServerById(callerId);\n        var invocationArgs = { args: args, instance: client.getInfoForUser() };\n\n        callbacks.execute('onInvoked', method, invocationId, invocationArgs);\n    }\n\n    function createStream(repoMethod, streamDef, success, fail) {\n        var isStreaming = true;\n\n        // Utility things for this protocol\n        repoMethod.subscriptionsMap = {}; // ~subscription_id~ : {id:~, branchKey: '~', arguments: {~}, instance:{~}, etc.}\n        repoMethod.branchKeyToStreamIdMap = []; // [ {branchKey: '', streamId: 7}, {...}, ...]\n\n        register(repoMethod, success, fail, isStreaming);\n    }\n\n    function register(repoMethod, success, fail, isStreaming) {\n\n        var methodDef = repoMethod.definition;\n\n        // TODO review, why is this type of closure necessary\n        repoMethod.registrationCallbacks = {\n            success: success,\n            fail: fail\n        };\n\n        var flags = {};\n        if (isStreaming === true) {\n            flags = { supportsStreaming: true }\n        }\n\n        logger.debug('registering method \"' + methodDef.name + '\"');\n        var registerMsg = {\n            type: 'register',\n            methods: [{\n                id: repoMethod._repoId,\n                name: methodDef.name,\n                display_name: methodDef.displayName,\n                description: methodDef.description,\n                version: methodDef.version,\n                flags: flags,\n                object_types: methodDef.objectTypes,\n                input_signature: methodDef.accepts,\n                result_signature: methodDef.returns,\n                restrictions: undefined\n            }]\n        };\n\n        session.send(registerMsg, { methodId: repoMethod._repoId })\n            .then(handleRegisteredMessage)\n            .catch(handleErrorRegister);\n    }\n\n    function onInvoked(callback) {\n        callbacks.add('onInvoked', callback);\n    }\n\n    function methodInvocationResult(registrationId, invocationId, err, result) {\n        var msg;\n        if (err) {\n            msg = {\n                type: 'error',\n                request_id: invocationId,\n                reason_uri: 'agm.errors.client_error',\n                reason: err,\n                context: result\n            };\n        } else {\n            msg = {\n                type: 'yield',\n                invocation_id: invocationId,\n                peer_id: session.peerId,\n                result: result\n            };\n        }\n        session.sendFireAndForget(msg);\n    }\n\n    function unregister(method) {\n        var msg = {\n            type: 'unregister',\n            methods: [method._repoId]\n        };\n\n        session.send(msg)\n            .then(handleUnregisteredMessage);\n    }\n\n    function handleUnregisteredMessage(msg) {\n        var requestId = msg.request_id;\n\n        logger.debug('unregistered by requestId ' + requestId);\n    }\n\n    return {\n        register: register,\n        onInvoked: onInvoked,\n        methodInvocationResult: methodInvocationResult,\n        unregister: unregister,\n\n        createStream: createStream,\n        getBranchList: streaming.getBranchList,\n        getSubscriptionList: streaming.getSubscriptionList,\n        closeAllSubscriptions: streaming.closeMultipleSubscriptions,\n        closeSingleSubscription: streaming.closeSingleSubscription,\n        pushData: streaming.pushData,\n        pushDataToSingle: streaming.pushDataToSingle,\n        onSubRequest: streaming.onSubRequest,\n        acceptRequestOnBranch: streaming.acceptRequestOnBranch,\n        rejectRequest: streaming.rejectRequest,\n        onSubAdded: streaming.onSubAdded,\n        onSubRemoved: streaming.onSubRemoved\n    }\n};\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tick42-gateway-connection\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tick42-gateway-connection\"] = factory();\n\telse\n\t\troot[\"tick42-gateway-connection\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 26);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction createRegistry() {\r\n    var callbacks = {};\r\n    function add(key, callback) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            allForKey = allForKey.filter(function (item) {\r\n                return item !== callback;\r\n            });\r\n            callbacks[key] = allForKey;\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute\r\n    };\r\n}\r\n;\r\ncreateRegistry.default = createRegistry;\r\nmodule.exports = createRegistry;\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar randomFromSeed = __webpack_require__(23);\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"tick42-gateway-connection\",\n\t\"version\": \"2.2.10\",\n\t\"description\": \"Tick42 Gateway Connection.\",\n\t\"precommit\": \"tslint\",\n\t\"main\": \"dist/node/tick42-gateway-connection.js\",\n\t\"browser\": \"dist/web/tick42-gateway-connection.js\",\n\t\"types\": \"types/index.d.ts\",\n\t\"scripts\": {\n\t\t\"clean\": \"node ./build/scripts/clean.js\",\n\t\t\"pre:build\": \"tsc && set NODE_ENV=development && npm run clean\",\n\t\t\"file-versionify\": \"node ./build/scripts/file-versionify.js\",\n\t\t\"tslint\": \"tslint -t codeFrame ./src/main.ts\",\n\t\t\"tslint:fix\": \"tslint -t codeFrame --fix ./src/main.ts\",\n\t\t\"watch\": \"onchange ./src/**/*.ts -- npm run build:dev\",\n\t\t\"build:dev\": \"npm run pre:build && set NODE_ENV=development && webpack && npm run file-versionify && npm run types\",\n\t\t\"build:prod\": \"npm run pre:build && set NODE_ENV=development && webpack && set NODE_ENV=production && webpack && npm run file-versionify && npm run types\",\n\t\t\"docs\": \"typedoc --options typedoc.json ./src\",\n\t\t\"types\": \"node ./build/scripts/copy-types.js\",\n\t\t\"types:merged\": \"dts-generator --project ./ --out ./types/index.d.ts\",\n\t\t\"prepublish\": \"npm run build:prod && npm run test:only\",\n\t\t\"test\": \"npm run build:dev && mocha ./tests\",\n\t\t\"test:only\": \"mocha ./tests\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@types/es6-promise\": \"0.0.32\",\n\t\t\"@types/shortid\": \"0.0.28\",\n\t\t\"@types/tick42-logger\": \"^3.0.0\",\n\t\t\"babel-core\": \"^6.25.0\",\n\t\t\"babel-loader\": \"^6.4.1\",\n\t\t\"babel-plugin-add-module-exports\": \"^0.2.1\",\n\t\t\"babel-plugin-es6-promise\": \"^1.0.0\",\n\t\t\"babel-preset-es2015\": \"^6.16.0\",\n\t\t\"babel-preset-stage-2\": \"^6.22.0\",\n\t\t\"chai\": \"^4.0.2\",\n\t\t\"dts-generator\": \"^2.1.0\",\n\t\t\"es6-promise\": \"^4.1.0\",\n\t\t\"mocha\": \"^3.4.2\",\n\t\t\"onchange\": \"3.*\",\n\t\t\"pre-commit\": \"^1.1.3\",\n\t\t\"shelljs\": \"^0.6.0\",\n\t\t\"tick42-gateway\": \"^0.2.26\",\n\t\t\"tick42-webpack-config\": \"4.1.6\",\n\t\t\"ts-node\": \"^3.0.6\",\n\t\t\"tslint\": \"^5.4.3\",\n\t\t\"typedoc\": \"^0.5.10\",\n\t\t\"typescript\": \"2.3.0\",\n\t\t\"webpack\": \"2.3.3\"\n\t},\n\t\"dependencies\": {\n\t\t\"callback-registry\": \"^2.2.7\",\n\t\t\"shortid\": \"^2.2.6\",\n\t\t\"ws\": \"^0.7.2\"\n\t}\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(0);\r\nvar packageJson = __webpack_require__(3);\r\n/**\r\n * A template for gateway connections - this is extended from specific protocols and transports.\r\n */\r\nvar ConnectionImpl = (function () {\r\n    function ConnectionImpl(settings) {\r\n        // The message handlers that have to be executed for each received message\r\n        this.messageHandlers = {};\r\n        this.ids = 1;\r\n        this.registry = callback_registry_1.default();\r\n        this._connected = false;\r\n        this._settings = settings;\r\n    }\r\n    ConnectionImpl.prototype.init = function (transport, protocol) {\r\n        this._protocol = protocol;\r\n        this._transport = transport;\r\n        this._transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        this._transport.onMessage(this.handleTransportMessage.bind(this));\r\n    };\r\n    ConnectionImpl.prototype.send = function (product, type, message, id) {\r\n        // create a message using the protocol\r\n        if (this._transport.isObjectBasedTransport) {\r\n            var msg = this._protocol.createObjectMessage(product, type, message, id);\r\n            this._transport.sendObject(msg, product, type);\r\n        }\r\n        else {\r\n            var strMessage = this._protocol.createStringMessage(product, type, message, id);\r\n            this._transport.send(strMessage, product, type);\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.on = function (product, type, messageHandler) {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n        var id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n        return {\r\n            type: type,\r\n            id: id,\r\n        };\r\n    };\r\n    // Remove a handler\r\n    ConnectionImpl.prototype.off = function (info) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    };\r\n    Object.defineProperty(ConnectionImpl.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this._connected;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConnectionImpl.prototype.connected = function (callback) {\r\n        if (this._connected) {\r\n            callback(this._settings.ws || this._settings.http);\r\n        }\r\n        return this.registry.add(\"connected\", callback);\r\n    };\r\n    ConnectionImpl.prototype.disconnected = function (callback) {\r\n        this.registry.add(\"disconnected\", callback);\r\n    };\r\n    ConnectionImpl.prototype.login = function (authRequest) {\r\n        return this._protocol.login(authRequest);\r\n    };\r\n    ConnectionImpl.prototype.logout = function () {\r\n        this._protocol.logout();\r\n        this._transport.close();\r\n    };\r\n    ConnectionImpl.prototype.loggedIn = function (callback) {\r\n        this._protocol.loggedIn(callback);\r\n    };\r\n    Object.defineProperty(ConnectionImpl.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            return this._settings.protocolVersion || 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConnectionImpl.prototype, \"version\", {\r\n        get: function () {\r\n            return this._settings.version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConnectionImpl.prototype.toAPI = function () {\r\n        var that = this;\r\n        return {\r\n            send: that.send.bind(that),\r\n            on: that.on.bind(that),\r\n            off: that.off.bind(that),\r\n            login: that.login.bind(that),\r\n            logout: that.logout.bind(that),\r\n            loggedIn: that.loggedIn.bind(that),\r\n            connected: that.connected.bind(that),\r\n            disconnected: that.disconnected.bind(that),\r\n            get protocolVersion() {\r\n                return that.protocolVersion;\r\n            },\r\n            get version() {\r\n                return that.version;\r\n            },\r\n        };\r\n    };\r\n    ConnectionImpl.prototype.distributeMessage = function (message, type) {\r\n        // Retrieve handlers for the message type\r\n        var handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            // Execute them\r\n            Object.keys(handlers).forEach(function (handlerId) {\r\n                var handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    handler(message);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.handleConnectionChanged = function (connected) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n        if (connected) {\r\n            this.registry.execute(\"connected\");\r\n        }\r\n        else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.handleTransportMessage = function (msg) {\r\n        var msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this._protocol.processStringMessage(msg);\r\n        }\r\n        else {\r\n            msgObj = this._protocol.processObjectMessage(msg);\r\n        }\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    };\r\n    return ConnectionImpl;\r\n}());\r\nexports.default = ConnectionImpl;\r\n//# sourceMappingURL=connection.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar randomByte = __webpack_require__(22);\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection_1 = __webpack_require__(4);\r\nvar GW3ConnectionImpl = (function (_super) {\r\n    __extends(GW3ConnectionImpl, _super);\r\n    function GW3ConnectionImpl(settings) {\r\n        return _super.call(this, settings) || this;\r\n    }\r\n    GW3ConnectionImpl.prototype.init = function (transport, protocol) {\r\n        _super.prototype.init.call(this, transport, protocol);\r\n        this.gw3Protocol = protocol;\r\n    };\r\n    GW3ConnectionImpl.prototype.toAPI = function () {\r\n        var that = this;\r\n        var superAPI = _super.prototype.toAPI.call(this);\r\n        return {\r\n            domain: that.domain.bind(that),\r\n            get peerId() { return that.peerId; },\r\n            get token() { return that.token; },\r\n            get info() { return that.info; },\r\n            get resolvedIdentity() { return that.resolvedIdentity; },\r\n            get availableDomains() { return that.availableDomains; },\r\n            on: superAPI.on,\r\n            send: superAPI.send,\r\n            off: superAPI.off,\r\n            login: superAPI.login,\r\n            logout: superAPI.logout,\r\n            loggedIn: superAPI.loggedIn,\r\n            connected: superAPI.connected,\r\n            disconnected: superAPI.disconnected,\r\n            get protocolVersion() { return superAPI.protocolVersion; },\r\n            get version() { return superAPI.version; },\r\n        };\r\n    };\r\n    GW3ConnectionImpl.prototype.domain = function (domain, logger) {\r\n        return this.gw3Protocol.domain(domain, logger);\r\n    };\r\n    return GW3ConnectionImpl;\r\n}(connection_1.default));\r\nexports.default = GW3ConnectionImpl;\r\n//# sourceMappingURL=gw3Connection.js.map\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Connection to gateway V1 - the one that runs on the desktop without authentication\r\n */\r\nvar GW1Protocol = (function () {\r\n    function GW1Protocol() {\r\n    }\r\n    GW1Protocol.prototype.processStringMessage = function (message) {\r\n        // GW1 messages have the following structure\r\n        // {message: object, type: string}\r\n        // so type is outside the message\r\n        var messageObj = JSON.parse(message);\r\n        return {\r\n            msg: messageObj.message,\r\n            msgType: messageObj.type,\r\n        };\r\n    };\r\n    GW1Protocol.prototype.createStringMessage = function (product, type, message, id) {\r\n        return JSON.stringify({\r\n            type: type,\r\n            message: message,\r\n            id: id,\r\n        });\r\n    };\r\n    GW1Protocol.prototype.login = function (message) {\r\n        return Promise.resolve({});\r\n    };\r\n    GW1Protocol.prototype.logout = function () {\r\n        // Do nothing\r\n    };\r\n    GW1Protocol.prototype.loggedIn = function (callback) {\r\n        callback();\r\n    };\r\n    GW1Protocol.prototype.processObjectMessage = function (message) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    GW1Protocol.prototype.createObjectMessage = function (product, type, message, id) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    return GW1Protocol;\r\n}());\r\nexports.default = GW1Protocol;\r\n//# sourceMappingURL=gw1.js.map\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MESSAGE_LOGIN = \"LOGIN\";\r\nvar MESSAGE_LOGIN_RESPONSE = \"LOGIN_RESPONSE\";\r\nvar MESSAGE_LOGIN_TOKEN = \"LOGIN_TOKEN\";\r\nvar MESSAGE_LOGOUT = \"LOGOUT\";\r\nvar MESSAGE_SEND = \"SEND\";\r\n// Connection to gateway V2 - gw1 +  authentication\r\nvar GW2Protocol = (function () {\r\n    function GW2Protocol(connection) {\r\n        this.connection = connection;\r\n    }\r\n    GW2Protocol.prototype.processStringMessage = function (message) {\r\n        // GW2 messages have the following structure\r\n        // {message: object, type: string}\r\n        // so type is outside the message\r\n        // This is the same protocol sa GW1 except for SEND messages :(\r\n        // They have different structure because of authentication\r\n        var messageObj = JSON.parse(message);\r\n        if (messageObj.type === MESSAGE_SEND) {\r\n            // GW2 introduces a new\r\n            return {\r\n                msg: messageObj.data.message,\r\n                msgType: messageObj.data.type,\r\n            };\r\n        }\r\n        return {\r\n            msg: messageObj,\r\n            msgType: messageObj.type,\r\n        };\r\n    };\r\n    GW2Protocol.prototype.createStringMessage = function (product, type, message, id) {\r\n        // GW2 message madness bellow\r\n        // LOGIN and LOGOUT are kind of special\r\n        if (type === MESSAGE_LOGIN) {\r\n            return JSON.stringify(message);\r\n        }\r\n        if (type === MESSAGE_LOGOUT) {\r\n            return JSON.stringify({ type: \"LOGOUT\" });\r\n        }\r\n        return JSON.stringify({\r\n            type: MESSAGE_SEND,\r\n            sessionCookie: this.sessionCookie,\r\n            data: {\r\n                type: type,\r\n                message: message,\r\n                id: id,\r\n            },\r\n        });\r\n    };\r\n    GW2Protocol.prototype.login = function (message) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var request;\r\n            if (message.token) {\r\n                request = {\r\n                    token: message.token,\r\n                    type: MESSAGE_LOGIN_TOKEN,\r\n                };\r\n            }\r\n            else if (message.username) {\r\n                request = {\r\n                    user: message.username,\r\n                    password: message.password,\r\n                    type: MESSAGE_LOGIN,\r\n                };\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth message\" + JSON.stringify(message));\r\n            }\r\n            var lrSubs = _this.connection.on(\"\", MESSAGE_LOGIN_RESPONSE, function (response) {\r\n                _this.connection.off(lrSubs);\r\n                if (response && !response.errorMessage) {\r\n                    _this.sessionCookie = response.sessionCookie;\r\n                    resolve(response);\r\n                }\r\n                else {\r\n                    reject(response);\r\n                }\r\n            });\r\n            _this.connection.send(\"\", \"LOGIN\", request);\r\n        });\r\n    };\r\n    GW2Protocol.prototype.logout = function () {\r\n        this.connection.send(\"\", \"LOGOUT\", {});\r\n    };\r\n    GW2Protocol.prototype.loggedIn = function (callback) {\r\n        callback();\r\n    };\r\n    GW2Protocol.prototype.processObjectMessage = function (message) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    GW2Protocol.prototype.createObjectMessage = function (product, type, message, id) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    return GW2Protocol;\r\n}());\r\nexports.default = GW2Protocol;\r\n//# sourceMappingURL=gw2.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar gw3Domain_1 = __webpack_require__(27);\r\nvar callback_registry_1 = __webpack_require__(0);\r\nfunction default_1(connection, settings, logger) {\r\n    var datePrefix = \"#T42_DATE#\";\r\n    var datePrefixLen = datePrefix.length;\r\n    var dateMinLen = datePrefixLen + 1; // prefix + at least one char (1970/01/01 = 0)\r\n    var datePrefixFirstChar = datePrefix[0];\r\n    var registry = callback_registry_1.default();\r\n    var isLoggedIn = false;\r\n    // if true(default) the user wants to be connected. If the user explicitly calls logout this will become false\r\n    var shouldTryLogin = true;\r\n    var sessions = [];\r\n    var loginConfig;\r\n    connection.disconnected(handleDisconnected.bind(this));\r\n    ping();\r\n    function processStringMessage(message) {\r\n        var msg = JSON.parse(message, function (key, value) {\r\n            // check for date - we have custom protocol for dates\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            try {\r\n                var milliseconds = parseInt(value.substring(datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            }\r\n            catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n        return {\r\n            msg: msg,\r\n            msgType: msg.type,\r\n        };\r\n    }\r\n    function createStringMessage(product, type, message, id) {\r\n        var oldToJson = Date.prototype.toJSON;\r\n        Date.prototype.toJSON = function () {\r\n            return datePrefix + this.getTime();\r\n        };\r\n        var result = JSON.stringify(message);\r\n        Date.prototype.toJSON = oldToJson;\r\n        return result;\r\n    }\r\n    function processObjectMessage(message) {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    }\r\n    function createObjectMessage(product, type, message, id) {\r\n        return message;\r\n    }\r\n    function login(config) {\r\n        logger.debug(\"logging in...\");\r\n        loginConfig = config;\r\n        shouldTryLogin = true;\r\n        return new Promise(function (resolve, reject) {\r\n            var authentication = {};\r\n            var gwToken = getGatewayToken();\r\n            if (gwToken) {\r\n                authentication.method = \"gateway-token\";\r\n                authentication.token = gwToken;\r\n            }\r\n            else if (config.token) {\r\n                authentication.method = \"access-token\";\r\n                authentication.token = config.token;\r\n            }\r\n            else if (config.username) {\r\n                authentication.method = \"secret\";\r\n                authentication.login = config.username;\r\n                authentication.secret = config.password;\r\n            }\r\n            else {\r\n                throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n            }\r\n            var helloMsg = {\r\n                type: \"hello\",\r\n                identity: settings.identity,\r\n                authentication: authentication,\r\n            };\r\n            var globalDomain = gw3Domain_1.default(\"global\", connection, logger);\r\n            globalDomain.send(helloMsg)\r\n                .then(function (msg) {\r\n                logger.debug(\"login successful with PeerId \" + msg.peer_id);\r\n                connection.peerId = msg.peer_id;\r\n                connection.resolvedIdentity = msg.resolved_identity;\r\n                connection.availableDomains = msg.available_domains;\r\n                if (msg.options) {\r\n                    connection.token = msg.options.access_token;\r\n                    connection.info = msg.options.info;\r\n                }\r\n                setLoggedIn(true);\r\n                resolve(msg.resolved_identity);\r\n            })\r\n                .catch(function (err) {\r\n                logger.error(\"error sending hello message - \" + err);\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function logout() {\r\n        logger.debug(\"logging out...\");\r\n        shouldTryLogin = false;\r\n        // go through all sessions and leave the corresponding domain\r\n        sessions.forEach(function (session) {\r\n            session.leave();\r\n        });\r\n    }\r\n    function loggedIn(callback) {\r\n        if (isLoggedIn) {\r\n            callback();\r\n        }\r\n        return registry.add(\"onLoggedIn\", callback);\r\n    }\r\n    function domain(domain, domainLogger) {\r\n        var session = gw3Domain_1.default(domain, connection, domainLogger);\r\n        sessions.push(session);\r\n        return session;\r\n    }\r\n    function getGatewayToken() {\r\n        if (settings.gwTokenProvider) {\r\n            return settings.gwTokenProvider.get();\r\n        }\r\n        if (typeof location !== \"undefined\" && location.search) {\r\n            var searchParams = new URLSearchParams(location.search.slice(1));\r\n            return searchParams.get(\"t42gwtoken\");\r\n        }\r\n        return null;\r\n    }\r\n    function handleDisconnected() {\r\n        setLoggedIn(false);\r\n        logger.debug(\"disconnected - will try new login?\" + shouldTryLogin);\r\n        if (shouldTryLogin) {\r\n            connection.login(loginConfig)\r\n                .catch(function () {\r\n                setTimeout(handleDisconnected, 1000);\r\n            });\r\n        }\r\n    }\r\n    function setLoggedIn(value) {\r\n        isLoggedIn = value;\r\n        if (isLoggedIn) {\r\n            registry.execute(\"onLoggedIn\");\r\n        }\r\n    }\r\n    // ping the server every 30 sec\r\n    function ping() {\r\n        if (isLoggedIn) {\r\n            connection.send(\"\", \"\", { type: \"ping\" });\r\n        }\r\n        setTimeout(ping, 30 * 1000);\r\n    }\r\n    return {\r\n        processStringMessage: processStringMessage,\r\n        createStringMessage: createStringMessage,\r\n        createObjectMessage: createObjectMessage,\r\n        processObjectMessage: processObjectMessage,\r\n        login: login,\r\n        logout: logout,\r\n        loggedIn: loggedIn,\r\n        domain: domain,\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=gw3.js.map\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar es6_promise_1 = __webpack_require__(15);\r\n/**\r\n * Connection to HC\r\n */\r\nvar HCProtocol = (function () {\r\n    function HCProtocol() {\r\n    }\r\n    HCProtocol.prototype.processStringMessage = function (message) {\r\n        var messageObj = JSON.parse(message);\r\n        return {\r\n            msg: messageObj,\r\n            msgType: messageObj.type,\r\n        };\r\n    };\r\n    HCProtocol.prototype.createStringMessage = function (product, type, message, id) {\r\n        return JSON.stringify(message);\r\n    };\r\n    HCProtocol.prototype.login = function (message) {\r\n        return es6_promise_1.Promise.resolve({});\r\n    };\r\n    HCProtocol.prototype.logout = function () {\r\n        // Do nothing\r\n    };\r\n    HCProtocol.prototype.loggedIn = function (callback) {\r\n        callback();\r\n    };\r\n    HCProtocol.prototype.processObjectMessage = function (message) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    HCProtocol.prototype.createObjectMessage = function (product, type, message, id) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    return HCProtocol;\r\n}());\r\nexports.default = HCProtocol;\r\n//# sourceMappingURL=hc.js.map\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Connection to HtmlContainer\r\n */\r\nvar HCTransport = (function () {\r\n    function HCTransport() {\r\n        this.connectionId = Math.floor(1e10 * Math.random()).toString();\r\n    }\r\n    HCTransport.prototype.send = function (message, product, type) {\r\n        if (product === \"metrics\") {\r\n            global.htmlContainer.metricsFacade.send(type, message);\r\n        }\r\n        else if (product === \"log\") {\r\n            global.htmlContainer.loggingFacade.send(type, message);\r\n        }\r\n    };\r\n    HCTransport.prototype.onConnectedChanged = function (callback) {\r\n        // always connected;\r\n        callback(true);\r\n    };\r\n    HCTransport.prototype.onMessage = function (callback) {\r\n        // dummy implementation\r\n        // hc transports are one way only\r\n    };\r\n    HCTransport.prototype.close = function () {\r\n        // do nothing\r\n    };\r\n    return HCTransport;\r\n}());\r\nexports.default = HCTransport;\r\n//# sourceMappingURL=hc.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(0);\r\nvar HTTPTransport = (function () {\r\n    function HTTPTransport(settings, logger) {\r\n        this.registry = callback_registry_1.default();\r\n        this.url = settings.http;\r\n        // polling interval in ms, default is 1 second\r\n        this.interval = settings.httpInterval || 1000;\r\n        this.logger = logger;\r\n        this.logger.debug(\"Attempting connection to Gateway via HTTP with url \" + this.url + \" on interval \" + this.interval + \" ms\");\r\n    }\r\n    HTTPTransport.prototype.close = function () {\r\n        // Do nothing\r\n    };\r\n    HTTPTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    HTTPTransport.prototype.onMessage = function (callback) {\r\n        this.registry.add(\"onMessage\", callback);\r\n    };\r\n    HTTPTransport.prototype.send = function (msg) {\r\n        this.httpPost(this.url, msg);\r\n    };\r\n    /**\r\n     * Polls data from a given url on some interval\r\n     * @param url       Base server url. A sequence url param may be added based on the seq param\r\n     * @param interval  Interval (in ms) between polling requestts\r\n     * @param seq       Next sequence number we should ask for (if 0 the server will return the last known message)\r\n     * @param ondata    Data callback\r\n     */\r\n    HTTPTransport.prototype.poll = function (url, interval, seq, ondata) {\r\n        var _this = this;\r\n        // construct the get Url - if seq != 0 add as url param to get\r\n        // only messages after this sequence\r\n        var getUrl = url;\r\n        if (seq !== 0) {\r\n            getUrl = url + \"?sequence=\" + seq + \"&no-cache=\" + new Date().getTime();\r\n        }\r\n        // create a request\r\n        var xmlhttp = this.createCORSRequest(\"GET\", getUrl, function () {\r\n            if (seq === 0) {\r\n                _this.logger.debug(\"Connected to Gateway on \" + url);\r\n            }\r\n            var message = JSON.parse(xmlhttp.responseText);\r\n            // the server returns the number of the next sequence that we must query for\r\n            var nextSeq = message.nextSequence;\r\n            // call user callback\r\n            ondata(message.data);\r\n            // re-schedule\r\n            setTimeout(function () {\r\n                _this.poll(url, interval, nextSeq, ondata);\r\n            }, _this.interval);\r\n        });\r\n        xmlhttp.onerror = function (ev) {\r\n            console.log(\"Error polling data from http server \" + getUrl + \" -  + \" + ev);\r\n            // re-schedule\r\n            setTimeout(function () {\r\n                _this.poll(url, interval, seq, ondata);\r\n            }, _this.interval);\r\n        };\r\n        xmlhttp.send();\r\n    };\r\n    /**\r\n     * POSTs a message to a given url\r\n     */\r\n    HTTPTransport.prototype.httpPost = function (url, message) {\r\n        // create a request\r\n        var xmlhttp = this.createCORSRequest(\"POST\", url);\r\n        xmlhttp.send(message);\r\n    };\r\n    /**\r\n     * Creates CORS request (cross domain requests) for different browsers - XMLHttpRequest withCredentials\r\n     * for Chrome and FF and XDomainRequest for IE\r\n     */\r\n    HTTPTransport.prototype.createCORSRequest = function (method, url, resultCallback) {\r\n        var xhr = new XMLHttpRequest();\r\n        if (\"withCredentials\" in xhr) {\r\n            // Check if the XMLHttpRequest object has a \"withCredentials\" property.\r\n            // \"withCredentials\" only exists on XMLHTTPRequest2 objects.\r\n            xhr.open(method, url, true);\r\n            if (typeof resultCallback !== \"undefined\") {\r\n                xhr.onreadystatechange = function () {\r\n                    if (xhr.readyState === 4 && xhr.status === 200) {\r\n                        resultCallback();\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        else if (typeof global.XDomainRequest !== \"undefined\") {\r\n            // Otherwise, check if XDomainRequest.\r\n            // XDomainRequest only exists in IE, and is IE's way of making CORS requests.\r\n            xhr = new global.XDomainRequest();\r\n            xhr.open(method, url);\r\n            if (typeof resultCallback !== \"undefined\") {\r\n                xhr.onload = resultCallback;\r\n            }\r\n        }\r\n        else {\r\n            // Otherwise, CORS is not supported by the browser.\r\n            xhr = null;\r\n        }\r\n        return xhr;\r\n    };\r\n    return HTTPTransport;\r\n}());\r\nexports.default = HTTPTransport;\r\n//# sourceMappingURL=http.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(0);\r\n/**\r\n * Inproc transport for GW3\r\n */\r\nvar Inproc = (function () {\r\n    function Inproc(token, gw, logger) {\r\n        this.registry = callback_registry_1.default();\r\n        this.gw = gw;\r\n        this.gwToken = token;\r\n        this.logger = logger;\r\n        this.connectToken = this.gw.connect(this.gwToken, this.messageHandler.bind(this));\r\n    }\r\n    Object.defineProperty(Inproc.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Inproc.prototype.sendObject = function (msg) {\r\n        this.gw.send(this.connectToken, msg);\r\n    };\r\n    Inproc.prototype.send = function (msg, product, type) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    Inproc.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    Inproc.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    Inproc.prototype.close = function () {\r\n        // DO NOTHING\r\n    };\r\n    Inproc.prototype.messageHandler = function (msg) {\r\n        if (this.logger.consoleLevel() === \"trace\") {\r\n            this.logger.debug(JSON.stringify(msg));\r\n        }\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return Inproc;\r\n}());\r\nexports.default = Inproc;\r\n//# sourceMappingURL=inproc.js.map\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(0);\r\nvar WebSocket = isNode() ? __webpack_require__(25) : global.WebSocket;\r\nfunction isNode() {\r\n    // Only Node.JS has a process variable that is of [[Class]] process\r\n    try {\r\n        return Object.prototype.toString.call(global.process) === \"[object process]\";\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\nvar WS = (function () {\r\n    function WS(settings, logger) {\r\n        /**\r\n         * If the flag is true the connection should keep trying to connect.\r\n         */\r\n        this._shouldTryConnecting = true;\r\n        this._registry = callback_registry_1.default();\r\n        this._settings = settings;\r\n        this._logger = logger;\r\n        this.waitForSocketConnection(undefined);\r\n    }\r\n    WS.prototype.onMessage = function (callback) {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    };\r\n    // Create a function for sending a message\r\n    WS.prototype.send = function (msg) {\r\n        var _this = this;\r\n        this.waitForSocketConnection(function () {\r\n            _this._ws.send(msg);\r\n        });\r\n    };\r\n    WS.prototype.close = function () {\r\n        this._shouldTryConnecting = false;\r\n        this._ws.close();\r\n    };\r\n    WS.prototype.onConnectedChanged = function (callback) {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WS.prototype.initiateSocket = function () {\r\n        var _this = this;\r\n        this._logger.debug(\"initiating _ws...\");\r\n        this._ws = new WebSocket(this._settings.ws);\r\n        this._ws.onclose = function () {\r\n            _this._logger.debug(\"_ws closed\");\r\n            _this._registry.execute(\"onConnectedChanged\", false);\r\n        };\r\n        // Log on connection\r\n        this._ws.onopen = function () {\r\n            _this._logger.debug(\"_ws opened\");\r\n            _this._registry.execute(\"onConnectedChanged\", true);\r\n        };\r\n        // Attach handler\r\n        this._ws.onmessage = function (message) {\r\n            _this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n    };\r\n    // Holds callback execution until socket connection is established.\r\n    WS.prototype.waitForSocketConnection = function (callback) {\r\n        var _this = this;\r\n        if (!callback) {\r\n            callback = function () {\r\n                // Do nothing\r\n            };\r\n        }\r\n        if (!this._shouldTryConnecting) {\r\n            return;\r\n        }\r\n        if (!this._ws || this._ws.readyState > 1) {\r\n            // > 1 means closing or closed\r\n            this.initiateSocket();\r\n        }\r\n        else if (this._ws.readyState === 1) {\r\n            return callback();\r\n        }\r\n        setTimeout(function () {\r\n            _this.waitForSocketConnection(callback);\r\n        }, this._settings.reconnectInterval); // wait X milliseconds for the connection...\r\n    };\r\n    return WS;\r\n}());\r\nexports.default = WS;\r\n//# sourceMappingURL=ws.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {var require;/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.1.0\n */\n\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = __webpack_require__(28);\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n      GET_THEN_ERROR.error = null;\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n//# sourceMappingURL=es6-promise.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16), __webpack_require__(1)))\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = __webpack_require__(20);\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar encode = __webpack_require__(5);\nvar alphabet = __webpack_require__(2);\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar alphabet = __webpack_require__(2);\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar alphabet = __webpack_require__(2);\nvar encode = __webpack_require__(5);\nvar decode = __webpack_require__(19);\nvar build = __webpack_require__(18);\nvar isValid = __webpack_require__(21);\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = __webpack_require__(24) || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar alphabet = __webpack_require__(2);\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 0;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n\n/**\n * Module dependencies.\n */\n\nvar global = (function() { return this; })();\n\n/**\n * WebSocket constructor.\n */\n\nvar WebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WebSocket ? ws : null;\n\n/**\n * WebSocket constructor.\n *\n * The third `opts` options object gets ignored in web browsers, since it's\n * non-standard, and throws a TypeError if passed to the constructor.\n * See: https://github.com/einaros/ws/issues/227\n *\n * @param {String} uri\n * @param {Array} protocols (optional)\n * @param {Object) opts (optional)\n * @api public\n */\n\nfunction ws(uri, protocols, opts) {\n  var instance;\n  if (protocols) {\n    instance = new WebSocket(uri, protocols);\n  } else {\n    instance = new WebSocket(uri);\n  }\n  return instance;\n}\n\nif (WebSocket) ws.prototype = WebSocket.prototype;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection_1 = __webpack_require__(4);\r\nvar gw3_1 = __webpack_require__(9);\r\nvar hc_1 = __webpack_require__(10);\r\nvar ws_1 = __webpack_require__(14);\r\nvar gw3Connection_1 = __webpack_require__(6);\r\nvar gw1_1 = __webpack_require__(7);\r\nvar hc_2 = __webpack_require__(11);\r\nvar gw2_1 = __webpack_require__(8);\r\nvar inproc_1 = __webpack_require__(13);\r\nvar http_1 = __webpack_require__(12);\r\nvar PackageJson = __webpack_require__(3);\r\n/**\r\n * Check readme.md for detailed description\r\n */\r\nexports.default = function (settings) {\r\n    settings = settings || {};\r\n    settings.version = PackageJson.version;\r\n    var connection = new connection_1.default(settings);\r\n    var logger = settings.logger;\r\n    if (!logger) {\r\n        throw new Error(\"please pass a logger object\");\r\n    }\r\n    // by default use gw1 protocol and hc transport\r\n    var protocol = new hc_1.default();\r\n    var transport = new hc_2.default();\r\n    if (global.htmlContainer === undefined) {\r\n        if (settings.gw && settings.gw.facade && settings.gw.token && settings.protocolVersion === 3) {\r\n            transport = new inproc_1.default(settings.gw.token, settings.gw.facade, logger.subLogger(\"inproc\"));\r\n        }\r\n        else if (settings.ws !== undefined) {\r\n            transport = new ws_1.default(settings, logger.subLogger(\"ws\"));\r\n        }\r\n        else if (settings.http !== undefined) {\r\n            transport = new http_1.default(settings, logger.subLogger(\"http\"));\r\n        }\r\n        else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n        // if running in the browser - let's check which protocol version user wants\r\n        if (settings.protocolVersion === 3) {\r\n            var gw3Connection = new gw3Connection_1.default(settings);\r\n            var gw3Prot = gw3_1.default(gw3Connection, settings, logger.subLogger(\"gw3\"));\r\n            gw3Connection.init(transport, gw3Prot);\r\n            return gw3Connection.toAPI();\r\n        }\r\n        else if (settings.protocolVersion === 2) {\r\n            protocol = new gw2_1.default(connection);\r\n        }\r\n        else {\r\n            protocol = new gw1_1.default();\r\n        }\r\n    }\r\n    connection.init(transport, protocol);\r\n    return connection.toAPI();\r\n};\r\n//# sourceMappingURL=main.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callbackRegistry = __webpack_require__(0);\r\nvar shortid_1 = __webpack_require__(17);\r\n/**\r\n * Handles domain session lifetime and events for a given connection/domain pair\r\n */\r\nfunction default_1(domain, connection, logger) {\r\n    var isJoined = false;\r\n    var tryReconnecting = false;\r\n    /** holds latest options passed to join - used when doing reconnects */\r\n    var _latestOptions;\r\n    var callbacks = callbackRegistry();\r\n    // attach event handlers to connection\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(domain, \"welcome\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(domain, \"error\", function (msg) { return handleErrorMessage(msg); });\r\n    connection.on(domain, \"success\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(domain, \"result\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(domain, \"subscribed\", function (msg) { return handleSuccessMessage(msg); });\r\n    var requestsMap = {};\r\n    function join(options) {\r\n        _latestOptions = options;\r\n        return new Promise(function (resolve, reject) {\r\n            logger.debug(\"joining \" + domain);\r\n            var joinMsg = {\r\n                type: \"join\",\r\n                destination: domain,\r\n                domain: \"global\",\r\n                options: options,\r\n            };\r\n            send(joinMsg)\r\n                .then(function () {\r\n                handleJoined();\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    // join/leave, log in/(get) disconnect(ed)\r\n    function leave() {\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        var leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        // #deleteme - handling\r\n        send(leaveMsg).then(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n    function handleJoined() {\r\n        logger.debug(\"joined \" + domain);\r\n        isJoined = true;\r\n        var wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n    function handleConnectionDisconnected() {\r\n        logger.warn(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n    function handleConnectionLoggedIn() {\r\n        if (tryReconnecting) {\r\n            logger.info(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n    function onJoined(callback) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n    function onLeft(callback) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n    function handleErrorMessage(msg) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.error(msg);\r\n    }\r\n    function handleSuccessMessage(msg) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n    function getNextRequestId() {\r\n        return shortid_1.generate();\r\n    }\r\n    /**\r\n     * Send a message\r\n     * @param msg message to send\r\n     * @param tag a custom object (tag) - it will be transferred to success/error callback\r\n     * @param success\r\n     * @param error\r\n     */\r\n    function send(msg, tag) {\r\n        // Allows function caller to override request_id\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        // Allows function caller to override domain (join/leave messages are in global domain)\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        var requestId = msg.request_id;\r\n        return new Promise(function (resolve, reject) {\r\n            requestsMap[requestId] = {\r\n                success: function (successMsg) {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: function (errorMsg) {\r\n                    logger.warn(\"GW error - \" + JSON.stringify(errorMsg) + \" for request \" + JSON.stringify(msg));\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection.send(domain, domain, msg);\r\n        });\r\n    }\r\n    function sendFireAndForget(msg) {\r\n        // Allows function caller to override request_id\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        // Allows function caller to override domain (join/leave messages are in global domain)\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        connection.send(domain, domain, msg);\r\n    }\r\n    return {\r\n        join: join,\r\n        leave: leave,\r\n        onJoined: onJoined,\r\n        onLeft: onLeft,\r\n        send: send,\r\n        sendFireAndForget: sendFireAndForget,\r\n        on: function (type, callback) {\r\n            connection.on(domain, type, callback);\r\n        },\r\n        loggedIn: function (callback) { return connection.loggedIn(callback); },\r\n        connected: function (callback) { return connection.connected(callback); },\r\n        disconnected: function (callback) { return connection.disconnected(callback); },\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=gw3Domain.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=tick42-gateway-connection.js.map\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tick42-logger\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tick42-logger\"] = factory();\n\telse\n\t\troot[\"tick42-logger\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar levels_1 = __webpack_require__(2);\nvar LoggerImpl = function () {\n    function LoggerImpl(name, parent, metricSystem) {\n        this._subloggers = [];\n        this._name = name;\n        this._parent = parent;\n        if (parent) {\n            this._path = parent.path + \".\" + name;\n        } else {\n            this._path = name;\n        }\n        this._loggerFullName = \"[\" + this._path + \"]\";\n        // create metric system\n        if (typeof metricSystem !== \"undefined\") {\n            this.metricsLevel(\"warn\", metricSystem.subSystem(name));\n        }\n    }\n    Object.defineProperty(LoggerImpl.prototype, \"name\", {\n        get: function get() {\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoggerImpl.prototype, \"path\", {\n        get: function get() {\n            return this._path;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerImpl.prototype.subLogger = function (name) {\n        // Check if the sublogger is already created\n        var existingSub = this._subloggers.filter(function (subLogger) {\n            return subLogger.name === name;\n        })[0];\n        if (existingSub !== undefined) {\n            return existingSub;\n        }\n        // Check if the name isn't the same as one of the parent properties\n        Object.keys(this).forEach(function (key) {\n            if (key === name) {\n                throw new Error(\"This sub logger name is not allowed.\");\n            }\n        });\n        var sub = new LoggerImpl(name, this);\n        // add sublogger to subloggers array\n        this._subloggers.push(sub);\n        return sub;\n    };\n    LoggerImpl.prototype.publishLevel = function (level) {\n        if (level !== null && level !== undefined) {\n            this._publishLevel = level;\n        }\n        return this._publishLevel || this._parent.publishLevel();\n    };\n    LoggerImpl.prototype.consoleLevel = function (level) {\n        if (level !== null && level !== undefined) {\n            this._consoleLevel = level;\n        }\n        return this._consoleLevel || this._parent.consoleLevel();\n    };\n    LoggerImpl.prototype.metricsLevel = function (level, metricsSystem) {\n        if (level !== null && level !== undefined) {\n            this._metricLevel = level;\n        }\n        if (metricsSystem !== undefined) {\n            if ((typeof metricsSystem === \"undefined\" ? \"undefined\" : _typeof(metricsSystem)) === \"object\" && typeof metricsSystem.objectMetric === \"function\") {\n                this._metricSystem = metricsSystem;\n            } else {\n                throw new Error(\"Please specify metric system\");\n            }\n        }\n        return this._metricLevel || this._parent.metricsLevel();\n    };\n    LoggerImpl.prototype.log = function (message, level) {\n        this.publishMessage(level || levels_1.default.info, message);\n    };\n    LoggerImpl.prototype.trace = function (message) {\n        this.log(message, levels_1.default.trace);\n    };\n    LoggerImpl.prototype.debug = function (message) {\n        this.log(message, levels_1.default.debug);\n    };\n    LoggerImpl.prototype.info = function (message) {\n        this.log(message, levels_1.default.info);\n    };\n    LoggerImpl.prototype.warn = function (message) {\n        this.log(message, levels_1.default.warn);\n    };\n    LoggerImpl.prototype.error = function (message) {\n        this.log(message, levels_1.default.error);\n    };\n    LoggerImpl.prototype.toAPIObject = function () {\n        var that = this;\n        return {\n            name: this.name,\n            subLogger: this.subLogger.bind(that),\n            publishLevel: this.publishLevel.bind(that),\n            consoleLevel: this.consoleLevel.bind(that),\n            metricsLevel: this.metricsLevel.bind(that),\n            log: this.log.bind(that),\n            trace: this.trace.bind(that),\n            debug: this.debug.bind(that),\n            info: this.info.bind(that),\n            warn: this.warn.bind(that),\n            error: this.error.bind(that)\n        };\n    };\n    LoggerImpl.prototype.publishMessage = function (level, message) {\n        // Retrieve logger name and levels\n        var loggerName = this._loggerFullName;\n        // Add stack trace if the message is an error\n        if (level === levels_1.default.error) {\n            var e = new Error();\n            if (e.stack) {\n                message = message + \"\\n\" + e.stack.split(\"\\n\").slice(3).join(\"\\n\");\n            }\n        }\n        // Publish in console\n        if (levels_1.default.canPublish(level, this.consoleLevel())) {\n            var toPrint = loggerName + \": \" + message;\n            switch (level) {\n                case levels_1.default.trace:\n                    console.trace(toPrint);\n                    break;\n                case levels_1.default.debug:\n                    if (console.debug) {\n                        console.debug(toPrint);\n                    } else {\n                        console.log(toPrint);\n                    }\n                    break;\n                case levels_1.default.info:\n                    console.info(toPrint);\n                    break;\n                case levels_1.default.warn:\n                    console.warn(toPrint);\n                    break;\n                case levels_1.default.error:\n                    console.error(toPrint);\n                    break;\n            }\n        }\n        // Publish in file\n        if (levels_1.default.canPublish(level, this.publishLevel())) {\n            LoggerImpl.GetConnection().send(\"log\", \"LogMessage\", {\n                instance: LoggerImpl.Instance,\n                level: levels_1.default.order.indexOf(level),\n                logger: loggerName,\n                message: message\n            });\n        }\n        // Publish in metrics\n        if (levels_1.default.canPublish(level, this.metricsLevel())) {\n            if (this._metricSystem !== undefined) {\n                this._metricSystem.objectMetric(\"LogMessage\", {\n                    Level: level,\n                    Logger: loggerName,\n                    Message: message,\n                    Time: new Date()\n                });\n                if (level === levels_1.default.error) {\n                    this._metricSystem.setState(100, message);\n                }\n            }\n        }\n    };\n    return LoggerImpl;\n}();\nexports.default = LoggerImpl;\n//# sourceMappingURL=logger.js.map\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"tick42-logger\",\n\t\"version\": \"3.0.8\",\n\t\"description\": \"Glue library for logging\",\n\t\"main\": \"dist/node/tick42-logger.js\",\n\t\"browser\": \"dist/web/tick42-logger.js\",\n\t\"types\": \"./types/index.d.ts\",\n\t\"scripts\": {\n\t\t\"clean\": \"node ./build/scripts/clean.js\",\n\t\t\"pre:build\": \"npm run tslint && tsc && set NODE_ENV=development && npm run clean\",\n\t\t\"file-versionify\": \"node ./build/scripts/file-versionify.js\",\n\t\t\"tslint\": \"tslint -t codeFrame ./src/main.ts\",\n\t\t\"tslint:fix\": \"tslint -t codeFrame --fix ./src/main.ts\",\n\t\t\"watch\": \"onchange ./src/**/*.ts -- npm run build:dev\",\n\t\t\"build:dev\": \"npm run pre:build && set NODE_ENV=development && webpack && npm run file-versionify && npm run types\",\n\t\t\"build:prod\": \"npm run pre:build && set NODE_ENV=development && webpack && set NODE_ENV=production && webpack && npm run file-versionify && npm run types\",\n\t\t\"docs\": \"typedoc --options typedoc.json ./src\",\n\t\t\"types\": \"node ./build/scripts/copy-types.js\",\n\t\t\"prepublish\": \"npm run build:prod\",\n\t\t\"types:merged\": \"dts-generator --project ./ --out ./types/index.d.ts\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://stash.tick42.com:8443/scm/ofgw/js-logger.git\"\n\t},\n\t\"author\": \"Tick42\",\n\t\"license\": \"ISC\",\n\t\"precommit\": \"tslint:fix\",\n\t\"devDependencies\": {\n\t\t\"@types/tick42-gateway-connection\": \"^2.2.3\",\n\t\t\"babel-core\": \"^6.17.0\",\n\t\t\"babel-loader\": \"^6.4.1\",\n\t\t\"babel-plugin-add-module-exports\": \"^0.2.1\",\n\t\t\"babel-plugin-es6-promise\": \"^1.0.0\",\n\t\t\"babel-preset-es2015\": \"^6.16.0\",\n\t\t\"babel-preset-stage-2\": \"^6.22.0\",\n\t\t\"dts-generator\": \"^2.1.0\",\n\t\t\"es6-promise\": \"^4.1.0\",\n\t\t\"onchange\": \"3.*\",\n\t\t\"pre-commit\": \"^1.1.3\",\n\t\t\"shelljs\": \"^0.6.0\",\n\t\t\"tick42-webpack-config\": \"4.1.1\",\n\t\t\"tslint\": \"5.*\",\n\t\t\"typedoc\": \"^0.5.10\",\n\t\t\"typescript\": \"2.3.0\",\n\t\t\"webpack\": \"2.3.3\"\n\t}\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LogLevel = function () {\n    function LogLevel() {}\n    LogLevel.canPublish = function (level, restriction) {\n        var levelIdx = LogLevel.order.indexOf(level);\n        var restrictionIdx = LogLevel.order.indexOf(restriction);\n        return levelIdx >= restrictionIdx;\n    };\n    return LogLevel;\n}();\nLogLevel.off = \"off\";\nLogLevel.trace = \"trace\";\nLogLevel.debug = \"debug\";\nLogLevel.info = \"info\";\nLogLevel.warn = \"warn\";\nLogLevel.error = \"error\";\nLogLevel.order = [LogLevel.trace, LogLevel.debug, LogLevel.info, LogLevel.warn, LogLevel.error, LogLevel.off];\nexports.default = LogLevel;\n//# sourceMappingURL=levels.js.map\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logger_1 = __webpack_require__(0);\nvar PackageJson = __webpack_require__(1);\nexports.default = function (settings) {\n    // Convert instance to string, throw exceptions if it is not full\n    var identity = settings.identity;\n    if (!identity) {\n        throw new Error(\"identity is missing\");\n    }\n    var identityStr = identity.system + \"\\\\\" + identity.service + \"\\\\\" + identity.instance;\n    logger_1.default.Instance = identityStr;\n    logger_1.default.GetConnection = settings.getConnection;\n    var mainLogger = new logger_1.default(\"main\");\n    mainLogger.publishLevel(settings.publish || \"off\");\n    mainLogger.consoleLevel(settings.console || \"info\");\n    mainLogger.metricsLevel(settings.metrics || \"off\");\n    var apiLogger = mainLogger.toAPIObject();\n    apiLogger.version = PackageJson.version;\n    return apiLogger;\n};\n//# sourceMappingURL=main.js.map\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=tick42-logger.js.map\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tick42-metrics\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tick42-metrics\"] = factory();\n\telse\n\t\troot[\"tick42-metrics\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 20);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    DEFAULT: 0,\n    STRING: 1,\n    NUMBER: 2,\n    COUNT: 3,\n    RATE: 4,\n    STATISTICS: 6,\n    TIMESTAMP: 7,\n    ADDRESS: 8,\n    TIMESPAN: 10,\n    OBJECT: 11\n};\n//# sourceMappingURL=metric-types.js.map\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    validate: function validate(definition, parent, transport) {\n        // TODO: Add validation for parent, transport, system\n        if (definition === null || (typeof definition === \"undefined\" ? \"undefined\" : _typeof(definition)) !== \"object\") {\n            throw new Error(\"Missing definition\");\n        }\n        if (parent === null || (typeof parent === \"undefined\" ? \"undefined\" : _typeof(parent)) !== \"object\") {\n            throw new Error(\"Missing parent\");\n        }\n        if (transport === null || (typeof transport === \"undefined\" ? \"undefined\" : _typeof(transport)) !== \"object\") {\n            throw new Error(\"Missing transport\");\n        }\n    }\n};\n//# sourceMappingURL=helpers.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"tick42-metrics\",\n\t\"version\": \"2.3.4\",\n\t\"description\": \"\",\n\t\"main\": \"dist/node/tick42-metrics.js\",\n\t\"browser\": \"dist/web/tick42-metrics.js\",\n\t\"types\": \"types/index.d.ts\",\n\t\"scripts\": {\n\t\t\"clean\": \"node ./build/scripts/clean.js\",\n\t\t\"pre:build\": \"npm run tslint && tsc && set NODE_ENV=development && npm run clean\",\n\t\t\"file-versionify\": \"node ./build/scripts/file-versionify.js\",\n\t\t\"tslint\": \"tslint -t codeFrame ./src/main.ts\",\n\t\t\"tslint:fix\": \"tslint -t codeFrame --fix ./src/main.ts\",\n\t\t\"watch\": \"onchange ./src/**/*.ts -- npm run build:dev\",\n\t\t\"build:dev\": \"npm run pre:build && set NODE_ENV=development && webpack && npm run file-versionify && npm run types\",\n\t\t\"build:prod\": \"npm run pre:build && set NODE_ENV=development && webpack && set NODE_ENV=production && webpack && npm run file-versionify && npm run types\",\n\t\t\"docs\": \"typedoc --options typedoc.json ./src\",\n\t\t\"types\": \"node ./build/scripts/copy-types.js\",\n\t\t\"prepublish\": \"npm run build:prod\",\n\t\t\"types:merged\": \"dts-generator --project ./ --out ./types/index.d.ts\"\n\t},\n\t\"author\": \"Tick42\",\n\t\"license\": \"ISC\",\n\t\"precommit\": \"tslint:fix\",\n\t\"devDependencies\": {\n\t\t\"@types/tick42-gateway-connection\": \"^2.2.4\",\n\t\t\"@types/tick42-logger\": \"^3.0.6\",\n\t\t\"babel-core\": \"^6.17.0\",\n\t\t\"babel-loader\": \"^6.4.1\",\n\t\t\"babel-plugin-add-module-exports\": \"^0.2.1\",\n\t\t\"babel-plugin-es6-promise\": \"^1.0.0\",\n\t\t\"babel-preset-es2015\": \"^6.16.0\",\n\t\t\"babel-preset-stage-2\": \"^6.22.0\",\n\t\t\"dts-generator\": \"^2.1.0\",\n\t\t\"es6-promise\": \"^4.1.0\",\n\t\t\"onchange\": \"3.*\",\n\t\t\"pre-commit\": \"^1.1.3\",\n\t\t\"shelljs\": \"^0.6.0\",\n\t\t\"tick42-webpack-config\": \"4.1.1\",\n\t\t\"tslint\": \"5.*\",\n\t\t\"typedoc\": \"^0.5.10\",\n\t\t\"typescript\": \"2.3.0\",\n\t\t\"webpack\": \"2.3.3\"\n\t}\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar serializer_1 = __webpack_require__(18);\nfunction default_1(connection, config) {\n    var DEFAULT_HEARTBEAT_INTERVAL = 3000;\n    if (!connection || (typeof connection === \"undefined\" ? \"undefined\" : _typeof(connection)) !== \"object\") {\n        throw new Error(\"Connection is required parameter\");\n    }\n    var _connection = connection;\n    var heartbeatInterval = config.heartbeatInterval || DEFAULT_HEARTBEAT_INTERVAL;\n    var send = function send(type, message) {\n        _connection.send(\"metrics\", type, message);\n    };\n    function sendFull(repo) {\n        if (!repo.root) {\n            return;\n        }\n        if (repo.root.subSystems.length === 0) {\n            return;\n        }\n        sendFullSystem(repo.root);\n    }\n    function sendFullSystem(system) {\n        createSystem(system);\n        system.subSystems.forEach(function (sub) {\n            sendFullSystem(sub);\n        });\n        system.metrics.forEach(function (metric) {\n            createMetric(metric);\n        });\n    }\n    function heartbeat(repo) {\n        send(\"HeartbeatMetrics\", {\n            publishingInterval: heartbeatInterval,\n            instance: repo.instance\n        });\n    }\n    function createSystem(system) {\n        if (system.parent !== undefined) {\n            send(\"CreateMetricSystem\", {\n                id: system.id,\n                instance: system.repo.instance,\n                definition: {\n                    name: system.name,\n                    description: system.description,\n                    path: system.path\n                }\n            });\n        }\n    }\n    function updateSystem(system, state) {\n        send(\"UpdateMetricSystem\", {\n            id: system.id,\n            instance: system.repo.instance,\n            state: state\n        });\n    }\n    function createMetric(metric) {\n        send(\"CreateMetric\", serializer_1.default(metric));\n    }\n    function updateMetric(metric) {\n        send(\"UpdateMetric\", serializer_1.default(metric));\n    }\n    function init(repo) {\n        heartbeat(repo);\n        _connection.on(\"metrics\", \"MetricsSnapshotRequest\", function (instanceInfo) {\n            if (instanceInfo.Instance !== repo.instance) {\n                return;\n            }\n            sendFull(repo);\n        });\n        setInterval(function () {\n            heartbeat(repo);\n        }, heartbeatInterval);\n    }\n    var me = {\n        createSystem: createSystem,\n        updateSystem: updateSystem,\n        createMetric: createMetric,\n        updateMetric: updateMetric,\n        init: init\n    };\n    return me;\n}\nexports.default = default_1;\n//# sourceMappingURL=gw1.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar es6_promise_1 = __webpack_require__(6);\nvar serializer_1 = __webpack_require__(19);\nfunction default_1(connection, config) {\n    if (!connection || (typeof connection === \"undefined\" ? \"undefined\" : _typeof(connection)) !== \"object\") {\n        throw new Error(\"Connection is required parameter\");\n    }\n    var joinPromise;\n    var session;\n    var init = function init(repo) {\n        var resolveReadyPromise;\n        joinPromise = new es6_promise_1.Promise(function (resolve) {\n            resolveReadyPromise = resolve;\n        });\n        session = connection.domain(\"metrics\", config.logger);\n        session.onJoined(function (reconnect) {\n            if (!reconnect) {\n                resolveReadyPromise();\n                resolveReadyPromise = undefined;\n            }\n            // Creating root state metric\n            var rootStateMetric = {\n                name: \"/State\",\n                type: \"object\",\n                composite: {\n                    Description: {\n                        type: \"string\",\n                        description: \"\"\n                    },\n                    Value: {\n                        type: \"number\",\n                        description: \"\"\n                    }\n                },\n                description: \"System state\",\n                context: {}\n            };\n            var defineRootMetricsMsg = {\n                type: \"define\",\n                metrics: [rootStateMetric]\n            };\n            session.send(defineRootMetricsMsg);\n            if (reconnect) {\n                replayRepo(repo);\n            }\n        });\n        session.join(config.identity);\n    };\n    var replayRepo = function replayRepo(repo) {\n        replaySystem(repo.root);\n    };\n    var replaySystem = function replaySystem(system) {\n        // replay system\n        createSystem(system);\n        // replay all metrics in the system\n        system.metrics.forEach(function (m) {\n            createMetric(m);\n        });\n        // replay all sub-systems\n        system.subSystems.forEach(function (ss) {\n            replaySystem(ss);\n        });\n    };\n    var createSystem = function createSystem(system) {\n        if (system.parent === undefined) {\n            return;\n        }\n        joinPromise.then(function () {\n            var metric = {\n                name: serializer_1.normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\n                type: \"object\",\n                composite: {\n                    Description: {\n                        type: \"string\",\n                        description: \"\"\n                    },\n                    Value: {\n                        type: \"number\",\n                        description: \"\"\n                    }\n                },\n                description: \"System state\",\n                context: {}\n            };\n            var createMetricsMsg = {\n                type: \"define\",\n                metrics: [metric]\n            };\n            session.send(createMetricsMsg);\n        });\n    };\n    var updateSystem = function updateSystem(system, state) {\n        joinPromise.then(function () {\n            var updateMetric = {\n                type: \"publish\",\n                values: [{\n                    name: serializer_1.normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\n                    value: {\n                        Description: state.description,\n                        Value: state.state\n                    },\n                    timestamp: Date.now()\n                }]\n            };\n            session.send(updateMetric);\n            var stateObj = serializer_1.composeMsgForRootStateMetric(system);\n            var rootMetric = {\n                type: \"publish\",\n                peer_id: connection.peerId,\n                values: [{\n                    name: \"/State\",\n                    value: {\n                        Description: stateObj.description,\n                        Value: stateObj.value\n                    },\n                    timestamp: Date.now()\n                }]\n            };\n            session.send(rootMetric);\n        });\n    };\n    var createMetric = function createMetric(metric) {\n        joinPromise.then(function () {\n            var m = serializer_1.serializeMetric(metric);\n            var createMetricsMsg = {\n                type: \"define\",\n                metrics: [m]\n            };\n            session.send(createMetricsMsg);\n            if (typeof metric.value !== \"undefined\") {\n                updateMetric(metric);\n            }\n        });\n    };\n    var updateMetric = function updateMetric(metric) {\n        joinPromise.then(function () {\n            var value = serializer_1.getMetricValueByType(metric);\n            var publishMetricsMsg = {\n                type: \"publish\",\n                values: [{\n                    name: serializer_1.normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\n                    value: value,\n                    timestamp: Date.now()\n                }]\n            };\n            session.send(publishMetricsMsg);\n        });\n    };\n    return {\n        init: init,\n        createSystem: createSystem,\n        updateSystem: updateSystem,\n        createMetric: createMetric,\n        updateMetric: updateMetric\n    };\n}\nexports.default = default_1;\n//# sourceMappingURL=gw3.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar system_1 = __webpack_require__(21);\nvar PackageJson = __webpack_require__(2);\nfunction repository(options, protocol) {\n    if (!options.identity) {\n        throw new Error(\"Identity missing from metrics configuration\");\n    }\n    if (!options.identity.service || typeof options.identity.service !== \"string\") {\n        throw new Error(\"Service missing or invalid in metrics identity configuration\");\n    }\n    if (!options.identity.system || typeof options.identity.system !== \"string\") {\n        throw new Error(\"System missing or invalid in metrics identity configuration\");\n    }\n    if (!options.identity.instance || typeof options.identity.instance !== \"string\") {\n        throw new Error(\"Instance missing or invalid in metrics identity configuration\");\n    }\n    var identity = options.identity;\n    var instance = options.identity.system + \"/\" + options.identity.service + \"/\" + options.identity.instance;\n    var version = PackageJson.version;\n    function _initSystemMetrics(rootSystem, useClickStream) {\n        // Create some system metrics\n        if (typeof navigator !== \"undefined\") {\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\n        }\n        if (useClickStream && typeof document !== \"undefined\") {\n            var clickStream_1 = rootSystem.subSystem(\"ClickStream\");\n            var documentClickHandler = function documentClickHandler(e) {\n                if (!e.target) {\n                    return;\n                }\n                var target = e.target;\n                clickStream_1.objectMetric(\"LastBrowserEvent\", {\n                    type: \"click\",\n                    timestamp: new Date(),\n                    target: {\n                        className: e.target ? target.className : \"\",\n                        id: target.id,\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\n                        href: target.href || \"\"\n                    }\n                });\n            };\n            // Create click stream record\n            clickStream_1.objectMetric(\"Page\", {\n                title: document.title,\n                page: window.location.href\n            });\n            if (document.addEventListener) {\n                document.addEventListener(\"click\", documentClickHandler);\n            } else {\n                // For IE versions prior to IE9, attachEvent method should be used to register the specified listener\n                // to the EventTarget it is called on, for others addEventListener should be used.\n                // (<any>document)\n                document.attachEvent(\"onclick\", documentClickHandler);\n            }\n        }\n    }\n    var me = {\n        identity: identity,\n        instance: instance,\n        version: version,\n        get root() {\n            return _root;\n        }\n    };\n    protocol.init(me);\n    var _root = system_1.default(\"\", me, protocol);\n    _initSystemMetrics(_root, options.clickStream || options.clickStream === undefined);\n    return me;\n}\nexports.default = repository;\n//# sourceMappingURL=repository.js.map\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process, global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var require;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.1.0\n */\n\n(function (global, factory) {\n  ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : global.ES6Promise = factory();\n})(undefined, function () {\n  'use strict';\n\n  function objectOrFunction(x) {\n    return typeof x === 'function' || (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null;\n  }\n\n  function isFunction(x) {\n    return typeof x === 'function';\n  }\n\n  var _isArray = undefined;\n  if (!Array.isArray) {\n    _isArray = function _isArray(x) {\n      return Object.prototype.toString.call(x) === '[object Array]';\n    };\n  } else {\n    _isArray = Array.isArray;\n  }\n\n  var isArray = _isArray;\n\n  var len = 0;\n  var vertxNext = undefined;\n  var customSchedulerFn = undefined;\n\n  var asap = function asap(callback, arg) {\n    queue[len] = callback;\n    queue[len + 1] = arg;\n    len += 2;\n    if (len === 2) {\n      // If len is 2, that means that we need to schedule an async flush.\n      // If additional callbacks are queued before the queue is flushed, they\n      // will be processed by this flush that we are scheduling.\n      if (customSchedulerFn) {\n        customSchedulerFn(flush);\n      } else {\n        scheduleFlush();\n      }\n    }\n  };\n\n  function setScheduler(scheduleFn) {\n    customSchedulerFn = scheduleFn;\n  }\n\n  function setAsap(asapFn) {\n    asap = asapFn;\n  }\n\n  var browserWindow = typeof window !== 'undefined' ? window : undefined;\n  var browserGlobal = browserWindow || {};\n  var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\n  var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n  // test for web worker but not in IE10\n  var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n  // node\n  function useNextTick() {\n    // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n    // see https://github.com/cujojs/when/issues/410 for details\n    return function () {\n      return process.nextTick(flush);\n    };\n  }\n\n  // vertx\n  function useVertxTimer() {\n    if (typeof vertxNext !== 'undefined') {\n      return function () {\n        vertxNext(flush);\n      };\n    }\n\n    return useSetTimeout();\n  }\n\n  function useMutationObserver() {\n    var iterations = 0;\n    var observer = new BrowserMutationObserver(flush);\n    var node = document.createTextNode('');\n    observer.observe(node, { characterData: true });\n\n    return function () {\n      node.data = iterations = ++iterations % 2;\n    };\n  }\n\n  // web worker\n  function useMessageChannel() {\n    var channel = new MessageChannel();\n    channel.port1.onmessage = flush;\n    return function () {\n      return channel.port2.postMessage(0);\n    };\n  }\n\n  function useSetTimeout() {\n    // Store setTimeout reference so es6-promise will be unaffected by\n    // other code modifying setTimeout (like sinon.useFakeTimers())\n    var globalSetTimeout = setTimeout;\n    return function () {\n      return globalSetTimeout(flush, 1);\n    };\n  }\n\n  var queue = new Array(1000);\n  function flush() {\n    for (var i = 0; i < len; i += 2) {\n      var callback = queue[i];\n      var arg = queue[i + 1];\n\n      callback(arg);\n\n      queue[i] = undefined;\n      queue[i + 1] = undefined;\n    }\n\n    len = 0;\n  }\n\n  function attemptVertx() {\n    try {\n      var r = require;\n      var vertx = __webpack_require__(22);\n      vertxNext = vertx.runOnLoop || vertx.runOnContext;\n      return useVertxTimer();\n    } catch (e) {\n      return useSetTimeout();\n    }\n  }\n\n  var scheduleFlush = undefined;\n  // Decide what async method to use to triggering processing of queued callbacks:\n  if (isNode) {\n    scheduleFlush = useNextTick();\n  } else if (BrowserMutationObserver) {\n    scheduleFlush = useMutationObserver();\n  } else if (isWorker) {\n    scheduleFlush = useMessageChannel();\n  } else if (browserWindow === undefined && \"function\" === 'function') {\n    scheduleFlush = attemptVertx();\n  } else {\n    scheduleFlush = useSetTimeout();\n  }\n\n  function then(onFulfillment, onRejection) {\n    var _arguments = arguments;\n\n    var parent = this;\n\n    var child = new this.constructor(noop);\n\n    if (child[PROMISE_ID] === undefined) {\n      makePromise(child);\n    }\n\n    var _state = parent._state;\n\n    if (_state) {\n      (function () {\n        var callback = _arguments[_state - 1];\n        asap(function () {\n          return invokeCallback(_state, child, callback, parent._result);\n        });\n      })();\n    } else {\n      subscribe(parent, child, onFulfillment, onRejection);\n    }\n\n    return child;\n  }\n\n  /**\n    `Promise.resolve` returns a promise that will become resolved with the\n    passed `value`. It is shorthand for the following:\n  \n    ```javascript\n    let promise = new Promise(function(resolve, reject){\n      resolve(1);\n    });\n  \n    promise.then(function(value){\n      // value === 1\n    });\n    ```\n  \n    Instead of writing the above, your code now simply becomes the following:\n  \n    ```javascript\n    let promise = Promise.resolve(1);\n  \n    promise.then(function(value){\n      // value === 1\n    });\n    ```\n  \n    @method resolve\n    @static\n    @param {Any} value value that the returned promise will be resolved with\n    Useful for tooling.\n    @return {Promise} a promise that will become fulfilled with the given\n    `value`\n  */\n  function resolve(object) {\n    /*jshint validthis:true */\n    var Constructor = this;\n\n    if (object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object.constructor === Constructor) {\n      return object;\n    }\n\n    var promise = new Constructor(noop);\n    _resolve(promise, object);\n    return promise;\n  }\n\n  var PROMISE_ID = Math.random().toString(36).substring(16);\n\n  function noop() {}\n\n  var PENDING = void 0;\n  var FULFILLED = 1;\n  var REJECTED = 2;\n\n  var GET_THEN_ERROR = new ErrorObject();\n\n  function selfFulfillment() {\n    return new TypeError(\"You cannot resolve a promise with itself\");\n  }\n\n  function cannotReturnOwn() {\n    return new TypeError('A promises callback cannot return that same promise.');\n  }\n\n  function getThen(promise) {\n    try {\n      return promise.then;\n    } catch (error) {\n      GET_THEN_ERROR.error = error;\n      return GET_THEN_ERROR;\n    }\n  }\n\n  function tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n    try {\n      then.call(value, fulfillmentHandler, rejectionHandler);\n    } catch (e) {\n      return e;\n    }\n  }\n\n  function handleForeignThenable(promise, thenable, then) {\n    asap(function (promise) {\n      var sealed = false;\n      var error = tryThen(then, thenable, function (value) {\n        if (sealed) {\n          return;\n        }\n        sealed = true;\n        if (thenable !== value) {\n          _resolve(promise, value);\n        } else {\n          fulfill(promise, value);\n        }\n      }, function (reason) {\n        if (sealed) {\n          return;\n        }\n        sealed = true;\n\n        _reject(promise, reason);\n      }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n      if (!sealed && error) {\n        sealed = true;\n        _reject(promise, error);\n      }\n    }, promise);\n  }\n\n  function handleOwnThenable(promise, thenable) {\n    if (thenable._state === FULFILLED) {\n      fulfill(promise, thenable._result);\n    } else if (thenable._state === REJECTED) {\n      _reject(promise, thenable._result);\n    } else {\n      subscribe(thenable, undefined, function (value) {\n        return _resolve(promise, value);\n      }, function (reason) {\n        return _reject(promise, reason);\n      });\n    }\n  }\n\n  function handleMaybeThenable(promise, maybeThenable, then$$) {\n    if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n      handleOwnThenable(promise, maybeThenable);\n    } else {\n      if (then$$ === GET_THEN_ERROR) {\n        _reject(promise, GET_THEN_ERROR.error);\n        GET_THEN_ERROR.error = null;\n      } else if (then$$ === undefined) {\n        fulfill(promise, maybeThenable);\n      } else if (isFunction(then$$)) {\n        handleForeignThenable(promise, maybeThenable, then$$);\n      } else {\n        fulfill(promise, maybeThenable);\n      }\n    }\n  }\n\n  function _resolve(promise, value) {\n    if (promise === value) {\n      _reject(promise, selfFulfillment());\n    } else if (objectOrFunction(value)) {\n      handleMaybeThenable(promise, value, getThen(value));\n    } else {\n      fulfill(promise, value);\n    }\n  }\n\n  function publishRejection(promise) {\n    if (promise._onerror) {\n      promise._onerror(promise._result);\n    }\n\n    publish(promise);\n  }\n\n  function fulfill(promise, value) {\n    if (promise._state !== PENDING) {\n      return;\n    }\n\n    promise._result = value;\n    promise._state = FULFILLED;\n\n    if (promise._subscribers.length !== 0) {\n      asap(publish, promise);\n    }\n  }\n\n  function _reject(promise, reason) {\n    if (promise._state !== PENDING) {\n      return;\n    }\n    promise._state = REJECTED;\n    promise._result = reason;\n\n    asap(publishRejection, promise);\n  }\n\n  function subscribe(parent, child, onFulfillment, onRejection) {\n    var _subscribers = parent._subscribers;\n    var length = _subscribers.length;\n\n    parent._onerror = null;\n\n    _subscribers[length] = child;\n    _subscribers[length + FULFILLED] = onFulfillment;\n    _subscribers[length + REJECTED] = onRejection;\n\n    if (length === 0 && parent._state) {\n      asap(publish, parent);\n    }\n  }\n\n  function publish(promise) {\n    var subscribers = promise._subscribers;\n    var settled = promise._state;\n\n    if (subscribers.length === 0) {\n      return;\n    }\n\n    var child = undefined,\n        callback = undefined,\n        detail = promise._result;\n\n    for (var i = 0; i < subscribers.length; i += 3) {\n      child = subscribers[i];\n      callback = subscribers[i + settled];\n\n      if (child) {\n        invokeCallback(settled, child, callback, detail);\n      } else {\n        callback(detail);\n      }\n    }\n\n    promise._subscribers.length = 0;\n  }\n\n  function ErrorObject() {\n    this.error = null;\n  }\n\n  var TRY_CATCH_ERROR = new ErrorObject();\n\n  function tryCatch(callback, detail) {\n    try {\n      return callback(detail);\n    } catch (e) {\n      TRY_CATCH_ERROR.error = e;\n      return TRY_CATCH_ERROR;\n    }\n  }\n\n  function invokeCallback(settled, promise, callback, detail) {\n    var hasCallback = isFunction(callback),\n        value = undefined,\n        error = undefined,\n        succeeded = undefined,\n        failed = undefined;\n\n    if (hasCallback) {\n      value = tryCatch(callback, detail);\n\n      if (value === TRY_CATCH_ERROR) {\n        failed = true;\n        error = value.error;\n        value.error = null;\n      } else {\n        succeeded = true;\n      }\n\n      if (promise === value) {\n        _reject(promise, cannotReturnOwn());\n        return;\n      }\n    } else {\n      value = detail;\n      succeeded = true;\n    }\n\n    if (promise._state !== PENDING) {\n      // noop\n    } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n  }\n\n  function initializePromise(promise, resolver) {\n    try {\n      resolver(function resolvePromise(value) {\n        _resolve(promise, value);\n      }, function rejectPromise(reason) {\n        _reject(promise, reason);\n      });\n    } catch (e) {\n      _reject(promise, e);\n    }\n  }\n\n  var id = 0;\n  function nextId() {\n    return id++;\n  }\n\n  function makePromise(promise) {\n    promise[PROMISE_ID] = id++;\n    promise._state = undefined;\n    promise._result = undefined;\n    promise._subscribers = [];\n  }\n\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this._input = input;\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate();\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      _reject(this.promise, validationError());\n    }\n  }\n\n  function validationError() {\n    return new Error('Array Methods must be provided an Array');\n  };\n\n  Enumerator.prototype._enumerate = function () {\n    var length = this.length;\n    var _input = this._input;\n\n    for (var i = 0; this._state === PENDING && i < length; i++) {\n      this._eachEntry(_input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function (entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$ = c.resolve;\n\n    if (resolve$$ === resolve) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$) {\n          return resolve$$(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function (state, i, value) {\n    var promise = this.promise;\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        _reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function (promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  /**\n    `Promise.all` accepts an array of promises, and returns a new promise which\n    is fulfilled with an array of fulfillment values for the passed promises, or\n    rejected with the reason of the first passed promise to be rejected. It casts all\n    elements of the passed iterable to promises as it runs this algorithm.\n  \n    Example:\n  \n    ```javascript\n    let promise1 = resolve(1);\n    let promise2 = resolve(2);\n    let promise3 = resolve(3);\n    let promises = [ promise1, promise2, promise3 ];\n  \n    Promise.all(promises).then(function(array){\n      // The array here would be [ 1, 2, 3 ];\n    });\n    ```\n  \n    If any of the `promises` given to `all` are rejected, the first promise\n    that is rejected will be given as an argument to the returned promises's\n    rejection handler. For example:\n  \n    Example:\n  \n    ```javascript\n    let promise1 = resolve(1);\n    let promise2 = reject(new Error(\"2\"));\n    let promise3 = reject(new Error(\"3\"));\n    let promises = [ promise1, promise2, promise3 ];\n  \n    Promise.all(promises).then(function(array){\n      // Code here never runs because there are rejected promises!\n    }, function(error) {\n      // error.message === \"2\"\n    });\n    ```\n  \n    @method all\n    @static\n    @param {Array} entries array of promises\n    @param {String} label optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise} promise that is fulfilled when all `promises` have been\n    fulfilled, or rejected if any of them become rejected.\n    @static\n  */\n  function all(entries) {\n    return new Enumerator(this, entries).promise;\n  }\n\n  /**\n    `Promise.race` returns a new promise which is settled in the same way as the\n    first passed promise to settle.\n  \n    Example:\n  \n    ```javascript\n    let promise1 = new Promise(function(resolve, reject){\n      setTimeout(function(){\n        resolve('promise 1');\n      }, 200);\n    });\n  \n    let promise2 = new Promise(function(resolve, reject){\n      setTimeout(function(){\n        resolve('promise 2');\n      }, 100);\n    });\n  \n    Promise.race([promise1, promise2]).then(function(result){\n      // result === 'promise 2' because it was resolved before promise1\n      // was resolved.\n    });\n    ```\n  \n    `Promise.race` is deterministic in that only the state of the first\n    settled promise matters. For example, even if other promises given to the\n    `promises` array argument are resolved, but the first settled promise has\n    become rejected before the other promises became fulfilled, the returned\n    promise will become rejected:\n  \n    ```javascript\n    let promise1 = new Promise(function(resolve, reject){\n      setTimeout(function(){\n        resolve('promise 1');\n      }, 200);\n    });\n  \n    let promise2 = new Promise(function(resolve, reject){\n      setTimeout(function(){\n        reject(new Error('promise 2'));\n      }, 100);\n    });\n  \n    Promise.race([promise1, promise2]).then(function(result){\n      // Code here never runs\n    }, function(reason){\n      // reason.message === 'promise 2' because promise 2 became rejected before\n      // promise 1 became fulfilled\n    });\n    ```\n  \n    An example real-world use case is implementing timeouts:\n  \n    ```javascript\n    Promise.race([ajax('foo.json'), timeout(5000)])\n    ```\n  \n    @method race\n    @static\n    @param {Array} promises array of promises to observe\n    Useful for tooling.\n    @return {Promise} a promise which settles in the same way as the first passed\n    promise to settle.\n  */\n  function race(entries) {\n    /*jshint validthis:true */\n    var Constructor = this;\n\n    if (!isArray(entries)) {\n      return new Constructor(function (_, reject) {\n        return reject(new TypeError('You must pass an array to race.'));\n      });\n    } else {\n      return new Constructor(function (resolve, reject) {\n        var length = entries.length;\n        for (var i = 0; i < length; i++) {\n          Constructor.resolve(entries[i]).then(resolve, reject);\n        }\n      });\n    }\n  }\n\n  /**\n    `Promise.reject` returns a promise rejected with the passed `reason`.\n    It is shorthand for the following:\n  \n    ```javascript\n    let promise = new Promise(function(resolve, reject){\n      reject(new Error('WHOOPS'));\n    });\n  \n    promise.then(function(value){\n      // Code here doesn't run because the promise is rejected!\n    }, function(reason){\n      // reason.message === 'WHOOPS'\n    });\n    ```\n  \n    Instead of writing the above, your code now simply becomes the following:\n  \n    ```javascript\n    let promise = Promise.reject(new Error('WHOOPS'));\n  \n    promise.then(function(value){\n      // Code here doesn't run because the promise is rejected!\n    }, function(reason){\n      // reason.message === 'WHOOPS'\n    });\n    ```\n  \n    @method reject\n    @static\n    @param {Any} reason value that the returned promise will be rejected with.\n    Useful for tooling.\n    @return {Promise} a promise rejected with the given `reason`.\n  */\n  function reject(reason) {\n    /*jshint validthis:true */\n    var Constructor = this;\n    var promise = new Constructor(noop);\n    _reject(promise, reason);\n    return promise;\n  }\n\n  function needsResolver() {\n    throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n  }\n\n  function needsNew() {\n    throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n  }\n\n  /**\n    Promise objects represent the eventual result of an asynchronous operation. The\n    primary way of interacting with a promise is through its `then` method, which\n    registers callbacks to receive either a promise's eventual value or the reason\n    why the promise cannot be fulfilled.\n  \n    Terminology\n    -----------\n  \n    - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n    - `thenable` is an object or function that defines a `then` method.\n    - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n    - `exception` is a value that is thrown using the throw statement.\n    - `reason` is a value that indicates why a promise was rejected.\n    - `settled` the final resting state of a promise, fulfilled or rejected.\n  \n    A promise can be in one of three states: pending, fulfilled, or rejected.\n  \n    Promises that are fulfilled have a fulfillment value and are in the fulfilled\n    state.  Promises that are rejected have a rejection reason and are in the\n    rejected state.  A fulfillment value is never a thenable.\n  \n    Promises can also be said to *resolve* a value.  If this value is also a\n    promise, then the original promise's settled state will match the value's\n    settled state.  So a promise that *resolves* a promise that rejects will\n    itself reject, and a promise that *resolves* a promise that fulfills will\n    itself fulfill.\n  \n  \n    Basic Usage:\n    ------------\n  \n    ```js\n    let promise = new Promise(function(resolve, reject) {\n      // on success\n      resolve(value);\n  \n      // on failure\n      reject(reason);\n    });\n  \n    promise.then(function(value) {\n      // on fulfillment\n    }, function(reason) {\n      // on rejection\n    });\n    ```\n  \n    Advanced Usage:\n    ---------------\n  \n    Promises shine when abstracting away asynchronous interactions such as\n    `XMLHttpRequest`s.\n  \n    ```js\n    function getJSON(url) {\n      return new Promise(function(resolve, reject){\n        let xhr = new XMLHttpRequest();\n  \n        xhr.open('GET', url);\n        xhr.onreadystatechange = handler;\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Accept', 'application/json');\n        xhr.send();\n  \n        function handler() {\n          if (this.readyState === this.DONE) {\n            if (this.status === 200) {\n              resolve(this.response);\n            } else {\n              reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n            }\n          }\n        };\n      });\n    }\n  \n    getJSON('/posts.json').then(function(json) {\n      // on fulfillment\n    }, function(reason) {\n      // on rejection\n    });\n    ```\n  \n    Unlike callbacks, promises are great composable primitives.\n  \n    ```js\n    Promise.all([\n      getJSON('/posts'),\n      getJSON('/comments')\n    ]).then(function(values){\n      values[0] // => postsJSON\n      values[1] // => commentsJSON\n  \n      return values;\n    });\n    ```\n  \n    @class Promise\n    @param {function} resolver\n    Useful for tooling.\n    @constructor\n  */\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  Promise.all = all;\n  Promise.race = race;\n  Promise.resolve = resolve;\n  Promise.reject = reject;\n  Promise._setScheduler = setScheduler;\n  Promise._setAsap = setAsap;\n  Promise._asap = asap;\n\n  Promise.prototype = {\n    constructor: Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n    \n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n    \n      Chaining\n      --------\n    \n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n    \n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n    \n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n    \n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n    \n      Assimilation\n      ------------\n    \n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n    \n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n    \n      If the assimliated promise rejects, then the downstream promise will also reject.\n    \n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n    \n      Simple Example\n      --------------\n    \n      Synchronous Example\n    \n      ```javascript\n      let result;\n    \n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n    \n      Errback Example\n    \n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n    \n      Promise Example;\n    \n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n    \n      Advanced Example\n      --------------\n    \n      Synchronous Example\n    \n      ```javascript\n      let author, books;\n    \n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n    \n      Errback Example\n    \n      ```js\n    \n      function foundBooks(books) {\n    \n      }\n    \n      function failure(reason) {\n    \n      }\n    \n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n    \n      Promise Example;\n    \n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n    \n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n    then: then,\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n    \n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n    \n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n    \n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n    \n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n    'catch': function _catch(onRejection) {\n      return this.then(null, onRejection);\n    }\n  };\n\n  function polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n      local = global;\n    } else if (typeof self !== 'undefined') {\n      local = self;\n    } else {\n      try {\n        local = Function('return this')();\n      } catch (e) {\n        throw new Error('polyfill failed because global object is unavailable in this environment');\n      }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n      var promiseToString = null;\n      try {\n        promiseToString = Object.prototype.toString.call(P.resolve());\n      } catch (e) {\n        // silently ignored\n      }\n\n      if (promiseToString === '[object Promise]' && !P.cast) {\n        return;\n      }\n    }\n\n    local.Promise = Promise;\n  }\n\n  // Strange compat..\n  Promise.polyfill = polyfill;\n  Promise.Promise = Promise;\n\n  return Promise;\n});\n//# sourceMappingURL=es6-promise.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(8)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while (len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n    return [];\n};\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n    return '/';\n};\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function () {\n    return 0;\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction addressMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.ADDRESS;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        update: update,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = addressMetric;\n//# sourceMappingURL=address.js.map\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction countMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || 0;\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.COUNT;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    function incrementBy(num) {\n        update(_value + num);\n    }\n    function increment() {\n        incrementBy(1);\n    }\n    function decrement() {\n        incrementBy(-1);\n    }\n    function decrementBy(num) {\n        incrementBy(num * -1);\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get path() {\n            return _path;\n        },\n        get value() {\n            return _value;\n        },\n        update: update,\n        getValueType: getValueType,\n        incrementBy: incrementBy,\n        increment: increment,\n        decrement: decrement,\n        decrementBy: decrementBy\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = countMetric;\n//# sourceMappingURL=count.js.map\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction numberMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _path = parent.path.slice(0);\n    var _value = value || 0;\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.NUMBER;\n    _path.push(parent.name);\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    function incrementBy(num) {\n        update(_value + num);\n    }\n    function increment() {\n        incrementBy(1);\n    }\n    function decrement() {\n        incrementBy(-1);\n    }\n    function decrementBy(num) {\n        incrementBy(num * -1);\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        get value() {\n            return _value;\n        },\n        type: type,\n        get path() {\n            return _path;\n        },\n        update: update,\n        getValueType: getValueType,\n        incrementBy: incrementBy,\n        increment: increment,\n        decrement: decrement,\n        decrementBy: decrementBy\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = numberMetric;\n//# sourceMappingURL=number.js.map\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metric_types_1 = __webpack_require__(0);\nvar helpers_1 = __webpack_require__(1);\nfunction objectMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.OBJECT;\n    function update(newValue) {\n        mergeValues(newValue);\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    function mergeValues(values) {\n        return Object.keys(_value).forEach(function (k) {\n            if (typeof values[k] !== \"undefined\") {\n                _value[k] = values[k];\n            }\n        });\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        update: update,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = objectMetric;\n//# sourceMappingURL=object.js.map\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction rateMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.RATE;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        update: update,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = rateMetric;\n//# sourceMappingURL=rate.js.map\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction statisticsMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.STATISTICS;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        update: update,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = statisticsMetric;\n//# sourceMappingURL=statistics.js.map\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction stringMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.STRING;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function getValueType() {\n        return undefined;\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        type: type,\n        update: update,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = stringMetric;\n//# sourceMappingURL=string.js.map\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction timespanMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.TIMESPAN;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function start() {\n        update(true);\n    }\n    function stop() {\n        update(false);\n    }\n    function getValueType() {\n        return undefined;\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        update: update,\n        start: start,\n        stop: stop,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = timespanMetric;\n//# sourceMappingURL=timespan.js.map\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(1);\nvar metric_types_1 = __webpack_require__(0);\nfunction timestampMetric(definition, parent, transport, value) {\n    helpers_1.default.validate(definition, parent, transport);\n    var _transport = transport;\n    var _value = value || \"\";\n    var _path = parent.path.slice(0);\n    _path.push(parent.name);\n    var name = definition.name;\n    var description = definition.description;\n    var period = definition.period;\n    var resolution = definition.resolution;\n    var system = parent;\n    var repo = parent.repo;\n    var id = parent.path + \"/\" + name;\n    var type = metric_types_1.default.TIMESTAMP;\n    function update(newValue) {\n        _value = newValue;\n        _transport.updateMetric(me);\n        // NOTE: Optionally return the updated metric here.\n    }\n    function now() {\n        update(new Date());\n    }\n    function getValueType() {\n        return undefined;\n    }\n    var me = {\n        name: name,\n        description: description,\n        period: period,\n        resolution: resolution,\n        system: system,\n        repo: repo,\n        id: id,\n        type: type,\n        get value() {\n            return _value;\n        },\n        get path() {\n            return _path;\n        },\n        update: update,\n        now: now,\n        getValueType: getValueType\n    };\n    _transport.createMetric(me);\n    return me;\n}\nexports.default = timestampMetric;\n//# sourceMappingURL=timestamp.js.map\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metric_types_1 = __webpack_require__(0);\nfunction metricToMessage(metric) {\n    var definition = getMetricDefinition(metric.name, metric.value, metric.path, metric.type, metric.description, metric.period, metric.resolution);\n    function getMetricDefinition(name, value, path, type, description, period, resolution) {\n        var _definition = {\n            name: name,\n            description: description,\n            type: type ? type : getTypeFromValue(value),\n            path: path,\n            resolution: resolution,\n            period: period\n        };\n        if (_definition.type === metric_types_1.default.OBJECT) {\n            _definition.Composite = Object.keys(value).reduce(function (arr, key) {\n                var val = value[key];\n                arr.push(getMetricDefinition(key, val, path));\n                return arr;\n            }, []);\n        }\n        return _definition;\n    }\n    function serializeValue(value, _metric) {\n        if (value && value.constructor === Date) {\n            return {\n                value: {\n                    type: _valueTypes.indexOf(\"date\"),\n                    value: value.valueOf(),\n                    isArray: false\n                }\n            };\n        }\n        if ((typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) === \"object\") {\n            return {\n                CompositeValue: Object.keys(value).reduce(function (arr, key) {\n                    var val = serializeValue(value[key]);\n                    val.InnerMetricName = key;\n                    arr.push(val);\n                    return arr;\n                }, [])\n            };\n        }\n        var valueType = _metric ? _metric.getValueType() : undefined;\n        valueType = valueType || _valueTypes.indexOf(typeof value === \"undefined\" ? \"undefined\" : _typeof(value));\n        return {\n            value: {\n                type: valueType,\n                value: value,\n                isArray: false\n            }\n        };\n    }\n    function getTypeFromValue(value) {\n        var typeAsString = value.constructor === Date ? \"timestamp\" : typeof value === \"undefined\" ? \"undefined\" : _typeof(value);\n        switch (typeAsString) {\n            case \"string\":\n                return metric_types_1.default.STRING;\n            case \"number\":\n                return metric_types_1.default.NUMBER;\n            case \"timestamp\":\n                return metric_types_1.default.TIMESTAMP;\n            case \"object\":\n                return metric_types_1.default.OBJECT;\n        }\n        return 0;\n    }\n    var _valueTypes = [\"boolean\", \"int\", \"number\", \"long\", \"string\", \"date\", \"object\"];\n    return {\n        id: metric.id,\n        instance: metric.repo.instance,\n        definition: definition,\n        value: serializeValue(metric.value, metric)\n    };\n}\nexports.default = metricToMessage;\n//# sourceMappingURL=serializer.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metric_types_1 = __webpack_require__(0);\nfunction getMetricTypeByValue(metric) {\n    if (metric.value.constructor === Date || metric.type === metric_types_1.default.TIMESPAN || metric.type === metric_types_1.default.TIMESTAMP) {\n        return \"timestamp\";\n    } else if (typeof metric.value === \"number\") {\n        return \"number\";\n    } else if (typeof metric.value === \"string\" || metric.type === metric_types_1.default.RATE) {\n        return \"string\";\n    } else if (_typeof(metric.value) === \"object\") {\n        return \"object\";\n    }\n}\nfunction getTypeByValue(value) {\n    if (value.constructor === Date) {\n        return \"timestamp\";\n    } else if (typeof value === \"number\") {\n        return \"number\";\n    } else if (typeof value === \"string\") {\n        return \"string\";\n    } else if ((typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) === \"object\") {\n        return \"object\";\n    } else {\n        return \"string\";\n    }\n}\nfunction serializeMetric(metric) {\n    var serializedMetrics = {};\n    var type = getMetricTypeByValue(metric);\n    if (type === \"object\") {\n        var values = Object.keys(metric.value).reduce(function (memo, key) {\n            var innerType = getTypeByValue(metric.value[key]);\n            if (innerType === \"object\") {\n                var composite = defineNestedComposite(metric.value[key]);\n                memo[key] = {\n                    type: \"object\",\n                    description: \"\",\n                    context: {},\n                    composite: composite\n                };\n            } else {\n                memo[key] = {\n                    type: innerType,\n                    description: \"\",\n                    context: {}\n                };\n            }\n            return memo;\n        }, {});\n        serializedMetrics.composite = values;\n    }\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\n    serializedMetrics.type = type;\n    serializedMetrics.description = metric.description;\n    serializedMetrics.context = {};\n    return serializedMetrics;\n}\nexports.serializeMetric = serializeMetric;\nfunction defineNestedComposite(values) {\n    return Object.keys(values).reduce(function (memo, key) {\n        var type = getTypeByValue(values[key]);\n        if (type === \"object\") {\n            memo[key] = {\n                type: \"object\",\n                description: \"\",\n                context: {},\n                composite: defineNestedComposite(values[key])\n            };\n        } else {\n            memo[key] = {\n                type: type,\n                description: \"\",\n                context: {}\n            };\n        }\n        return memo;\n    }, {});\n}\nfunction normalizeMetricName(name) {\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\n        return \"/\" + name;\n    } else {\n        return name;\n    }\n}\nexports.normalizeMetricName = normalizeMetricName;\nfunction getMetricValueByType(metric) {\n    var type = getMetricTypeByValue(metric);\n    if (type === \"timestamp\") {\n        return Date.now();\n    } else {\n        return publishNestedComposite(metric.value);\n    }\n}\nexports.getMetricValueByType = getMetricValueByType;\nfunction publishNestedComposite(values) {\n    if ((typeof values === \"undefined\" ? \"undefined\" : _typeof(values)) !== \"object\") {\n        return values;\n    }\n    return Object.keys(values).reduce(function (memo, key) {\n        var value = values[key];\n        if ((typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) === \"object\" && value.constructor !== Date) {\n            memo[key] = publishNestedComposite(value);\n        } else if (value.constructor === Date) {\n            memo[key] = new Date(value).getTime();\n        } else if (value.constructor === Boolean) {\n            memo[key] = value.toString();\n        } else {\n            memo[key] = value;\n        }\n        return memo;\n    }, {});\n}\nfunction flatten(arr) {\n    return arr.reduce(function (flat, toFlatten) {\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n    }, []);\n}\nfunction getHighestState(arr) {\n    return arr.sort(function (a, b) {\n        return b.state - a.state;\n    })[0];\n}\nfunction aggregateDescription(arr) {\n    var msg = \"\";\n    arr.forEach(function (m, idx, a) {\n        var path = m.path.join(\".\");\n        if (idx === a.length - 1) {\n            msg += path + \".\" + m.name + \": \" + m.description;\n        } else {\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\n        }\n    });\n    if (msg.length > 100) {\n        return msg.slice(0, 100) + \"...\";\n    } else {\n        return msg;\n    }\n}\nfunction composeMsgForRootStateMetric(system) {\n    var aggregatedState = system.root.getAggregateState();\n    var merged = flatten(aggregatedState);\n    var highestState = getHighestState(merged);\n    var aggregateDesc = aggregateDescription(merged);\n    return {\n        description: aggregateDesc,\n        value: highestState.state\n    };\n}\nexports.composeMsgForRootStateMetric = composeMsgForRootStateMetric;\n//# sourceMappingURL=serializer.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gw1_1 = __webpack_require__(3);\nvar gw3_1 = __webpack_require__(4);\nvar repository_1 = __webpack_require__(5);\nvar version = __webpack_require__(2).version;\nvar windowAsAny = typeof window === \"undefined\" ? {} : window;\nwindowAsAny.tick42 = windowAsAny.tick42 || {};\nexports.default = function (settings) {\n    var options = {\n        connection: settings.connection,\n        identity: settings.identity,\n        logger: settings.logger,\n        heartbeatInterval: settings.heartbeatInterval,\n        settings: {},\n        clickStream: settings.clickStream\n    };\n    if (!options.connection || _typeof(options.connection) !== \"object\") {\n        throw new Error(\"Connection is required parameter\");\n    }\n    var _protocol;\n    if (options.connection.protocolVersion === 3) {\n        _protocol = gw3_1.default(options.connection, settings);\n    } else {\n        _protocol = gw1_1.default(options.connection, settings);\n    }\n    var repo = repository_1.default(options, _protocol);\n    var rootSystem = repo.root;\n    rootSystem.version = version;\n    return rootSystem; // System\n};\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar address_1 = __webpack_require__(9);\nvar count_1 = __webpack_require__(10);\nvar number_1 = __webpack_require__(11);\nvar object_1 = __webpack_require__(12);\nvar rate_1 = __webpack_require__(13);\nvar statistics_1 = __webpack_require__(14);\nvar string_1 = __webpack_require__(15);\nvar timespan_1 = __webpack_require__(16);\nvar timestamp_1 = __webpack_require__(17);\nvar metric_types_1 = __webpack_require__(0);\nfunction system(name, repo, protocol, parent, description) {\n    // Validation\n    // if (!name) throw new Error(\"Name is required. \");\n    if (!repo) {\n        throw new Error(\"Repository is required\");\n    }\n    if (!protocol) {\n        throw new Error(\"Transport is required\");\n    }\n    var _transport = protocol;\n    var _name = name;\n    var _description = description || \"\";\n    var _repo = repo;\n    var _parent = parent;\n    var _path = _buildPath(parent);\n    var _state = {};\n    var id = _arrayToString(_path, \"/\") + name;\n    var identity = repo.identity;\n    var root = repo.root;\n    var _subSystems = [];\n    var _metrics = [];\n    function subSystem(nameSystem, descriptionSystem) {\n        if (!nameSystem || nameSystem.length === 0) {\n            throw new Error(\"name is required\");\n        }\n        var match = _subSystems.filter(function (s) {\n            return s.name === nameSystem;\n        });\n        if (match.length > 0) {\n            return match[0];\n        }\n        var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);\n        _subSystems.push(_system);\n        return _system;\n    }\n    function setState(state, stateDescription) {\n        _state = { state: state, description: stateDescription };\n        _transport.updateSystem(me, _state);\n    }\n    function stringMetric(definition, value) {\n        return _getOrCreateMetric.call(me, definition, metric_types_1.default.STRING, value, function (metricDef) {\n            return string_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function numberMetric(definition, value) {\n        return _getOrCreateMetric.call(me, definition, metric_types_1.default.NUMBER, value, function (metricDef) {\n            return number_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function countMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.COUNT, value, function (metricDef) {\n            return count_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function addressMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.ADDRESS, value, function (metricDef) {\n            return address_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function objectMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.OBJECT, value, function (metricDef) {\n            return object_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function timespanMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.TIMESPAN, value, function (metricDef) {\n            return timespan_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function timestampMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.TIMESTAMP, value, function (metricDef) {\n            return timestamp_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function rateMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.RATE, value, function (metricDef) {\n            return rate_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function statisticsMetric(definition, value) {\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.STATISTICS, value, function (metricDef) {\n            return statistics_1.default(metricDef, me, _transport, value);\n        });\n    }\n    function _unionToMetricDef(def) {\n        var metricDefinition = {};\n        // NOTE: Handle undefined\n        if (typeof def === \"string\") {\n            metricDefinition.name = def;\n        } else {\n            metricDefinition = def;\n        }\n        if (metricDefinition.name === undefined) {\n            throw new Error(\"Metric name is required\");\n        }\n        return metricDefinition;\n    }\n    function _getOrCreateMetric(definition, expectedType, value, createMetric) {\n        var metricDefinition = _unionToMetricDef(definition);\n        var matching = _metrics.filter(function (metric) {\n            return metric.name === metricDefinition.name;\n        });\n        if (matching.length > 0) {\n            var existing = matching[0];\n            if (existing.type !== expectedType) {\n                // NOTE: Extend the error with the already defined metric?\n                throw new Error(\"A metric named \" + metricDefinition.name + \" is already defined with different type.\");\n            }\n            if (typeof value !== \"undefined\") {\n                existing.update(value);\n            }\n            return existing;\n        }\n        var metric = createMetric(metricDefinition);\n        _metrics.push(metric);\n        return metric;\n    }\n    function _buildPath(system) {\n        if (!system || !system.parent) {\n            return [];\n        }\n        var path = _buildPath(system.parent);\n        path.push(system.name);\n        return path;\n    }\n    function _arrayToString(path, separator) {\n        return path && path.length > 0 ? path.join(separator) : \"\";\n    }\n    function getAggregateState() {\n        var aggState = [];\n        if (Object.keys(_state).length > 0) {\n            aggState.push({\n                name: _name,\n                path: _path,\n                state: _state.state,\n                description: _state.description\n            });\n        }\n        _subSystems.forEach(function (subSystem) {\n            var result = subSystem.getAggregateState();\n            if (result.length > 0) {\n                aggState.push(result);\n            }\n        });\n        return aggState;\n    }\n    var me = {\n        get name() {\n            return _name;\n        },\n        get description() {\n            return _description;\n        },\n        get repo() {\n            return _repo;\n        },\n        get parent() {\n            return _parent;\n        },\n        path: _path,\n        id: id,\n        identity: identity,\n        root: root,\n        get subSystems() {\n            return _subSystems;\n        },\n        get metrics() {\n            return _metrics;\n        },\n        subSystem: subSystem,\n        getState: function getState() {\n            return _state;\n        },\n        setState: setState,\n        stringMetric: stringMetric,\n        statisticsMetric: statisticsMetric,\n        rateMetric: rateMetric,\n        timestampMetric: timestampMetric,\n        timespanMetric: timespanMetric,\n        objectMetric: objectMetric,\n        addressMetric: addressMetric,\n        countMetric: countMetric,\n        numberMetric: numberMetric,\n        getAggregateState: getAggregateState\n    };\n    _transport.createSystem(me);\n    return me;\n}\nexports.default = system;\n//# sourceMappingURL=system.js.map\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=tick42-metrics.js.map\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar shortid_1 = __webpack_require__(7);\r\nvar pjson = __webpack_require__(10);\r\nfunction default_1(configuration, ext) {\r\n    var hc;\r\n    if (typeof window !== \"undefined\") {\r\n        hc = window.htmlContainer;\r\n        global = global || window; // ... Safari WebView\r\n    }\r\n    global = global || {}; // ... a bit paranoid\r\n    // when searching for a configuration value check the following chain until the value is resolved:\r\n    //\r\n    // 1. global.GLUE_CONFIG            - a way to override user preferences. Use case is GLUE Mobile\r\n    // 2. userConfig                    - user configuration\r\n    // 3. global.GLUE_DEFAULT_CONFIG    - a way to dynamically override hard coded defaults\r\n    // 4. hardDefaults                  - glue.js hard coded defaults\r\n    var masterConfig = global.GLUE_CONFIG || {};\r\n    var dynamicDefaults = global.GLUE_DEFAULT_CONFIG || {};\r\n    var hardDefaults = getHardDefaults();\r\n    function getMetrics() {\r\n        return {\r\n            identity: {\r\n                system: getConfigProp(\"metrics\", \"system\"),\r\n                service: getConfigProp(\"metrics\", \"service\"),\r\n                instance: getConfigProp(\"metrics\", \"instance\")\r\n            }\r\n        };\r\n    }\r\n    function getGateway() {\r\n        function detectNode() {\r\n            // Only Node.JS has a process variable that is of [[Class]] process\r\n            try {\r\n                return Object.prototype.toString.call(global.process) === \"[object process]\";\r\n            }\r\n            catch (e) {\r\n                // catch all\r\n            }\r\n            return false;\r\n        }\r\n        var gw = hc === undefined;\r\n        if (gw) {\r\n            var gwConfig = getConfigProp(\"gateway\");\r\n            var protocolVersion = getConfigProp(\"gateway\", \"protocolVersion\");\r\n            var reconnectInterval = getConfigProp(\"gateway\", \"reconnectInterval\");\r\n            var ws = gwConfig.ws;\r\n            var http = gwConfig.http;\r\n            var inproc = gwConfig.inproc;\r\n            // if not we will select endpoint for him\r\n            if (!ws && !http && !inproc) {\r\n                if (detectNode() || (\"WebSocket\" in window && window.WebSocket.CLOSING === 2)) {\r\n                    // if in node, or we have WebSockets use ws\r\n                    ws = getConfigProp(\"gateway\", \"ws\");\r\n                }\r\n                else {\r\n                    // fallback to http\r\n                    http = getConfigProp(\"gateway\", \"http\");\r\n                }\r\n            }\r\n            return {\r\n                gwTokenProvider: gwConfig.gwTokenProvider,\r\n                identity: {\r\n                    application: getApplication(),\r\n                },\r\n                reconnectInterval: reconnectInterval,\r\n                ws: ws,\r\n                http: http,\r\n                gw: inproc,\r\n                protocolVersion: protocolVersion,\r\n            };\r\n        }\r\n        return {};\r\n    }\r\n    function getLogger() {\r\n        return getConfigProp(\"logger\");\r\n    }\r\n    function getAgm() {\r\n        return {\r\n            instance: {\r\n                application: getApplication()\r\n            }\r\n        };\r\n    }\r\n    function getApplication() {\r\n        return getConfigProp(\"application\");\r\n    }\r\n    function getAuth() {\r\n        return getConfigProp(\"auth\");\r\n    }\r\n    function getHardDefaults() {\r\n        function getMetricsDefaults(uid) {\r\n            var documentTitle = typeof document !== \"undefined\" ? document.title : \"unknown\";\r\n            // check for empty titles\r\n            documentTitle = documentTitle || \"none\";\r\n            if (typeof hc === \"undefined\") {\r\n                return {\r\n                    system: \"Connect.Browser\",\r\n                    service: configuration.application || documentTitle,\r\n                    instance: \"~\" + uid\r\n                };\r\n            }\r\n            if (typeof hc.metricsFacade.getIdentity !== \"undefined\") {\r\n                var identity = hc.metricsFacade.getIdentity();\r\n                return {\r\n                    system: identity.system,\r\n                    service: identity.service,\r\n                    instance: identity.instance\r\n                };\r\n            }\r\n            // backward compatibility for HC <= 1.60\r\n            return {\r\n                system: \"HtmlContainer.\" + hc.containerName,\r\n                service: \"JS.\" + hc.browserWindowName,\r\n                instance: \"~\" + hc.machineName\r\n            };\r\n        }\r\n        function getGatewayDefaults() {\r\n            function isSecureConnection(protocolVersion) {\r\n                // GW2 and lower in JPM don't have SSL certificates\r\n                if (protocolVersion && protocolVersion <= 2) {\r\n                    return false;\r\n                }\r\n                if (typeof window !== \"undefined\" && window.location) {\r\n                    return window.location.protocol !== \"http:\";\r\n                }\r\n                // Defaults to secure for node env.\r\n                return true;\r\n            }\r\n            var defaultProtocol = 1;\r\n            var gatewayURL = \"localhost:22037\";\r\n            var isSSL = isSecureConnection(defaultProtocol);\r\n            var defaultWs = isSSL ? \"wss://\" + gatewayURL : \"ws://\" + gatewayURL;\r\n            var defaultHttp = isSSL ? \"https://\" + gatewayURL : \"http://\" + gatewayURL;\r\n            return {\r\n                ws: defaultWs,\r\n                http: defaultHttp,\r\n                protocolVersion: defaultProtocol,\r\n                reconnectInterval: 1000\r\n            };\r\n        }\r\n        function getDefaultApplicationName(uid) {\r\n            if (hc) {\r\n                return hc.containerName + \".\" + hc.browserWindowName;\r\n            }\r\n            if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n                return (window.agm_application || document.title) + uid;\r\n            }\r\n            else {\r\n                return \"NodeJS\" + uid;\r\n            }\r\n        }\r\n        var uid = shortid_1.generate();\r\n        return {\r\n            application: getDefaultApplicationName(uid),\r\n            metrics: getMetricsDefaults(uid),\r\n            agm: {},\r\n            gateway: getGatewayDefaults(),\r\n            logger: {\r\n                publish: \"off\",\r\n                console: \"info\",\r\n                metrics: \"off\",\r\n            }\r\n        };\r\n    }\r\n    function getConfigProp(prop1, prop2) {\r\n        var masterConfigProp1 = masterConfig[prop1];\r\n        var userProp1 = configuration[prop1];\r\n        var dynamicDefaultsProp1 = dynamicDefaults[prop1];\r\n        var hardDefaultsProp1 = hardDefaults[prop1];\r\n        if (prop2) {\r\n            if (masterConfigProp1 && masterConfigProp1[prop2] !== undefined) {\r\n                return masterConfig[prop2];\r\n            }\r\n            if (userProp1 && userProp1[prop2] !== undefined) {\r\n                return userProp1[prop2];\r\n            }\r\n            if (dynamicDefaultsProp1 && dynamicDefaultsProp1[prop2] !== undefined) {\r\n                return dynamicDefaultsProp1[prop2];\r\n            }\r\n            if (hardDefaultsProp1 && hardDefaultsProp1[prop2] !== undefined) {\r\n                return hardDefaultsProp1[prop2];\r\n            }\r\n        }\r\n        else {\r\n            if (masterConfigProp1 !== undefined) {\r\n                return masterConfigProp1;\r\n            }\r\n            if (userProp1 !== undefined) {\r\n                return userProp1;\r\n            }\r\n            if (dynamicDefaultsProp1 !== undefined) {\r\n                return dynamicDefaultsProp1;\r\n            }\r\n            if (hardDefaultsProp1 !== undefined) {\r\n                return hardDefaultsProp1;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    return {\r\n        application: getApplication(),\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection: getGateway(),\r\n        metrics: getMetrics(),\r\n        agm: getAgm(),\r\n        version: ext.version || pjson.version,\r\n        libs: ext.libs\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=config.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection = {\r\n    protocolVersion: -1,\r\n    version: \"-1\",\r\n    send: function (product, type, message, id) {\r\n    },\r\n    on: function (product, type, messageHandler) {\r\n        return { type: \"1\", id: 1 };\r\n    },\r\n    off: function (info) {\r\n    },\r\n    login: function (message) {\r\n        return undefined;\r\n    },\r\n    logout: function () {\r\n    },\r\n    loggedIn: function (callback) {\r\n    },\r\n    connected: function (callback) {\r\n    },\r\n    disconnected: function (callback) {\r\n    },\r\n};\r\nexports.default = connection;\r\n//# sourceMappingURL=dummyConnection.js.map\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar glue_1 = __webpack_require__(8);\r\nif (typeof window !== \"undefined\") {\r\n    window.GlueCore = glue_1.default;\r\n}\r\n// add default library for ES6 modules\r\nglue_1.default.default = glue_1.default;\r\nmodule.exports = glue_1.default;\r\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction default_1() {\r\n    function now() {\r\n        return new Date().getTime();\r\n    }\r\n    var startTime = now();\r\n    var endTime;\r\n    var period;\r\n    function stop() {\r\n        endTime = now();\r\n        period = now() - startTime;\r\n        return period;\r\n    }\r\n    return {\r\n        get startTime() {\r\n            return startTime;\r\n        },\r\n        get endTime() {\r\n            return endTime;\r\n        },\r\n        get period() {\r\n            return period;\r\n        },\r\n        stop: stop\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=timer.js.map\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=tick42-glue-core.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tick42-glue-core/dist/web/tick42-glue-core.js\n// module id = 8\n// module chunks = 0","const Model = require('objectmodel');\r\nconst Account = require('../models/Account');\r\nconst Contact = require('../models/Contact');\r\n\r\nvar AccountContactList = Model({\r\n  account: Account,\r\n  contacts: Model.Array(Contact)\r\n})\r\n\r\nmodule.exports = function AccountController(agm, config) {\r\n  return {\r\n    create(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        let account = new Account(args.account);\r\n        agm.invoke('T42.CRM.CreateAccount', {account: args.account}, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      })\r\n    },\r\n    resolve(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        let account = new Account(args.account);\r\n        agm.invoke('T42.CRM.ResolveAccount', {account: args.account}, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      })\r\n    },\r\n    update(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        let account = new Account(args.account);\r\n        const autoCreate = args.autoCreate\r\n        agm.invoke('T42.CRM.UpdateAccount', {account: args.account, autoCreate: autoCreate}, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      })\r\n    },\r\n    delete(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        let account = new Account(args.account);\r\n        agm.invoke('T42.CRM.DeleteAccount', {account: args.account}, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      })\r\n    },\r\n    get(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        let account = new Account(args.account);\r\n        agm.invoke('T42.CRM.GetAccount', {account: args.account}, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      })\r\n    },\r\n    sync(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        let account = new Account(args.account);\r\n        agm.invoke('T42.CRM.SyncAccount', {account: args.account}, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      })\r\n    },\r\n    resolveContactList(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        let contactList = new AccountContactList({ account: args.account, contacts: args.contacts });\r\n        agm.invoke('T42.CRM.ResolveAccountContactList', {account: args.account, contacts: args.contacts }, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      })\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Controllers/AccountController.js","const Contact = require('../models/Contact');\r\nconst Id = require('../models/Contact');\r\nconst Model = require('objectmodel');\r\n\r\nvar Call = Model({\r\n  contact: Contact,\r\n  participants: [Model.Array(Contact)],\r\n  subject: [String],\r\n  dueDate: [String],\r\n  description: [String]\r\n});\r\n\r\nmodule.exports = function ContactController(agm, config) {\r\n  return {\r\n    create(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        const contact = new Contact(args.contact);\r\n        agm.invoke('T42.CRM.CreateContact', {contact: args.contact}, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      });\r\n    },\r\n    resolve(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        const contact = new Contact(args.contact);\r\n        agm.invoke('T42.CRM.ResolveContact', {contact: args.contact}, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      });\r\n    },\r\n    update(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        const contact = new Contact(args.contact);\r\n        const autoCreate = args.autoCreate;\r\n        agm.invoke('T42.CRM.UpdateContact', {contact: args.contact, autoCreate: autoCreate}, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      });\r\n    },\r\n    delete(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        const contact = new Contact(args.contact);\r\n        agm.invoke('T42.CRM.DeleteContact', {contact: args.contact}, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      });\r\n    },\r\n    get(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        const contact = new Contact(args.contact);\r\n        agm.invoke('T42.CRM.GetContact', {contact: args.contact}, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      })\r\n    },\r\n    sync(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        const contact = new Contact(args.contact);\r\n        agm.invoke('T42.CRM.SyncContact', {contact: args.contact}, 'all', {method_response_timeout: config.timeout}, resolve, reject);\r\n      });\r\n    },\r\n    logCall(args) {\r\n      args = args || {};\r\n      return new Promise((resolve, reject) => {\r\n        const call = new Call(args);\r\n        agm.invoke('T42.CRM.LogContactCall', call, 'all', {method_response_timeout: config.timeout}, resolve, reject)\r\n      });\r\n    }\r\n  }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/Controllers/ContactController.js","const definition = {\r\n  \"name\": \"T42.Account\",\r\n  \"properties\": [{\r\n    \"name\": \"ids\",\r\n    \"displayName\": \"IDs\",\r\n    \"type\": \"Composite\",\r\n    \"isArray\": true,\r\n    \"properties\": [{\r\n      \"name\": \"nativeId\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Native ID\",\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"systemName\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"System Name\",\r\n      \"searchType\": \"Exact\"\r\n    }]\r\n  }, {\r\n    \"name\": \"displayName\",\r\n    \"displayName\": \"Display Name\",\r\n    \"type\": \"String\",\r\n    \"searchType\": \"Partial\",\r\n    \"description\": \"Display Name\"\r\n  }, {\r\n    \"name\": \"owner\",\r\n    \"displayName\": \"Owner\",\r\n    \"type\": \"Composite\",\r\n    \"properties\": [{\r\n      \"name\": \"nativeId\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Native ID\",\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"systemName\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"System Name\",\r\n      \"searchType\": \"Exact\"\r\n    }]\r\n  }, {\r\n    \"name\": \"subsidiaries\",\r\n    \"displayName\": \"Subsidiaries\",\r\n    \"type\": \"Composite\",\r\n    \"isArray\": true,\r\n    \"properties\": [{\r\n      \"name\": \"nativeId\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Native ID\",\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"systemName\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"System Name\",\r\n      \"searchType\": \"Exact\"\r\n    }]\r\n  }, {\r\n    \"name\": \"name\",\r\n    \"displayName\": \"Name\",\r\n    \"type\": \"String\",\r\n    \"searchType\": \"Partial\"\r\n  }, {\r\n    \"name\": \"status\",\r\n    \"displayName\": \"Status\",\r\n    \"type\": \"String\", \r\n    \"searchType\": \"Exact\",\r\n    \"description\": \"Status\"\r\n  }, {\r\n    \"name\": \"contacts\",\r\n    \"displayName\": \"Contacts\",\r\n    \"type\": \"Composite\", \r\n    \"isArray\": true,\r\n    \"properties\": [{\r\n      \"name\": \"nativeId\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Native ID\",\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"systemName\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"System Name\",\r\n      \"searchType\": \"Exact\"\r\n    }]\r\n  }, {\r\n    \"name\": \"addresses\",\r\n    \"displayName\": \"Addresses\",\r\n    \"type\": \"Composite\",\r\n    \"isArray\": true,\r\n    \"properties\": [{\r\n      \"name\": \"streetAddress\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Street Address\",\r\n      \"searchType\": \"Partial\"\r\n    }, {\r\n      \"name\": \"city\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"City\",\r\n      \"searchType\": \"Partial\"\r\n    }, {\r\n      \"name\": \"stateOrRegion\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"State or Region\",\r\n      \"searchType\": \"Partial\"\r\n    }, {\r\n      \"name\": \"postalCode\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Postal Code\",\r\n      \"searchType\": \"Partial\"\r\n    }, {\r\n      \"name\": \"country\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Country\",\r\n      \"searchType\": \"Partial\"\r\n    }, {\r\n      \"name\": \"description\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Description\",\r\n      \"searchType\": \"Partial\"\r\n    }]\r\n  }, {\r\n    \"name\": \"phones\",\r\n    \"displayName\": \"Phones\",\r\n    \"type\": \"Composite\",\r\n    \"isArray\": true,\r\n    \"properties\": [{\r\n      \"name\": \"number\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Number\",\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"name\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Name\",\r\n      \"searchType\": \"Exact\"\r\n    }]\r\n  }, {\r\n    \"name\": \"websites\",\r\n    \"displayName\": \"Websites\",\r\n    \"type\": \"String\",\r\n    \"isArray\": true,\r\n    \"searchType\": \"Partial\"\r\n  }, {\r\n    \"name\": \"emailDomains\",\r\n    \"displayName\": \"Email Domains\",\r\n    \"type\": \"String\",\r\n    \"isArray\": true,\r\n    \"searchType\": \"Partial\"\r\n  }, {\r\n    \"name\": \"billingEmailAddress\",\r\n    \"displayName\": \"Billing email address\",\r\n    \"type\": \"String\",\r\n    \"searchType\": \"Partial\"\r\n  }]\r\n}\r\n\r\nmodule.exports = definition;\n\n\n// WEBPACK FOOTER //\n// ./src/GSS/entities/Account.js","const definition = {\r\n  \"name\": \"T42.Contact\",\r\n  \"properties\": [{\r\n    \"name\": \"ids\",\r\n    \"displayName\": \"IDs\",\r\n    \"type\": \"Composite\",\r\n    \"isArray\": true,\r\n    \"properties\": [{\r\n      \"name\": \"nativeId\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Native ID\",\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"systemName\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"System Name\",\r\n      \"searchType\": \"Exact\"\r\n    }]\r\n  }, {\r\n    \"name\": \"displayName\",\r\n    \"displayName\": \"Display Name\",\r\n    \"type\": \"String\",\r\n    \"searchType\": \"Partial\",\r\n    \"description\": \"Display Name\"\r\n  }, {\r\n    \"name\": \"name\",\r\n    \"displayName\": \"Name\",\r\n    \"type\": \"Composite\",\r\n    \"searchType\": \"Partial\",\r\n    \"properties\": [{\r\n      \"name\": \"companyName\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Company Name\",\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"lastName\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Last Name\",\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"firstName\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"First Name\",\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"otherNames\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Other Names\",\r\n      \"isArray\": true,\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"honorific\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Honorific\",\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"postNominalLetters\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Post-nominal Letters\",\r\n      \"isArray\": true,\r\n      \"searchType\": \"Exact\"\r\n    }]\r\n  }, {\r\n    \"name\": \"status\",\r\n    \"displayName\": \"Status\",\r\n    \"type\": \"String\", \r\n    \"searchType\": \"Exact\",\r\n    \"description\": \"Status\"\r\n  }, {\r\n    \"name\": \"isPerson\",\r\n    \"displayName\": \"Is Person\",\r\n    \"type\": \"Bool\", \r\n    \"searchType\": \"Exact\",\r\n    \"description\": \"Is Person\"\r\n  }, {\r\n    \"name\": \"account\",\r\n    \"displayName\": \"Account\",\r\n    \"type\": \"Composite\", \r\n    \"properties\": [{\r\n      \"name\": \"nativeId\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Native ID\",\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"systemName\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"System Name\",\r\n      \"searchType\": \"Exact\"\r\n    }]\r\n  }, {\r\n    \"name\": \"addresses\",\r\n    \"displayName\": \"Addresses\",\r\n    \"type\": \"Composite\",\r\n    \"isArray\": true,\r\n    \"properties\": [{\r\n      \"name\": \"streetAddress\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Street Address\",\r\n      \"searchType\": \"Partial\"\r\n    }, {\r\n      \"name\": \"city\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"City\",\r\n      \"searchType\": \"Partial\"\r\n    }, {\r\n      \"name\": \"stateOrRegion\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"State or Region\",\r\n      \"searchType\": \"Partial\"\r\n    }, {\r\n      \"name\": \"postalCode\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Postal Code\",\r\n      \"searchType\": \"Partial\"\r\n    }, {\r\n      \"name\": \"country\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Country\",\r\n      \"searchType\": \"Partial\"\r\n    }, {\r\n      \"name\": \"description\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Description\",\r\n      \"searchType\": \"Partial\"\r\n    }]\r\n  }, {\r\n    \"name\": \"phones\",\r\n    \"displayName\": \"Phones\",\r\n    \"type\": \"Composite\",\r\n    \"isArray\": true,\r\n    \"properties\": [{\r\n      \"name\": \"number\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Number\",\r\n      \"searchType\": \"Exact\"\r\n    }, {\r\n      \"name\": \"name\",\r\n      \"type\": \"String\",\r\n      \"displayName\": \"Name\",\r\n      \"searchType\": \"Exact\"\r\n    }]\r\n  }, {\r\n    \"name\": \"emails\",\r\n    \"displayName\": \"Emails\",\r\n    \"type\": \"String\",\r\n    \"isArray\": true,\r\n    \"searchType\": \"Partial\"\r\n  }]\r\n}\r\n\r\nmodule.exports = definition;\n\n\n// WEBPACK FOOTER //\n// ./src/GSS/entities/Contact.js","const contact = require('./Contact');\r\nconst account = require('./Account');\r\n\r\nmodule.exports = {\r\n  'T42.Contact': contact,\r\n  'T42.Account': account\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/GSS/entities/index.js","const entitiesDefinitions = require('./entities')\r\n\r\nfunction GSS(agm, options) {  \r\n  let searchProvider = null;\r\n  let searchProviderReady = null;\r\n  var allEntityTypes;\r\n\r\n  const isGssEnabled = ((options.searchProviders && options.searchProviders.length > 0) || options.provider) \r\n\r\n  if (!isGssEnabled) {\r\n    return {\r\n      search() {\r\n        console.log(`GSS isn't enabled.`)\r\n      }, \r\n      addEntityType() {\r\n        console.log(`GSS isn't enabled.`)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (options.side === 'helper' && typeof gss !== \"undefined\") {\r\n    const manager = gss.createDesktopManager(agm, {\r\n      debug: false\r\n    });\r\n    manager.start();\r\n\r\n    if (options.searchProviders && options.searchProviders.length > 0) {\r\n      options.searchProviders.forEach(providerName => {\r\n        manager.add({name: providerName, type: 'agm', application: providerName})\r\n      })\r\n    }\r\n\r\n    var searchService = new gss.GlueSearchService(agm, {\r\n      target: {\r\n        application: options.target\r\n      }\r\n    })\r\n    var searchReady = searchService.ready()\r\n\r\n    searchReady.then(api => {\r\n      api.onEntityTypes((err, entityTypes) => {\r\n        if (err) {\r\n          throw new Error(err)\r\n        }\r\n        allEntityTypes = entityTypes\r\n      })\r\n    })\r\n  }\r\n  \r\n  function addEntityType (name, handler) {\r\n    return new Promise((resolve, reject) => {\r\n      if (typeof name !== 'string') {\r\n        throw Error('A entity name is required to register a search provider');\r\n      }\r\n\r\n      if (entitiesDefinitions[name] === undefined) {\r\n        throw Error(`Unsupported entity: \"${name}\"`);\r\n      }\r\n\r\n      if (typeof handler !== 'function') {\r\n        throw Error('A search handler is required to register a search provider');\r\n      }\r\n\r\n      if (!searchProvider) {\r\n        searchProvider = new gss.GlueSearchProvider(agm, { \r\n          debug: false, \r\n          measureLatency: false,\r\n          target: {\r\n            application: options.target\r\n          }\r\n        })\r\n\r\n        searchProviderReady = searchProvider.start()\r\n      }\r\n      \r\n      searchProviderReady\r\n        .then(() => {\r\n          const entity = gss.GssEntityType.fromJS(entitiesDefinitions[name]);\r\n          searchProvider.addEntityType(entity, handler);\r\n          resolve();\r\n        })\r\n        .catch(reject)\r\n    });\r\n  }\r\n\r\n  function search (name, query) {\r\n    return new Promise((resolve, reject) => {\r\n      searchReady.then(api => {\r\n        let response = [];\r\n        const entityType = allEntityTypes && allEntityTypes.get(name);\r\n        if (!entityType) {\r\n          return reject('Search provider not found')\r\n        }\r\n        const currentQuery = searchService.createQuery(entityType);\r\n        \r\n        currentQuery\r\n          .onData(result => {\r\n            response = response.concat(result.entities)\r\n            if (result.isLast) {\r\n              resolve(response)\r\n            }\r\n          })\r\n          .search(query)\r\n      }).catch(reject)\r\n    });\r\n  }\r\n\r\n  return {\r\n    addEntityType: addEntityType,\r\n    search: search\r\n  }\r\n}\r\n\r\nmodule.exports = GSS;\n\n\n// WEBPACK FOOTER //\n// ./src/GSS/index.js","const constants = require('./constants');\r\n\r\nmodule.exports = [{\r\n  side: 'crm',\r\n  name: constants.CRM_PREFIX + 'CreateContact',\r\n  accepts: constants.SIGNATURES.CONTACT,\r\n  description: '',\r\n  displayName: 'Create Contact',\r\n  objectTypes: []\r\n}, {\r\n  side: 'both',\r\n  name: constants.CRM_PREFIX + 'GetContact',\r\n  accepts: constants.SIGNATURES.CONTACT,\r\n  description: '',\r\n  displayName: 'Get Contact',\r\n  objectTypes: []\r\n}, {\r\n  side: 'helper',\r\n  name: constants.CRM_PREFIX + 'ResolveContact',\r\n  accepts: constants.SIGNATURES.CONTACT,\r\n  description: '',\r\n  displayName: 'Resolve Contact',\r\n  objectTypes: []\r\n}, {\r\n  side: 'crm',\r\n  name: constants.CRM_PREFIX + 'UpdateContact',\r\n  accepts: 'Bool? autoCreate, ' + constants.SIGNATURES.CONTACT,\r\n  description: '',\r\n  displayName: 'Update Contact',\r\n  objectTypes: []\r\n}, {\r\n  side: 'crm',\r\n  name: constants.CRM_PREFIX + 'DeleteContact',\r\n  accepts: constants.SIGNATURES.CONTACT,\r\n  description: '',\r\n  displayName: 'Delete Contact',\r\n  objectTypes: []\r\n}, {\r\n  side: 'both',\r\n  name: constants.CRM_PREFIX + 'SyncContact',\r\n  accepts: constants.SIGNATURES.CONTACT,\r\n  description: '',\r\n  displayName: 'Sync Contact',\r\n  objectTypes: []\r\n}, {\r\n  side: 'both',\r\n  name: constants.CRM_PREFIX + 'GetAccount',\r\n  accepts: constants.SIGNATURES.ACCOUNT,\r\n  description: '',\r\n  displayName: 'Get Account',\r\n  objectTypes: []\r\n}, {\r\n  side: 'crm',\r\n  name: constants.CRM_PREFIX + 'CreateAccount',\r\n  accepts: constants.SIGNATURES.ACCOUNT,\r\n  description: '',\r\n  displayName: 'Create Account',\r\n  objectTypes: []\r\n}, {\r\n  side: 'helper',\r\n  name: constants.CRM_PREFIX + 'ResolveAccount',\r\n  accepts: constants.SIGNATURES.ACCOUNT,\r\n  description: '',\r\n  displayName: 'Resolve Contact',\r\n  objectTypes: []\r\n}, {\r\n  side: 'crm',\r\n  name: constants.CRM_PREFIX + 'UpdateAccount',\r\n  accepts: 'Bool? autoCreate, ' + constants.SIGNATURES.ACCOUNT,\r\n  description: '',\r\n  displayName: 'Update Account',\r\n  objectTypes: []\r\n}, {\r\n  side: 'crm',\r\n  name: constants.CRM_PREFIX + 'DeleteAccount',\r\n  accepts: constants.SIGNATURES.ACCOUNT,\r\n  description: '',\r\n  displayName: 'Delete Account',\r\n  objectTypes: []\r\n}, {\r\n  side: 'both',\r\n  name: constants.CRM_PREFIX + 'SyncAccount',\r\n  accepts: constants.SIGNATURES.ACCOUNT,\r\n  description: '',\r\n  displayName: 'Sync Account',\r\n  objectTypes: []\r\n}, {\r\n  side: 'helper',\r\n  name: constants.CRM_PREFIX + 'ResolveAccountContactList',\r\n  accepts: constants.SIGNATURES.CONTACTS + \", \" + constants.SIGNATURES.ACCOUNT,\r\n  description: '',\r\n  displayName: 'Resolve Account Contact List',\r\n  objectTypes: []\r\n}, {\r\n  side: 'crm',\r\n  name: constants.CRM_PREFIX + 'LogContactCall',\r\n  accepts: '',\r\n  description: '',\r\n  displayName: 'Log contact call',\r\n  objectTypes: []\r\n}, {\r\n  side: 'both',\r\n  name: constants.CRM_PREFIX + 'SearchContact',\r\n  accepts: '',\r\n  description: '',\r\n  displayName: 'Search a contact',\r\n  objectTypes: []\r\n}];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/methods.js","const Model = require('objectmodel');\nconst Id = require('./Id');\nconst Address = require('./Address');\nconst Phone = require('./Phone');\n\nmodule.exports = Model({\n  ids: Model.Array(Id),\n  displayName: [String],\n  owner: [Id],\n  subsidiaries: [Model.Array(Id)],\n  name: [String],\n  status: [String],\n  contacts: [Model.Array(Id)],\n  addresses: [Model.Array(Address)],\n  phones: [Model.Array(Phone)],\n  websites: [Model.Array(String)],\n  emailDomains: [Model.Array(String)],\n  billingEmailAddress: [String],\n});\n\n\n// WEBPACK FOOTER //\n// ./src/models/Account.js","const Model = require('objectmodel');\n\nmodule.exports = Model({\n  companyName: [String],\n  lastName: [String],\n  firstName: [String],\n  otherNames: [Model.Array(String)],\n  honorific: [String],\n  postNominalLetters: [Model.Array(String)]\n});\n\n\n// WEBPACK FOOTER //\n// ./src/models/Name.js","const GlueCore = require('tick42-glue-core');\r\nconst defaultConfig = require('./config.js');\r\nconst CRMCreator = require('./crm.js');\r\n\r\nmodule.exports = function Tick42CRM(options) {\r\n  const crmConfig = {\r\n    side: options.side || defaultConfig.side,\r\n    timeout: options.timeout || defaultConfig.timeout,\r\n    target: options.application || 'GssDesktopManager',\r\n    searchProviders: options.searchProviders || [],\r\n    provider: options.provider\r\n  }\r\n  \r\n  const glueConfig = Object.assign({}, defaultConfig.glue, options);\r\n  glueConfig.auth = glueConfig.authentication;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let gluePromise;\r\n    if (options.glue) {\r\n      gluePromise = Promise.resolve(options.glue);\r\n    } else {\r\n      gluePromise = GlueCore(glueConfig);\r\n    }\r\n\r\n    gluePromise\r\n      .then(glue => {\r\n        const CRM = CRMCreator(glue.agm, crmConfig);\r\n        resolve({\r\n          CRM, glue\r\n        });\r\n      }).catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}